Shader "Hidden/ScionDepthOfField" {
	Properties {
		_MainTex ("Base (RGB)", 2D) = "white" {}
	}
	SubShader {
		Pass {
			Name "TILEDDATAHORIZONTAL"
			ZClip Off
			ZWrite Off
			Cull Off
			Fog {
				Mode Off
			}
			GpuProgramID 22540
			Program "vp" {
				SubProgram "d3d9 " {
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float _CoCUVOffset;
					//   sampler2D _HalfResSourceDepthTexture;
					//   float _ScionForwardMSAAFix;
					//
					//
					// Registers:
					//
					//   Name                       Reg   Size
					//   -------------------------- ----- ----
					//   _CoCUVOffset               c0       1
					//   _ScionForwardMSAAFix       c1       1
					//   _HalfResSourceDepthTexture s0       1
					//
					
					    ps_3_0
					    def c2, -0.5, 0.5, 1.5, 2.5
					    def c3, -4.5, -3.5, -2.5, -1.5
					    def c4, -2, 1, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    mad r0.x, v0.y, c4.x, c4.y
					    mad r0.y, c1.x, r0.x, v0.y
					    mov r1.x, c0.x
					    mad r2, r1.x, c3, v0.x
					    mul r0.xzw, r2.x, c4.yyzz
					    texldl r3, r0, s0
					    mul r0.xzw, r2.yyxx, c4.yyzz
					    texldl r4, r0, s0
					    max r1.y, r3.w, r4.w
					    min r1.z, r4.w, r3.w
					    mul r0.xzw, r2.zyxx, c4.yyzz
					    mul r2.xz, r2.wyxw, c4.yyzw
					    texldl r3, r0, s0
					    mov r2.y, r0.y
					    max r0.x, r1.y, r3.w
					    min r0.y, r3.w, r1.z
					    texldl r3, r2.xyzz, s0
					    max r1.y, r0.x, r3.w
					    min r1.z, r3.w, r0.y
					    mad r0, r1.x, c2.wyxz, v0.x
					    mov r2.w, r0.z
					    texldl r3, r2.wyzz, s0
					    max r4.x, r1.y, r3.w
					    min r4.y, r3.w, r1.z
					    mov r2.xw, r0.yyzw
					    texldl r3, r2.xyzz, s0
					    texldl r5, r2.wyzz, s0
					    mov r0.yzw, r2.xzyz
					    max r1.y, r4.x, r3.w
					    min r1.z, r3.w, r4.y
					    min r2.x, r5.w, r1.z
					    max r2.y, r1.y, r5.w
					    texldl r3, r0.xzyw, s0
					    max r1.y, r2.y, r3.w
					    min r1.z, r3.w, r2.x
					    mad r0.xy, r1.x, -c3.yxzw, v0.x
					    texldl r2, r0.xzww, s0
					    texldl r0, r0.yzww, s0
					    max r0.x, r1.y, r2.w
					    min r0.y, r2.w, r1.z
					    min oC0.y, r0.w, r0.y
					    max oC0.x, r0.x, r0.w
					    mov oC0.zw, c4.z
					
					// approximately 53 instruction slots used (20 texture, 33 arithmetic)"
				}
				SubProgram "d3d11 " {
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[16];
						float _CoCUVOffset;
						float _ScionForwardMSAAFix;
						vec4 unused_0_3[4];
					};
					uniform  sampler2D _HalfResSourceDepthTexture;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					float u_xlat5;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD0.y * -2.0 + 1.0;
					    u_xlat0.x = _ScionForwardMSAAFix * u_xlat0.x + vs_TEXCOORD0.y;
					    u_xlat1 = vec4(_CoCUVOffset) * vec4(-1.5, -4.5, -3.5, -2.5) + vs_TEXCOORD0.xxxx;
					    u_xlat0.yzw = u_xlat1.yzw;
					    u_xlat2 = textureLod(_HalfResSourceDepthTexture, u_xlat0.yx, 0.0);
					    u_xlat3 = textureLod(_HalfResSourceDepthTexture, u_xlat0.zx, 0.0);
					    u_xlat4 = textureLod(_HalfResSourceDepthTexture, u_xlat0.wx, 0.0);
					    u_xlat1.y = u_xlat0.x;
					    u_xlat0.x = max(u_xlat2.w, u_xlat3.w);
					    u_xlat5 = min(u_xlat2.w, u_xlat3.w);
					    u_xlat5 = min(u_xlat4.w, u_xlat5);
					    u_xlat0.x = max(u_xlat4.w, u_xlat0.x);
					    u_xlat2 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat0.x = max(u_xlat0.x, u_xlat2.w);
					    u_xlat5 = min(u_xlat5, u_xlat2.w);
					    u_xlat2 = vec4(_CoCUVOffset) * vec4(1.5, 2.5, -0.5, 0.5) + vs_TEXCOORD0.xxxx;
					    u_xlat1.zw = u_xlat2.zw;
					    u_xlat3 = textureLod(_HalfResSourceDepthTexture, u_xlat1.zy, 0.0);
					    u_xlat4 = textureLod(_HalfResSourceDepthTexture, u_xlat1.wy, 0.0);
					    u_xlat2.z = u_xlat1.y;
					    u_xlat0.x = max(u_xlat0.x, u_xlat3.w);
					    u_xlat5 = min(u_xlat5, u_xlat3.w);
					    u_xlat5 = min(u_xlat4.w, u_xlat5);
					    u_xlat0.x = max(u_xlat4.w, u_xlat0.x);
					    u_xlat1 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xz, 0.0);
					    u_xlat3 = textureLod(_HalfResSourceDepthTexture, u_xlat2.yz, 0.0);
					    u_xlat0.x = max(u_xlat0.x, u_xlat1.w);
					    u_xlat5 = min(u_xlat5, u_xlat1.w);
					    u_xlat5 = min(u_xlat3.w, u_xlat5);
					    u_xlat0.x = max(u_xlat3.w, u_xlat0.x);
					    u_xlat2.xy = vec2(_CoCUVOffset) * vec2(3.5, 4.5) + vs_TEXCOORD0.xx;
					    u_xlat1 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xz, 0.0);
					    u_xlat2 = textureLod(_HalfResSourceDepthTexture, u_xlat2.yz, 0.0);
					    u_xlat0.x = max(u_xlat0.x, u_xlat1.w);
					    u_xlat5 = min(u_xlat5, u_xlat1.w);
					    SV_Target0.y = min(u_xlat2.w, u_xlat5);
					    SV_Target0.x = max(u_xlat2.w, u_xlat0.x);
					    SV_Target0.zw = vec2(0.0, 0.0);
					    return;
					}"
				}
			}
		}
		Pass {
			Name "TILEDDATAVERTICAL"
			ZClip Off
			ZWrite Off
			Cull Off
			Fog {
				Mode Off
			}
			GpuProgramID 95179
			Program "vp" {
				SubProgram "d3d9 " {
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float _CoCUVOffset;
					//   sampler2D _HorizontalTileResult;
					//
					//
					// Registers:
					//
					//   Name                  Reg   Size
					//   --------------------- ----- ----
					//   _CoCUVOffset          c0       1
					//   _HorizontalTileResult s0       1
					//
					
					    ps_3_0
					    def c1, -0.5, 0.5, 1.5, 2.5
					    def c2, -4.5, -3.5, -2.5, -1.5
					    def c3, 1, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    mul r0.xzw, c3.xyyy, v0.x
					    mov r1.x, c0.x
					    mad r2, r1.x, c2.xwyz, v0.y
					    mov r0.y, r2.x
					    texldl r0, r0, s0
					    mul r3.xzw, c3.xyyy, v0.x
					    mov r3.y, r2.z
					    texldl r3, r3, s0
					    max r1.y, r0.x, r3.x
					    min r1.z, r3.y, r0.y
					    mov r0.y, r2.w
					    mul r0.xzw, c3.xyyy, v0.x
					    texldl r0, r0, s0
					    max r3.x, r1.y, r0.x
					    min r3.y, r0.y, r1.z
					    mul r2.xzw, c3.xyyy, v0.x
					    texldl r0, r2, s0
					    max r1.y, r3.x, r0.x
					    min r1.z, r0.y, r3.y
					    mul r0.xzw, c3.xyyy, v0.x
					    mad r2, r1.x, c1.xwyz, v0.y
					    mov r0.y, r2.x
					    texldl r0, r0, s0
					    max r3.x, r1.y, r0.x
					    min r3.y, r0.y, r1.z
					    mul r0.xzw, c3.xyyy, v0.x
					    mov r0.y, r2.z
					    texldl r0, r0, s0
					    max r1.y, r3.x, r0.x
					    min r1.z, r0.y, r3.y
					    mov r0.y, r2.w
					    mul r0.xzw, c3.xyyy, v0.x
					    texldl r0, r0, s0
					    max r3.x, r1.y, r0.x
					    min r3.y, r0.y, r1.z
					    mul r2.xzw, c3.xyyy, v0.x
					    texldl r0, r2, s0
					    max r1.y, r3.x, r0.x
					    min r1.z, r0.y, r3.y
					    mad r0.xy, r1.x, -c2.yxzw, v0.y
					    mul r0.zw, c3.xyxy, v0.x
					    texldl r2, r0.zxww, s0
					    texldl r0, r0.zyww, s0
					    max r0.z, r1.y, r2.x
					    min r0.w, r2.y, r1.z
					    min oC0.y, r0.y, r0.w
					    max oC0.x, r0.z, r0.x
					    mov oC0.zw, c3.y
					
					// approximately 58 instruction slots used (20 texture, 38 arithmetic)"
				}
				SubProgram "d3d11 " {
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[16];
						float _CoCUVOffset;
						vec4 unused_0_2[4];
					};
					uniform  sampler2D _HorizontalTileResult;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					float u_xlat4;
					void main()
					{
					    u_xlat0.xz = vs_TEXCOORD0.xx;
					    u_xlat1 = vec4(_CoCUVOffset) * vec4(-4.5, -2.5, -3.5, -1.5) + vs_TEXCOORD0.yyyy;
					    u_xlat0.yw = u_xlat1.xz;
					    u_xlat2 = textureLod(_HorizontalTileResult, u_xlat0.xy, 0.0);
					    u_xlat0 = textureLod(_HorizontalTileResult, u_xlat0.zw, 0.0);
					    u_xlat0.x = max(u_xlat0.x, u_xlat2.x);
					    u_xlat4 = min(u_xlat0.y, u_xlat2.y);
					    u_xlat1.xz = vs_TEXCOORD0.xx;
					    u_xlat2 = textureLod(_HorizontalTileResult, u_xlat1.xy, 0.0);
					    u_xlat1 = textureLod(_HorizontalTileResult, u_xlat1.zw, 0.0);
					    u_xlat0.x = max(u_xlat0.x, u_xlat2.x);
					    u_xlat4 = min(u_xlat4, u_xlat2.y);
					    u_xlat4 = min(u_xlat1.y, u_xlat4);
					    u_xlat0.x = max(u_xlat1.x, u_xlat0.x);
					    u_xlat1.xz = vs_TEXCOORD0.xx;
					    u_xlat2 = vec4(_CoCUVOffset) * vec4(-0.5, 1.5, 0.5, 2.5) + vs_TEXCOORD0.yyyy;
					    u_xlat1.yw = u_xlat2.xz;
					    u_xlat3 = textureLod(_HorizontalTileResult, u_xlat1.xy, 0.0);
					    u_xlat1 = textureLod(_HorizontalTileResult, u_xlat1.zw, 0.0);
					    u_xlat0.x = max(u_xlat0.x, u_xlat3.x);
					    u_xlat4 = min(u_xlat4, u_xlat3.y);
					    u_xlat4 = min(u_xlat1.y, u_xlat4);
					    u_xlat0.x = max(u_xlat1.x, u_xlat0.x);
					    u_xlat2.xz = vs_TEXCOORD0.xx;
					    u_xlat1 = textureLod(_HorizontalTileResult, u_xlat2.xy, 0.0);
					    u_xlat2 = textureLod(_HorizontalTileResult, u_xlat2.zw, 0.0);
					    u_xlat0.x = max(u_xlat0.x, u_xlat1.x);
					    u_xlat4 = min(u_xlat4, u_xlat1.y);
					    u_xlat4 = min(u_xlat2.y, u_xlat4);
					    u_xlat0.x = max(u_xlat2.x, u_xlat0.x);
					    u_xlat1.xy = vec2(_CoCUVOffset) * vec2(3.5, 4.5) + vs_TEXCOORD0.yy;
					    u_xlat1.z = vs_TEXCOORD0.x;
					    u_xlat2 = textureLod(_HorizontalTileResult, u_xlat1.zx, 0.0);
					    u_xlat1 = textureLod(_HorizontalTileResult, u_xlat1.zy, 0.0);
					    u_xlat0.x = max(u_xlat0.x, u_xlat2.x);
					    u_xlat4 = min(u_xlat4, u_xlat2.y);
					    SV_Target0.y = min(u_xlat1.y, u_xlat4);
					    SV_Target0.x = max(u_xlat1.x, u_xlat0.x);
					    SV_Target0.zw = vec2(0.0, 0.0);
					    return;
					}"
				}
			}
		}
		Pass {
			Name "NEIGHBOURHOODDATAGATHER"
			ZClip Off
			ZWrite Off
			Cull Off
			Fog {
				Mode Off
			}
			GpuProgramID 148475
			Program "vp" {
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _CoCParams2;
					//   float4 _NeighbourhoodParams;
					//   sampler2D _TiledData;
					//   sampler2D _VirtualCameraTexture2;
					//
					//
					// Registers:
					//
					//   Name                   Reg   Size
					//   ---------------------- ----- ----
					//   _CoCParams2            c0       1
					//   _NeighbourhoodParams   c1       1
					//   _VirtualCameraTexture2 s0       1
					//   _TiledData             s1       1
					//
					
					    ps_3_0
					    def c2, 0, 0.5, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    mov r0.w, v0.x
					    add r0.xy, -c1, v0
					    mov r0.z, c2.x
					    texldl r1, r0.wyzz, s1
					    mov r2.xz, r0.wyzw
					    texldl r3, r0.xyzz, s1
					    max r4.x, r3.x, r1.x
					    min r4.y, r1.y, r3.y
					    mov r1.zw, r0.xyyz
					    add r1.xy, c1, v0
					    texldl r3, r1.xzww, s1
					    max r1.z, r4.x, r3.x
					    min r5.x, r3.y, r4.y
					    mov r0.y, v0.y
					    texldl r3, r0.xyzz, s1
					    max r0.y, r1.z, r3.x
					    min r1.z, r3.y, r5.x
					    mov r2.y, v0.y
					    texldl r3, r2.xyzz, s1
					    max r2.y, r0.y, r3.x
					    min r0.y, r3.y, r1.z
					    mov r3.xzw, r1.xyww
					    texldl r4, r1.xyww, s1
					    mov r0.w, r1.y
					    mov r3.y, v0.y
					    texldl r1, r3, s1
					    max r3.x, r2.y, r1.x
					    min r2.y, r1.y, r0.y
					    texldl r1, r0.xwzz, s1
					    mov r2.w, r0.w
					    texldl r0, r2.xwzz, s1
					    max r0.z, r3.x, r1.x
					    min r0.w, r1.y, r2.y
					    min r1.x, r0.y, r0.w
					    max r1.y, r0.z, r0.x
					    max r0.x, r1.y, r4.x
					    min r0.y, r4.y, r1.x
					    rcp r0.x, r0.x
					    texldl r1, c2.yyxx, s0
					    mad r0.x, r0.x, r1.y, r1.z
					    rcp r0.z, r0.y
					    mov oC0.y, r0.y
					    mad r0.y, r0.z, r1.y, r1.z
					    max r1.x, r0_abs.x, r0_abs.y
					    min oC0.x, c0.x, r1.x
					    mov oC0.zw, c2.x
					
					// approximately 56 instruction slots used (20 texture, 36 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[11];
						vec4 _CoCParams2;
						vec4 unused_0_2[5];
						vec4 _NeighbourhoodParams;
						vec4 unused_0_4[3];
					};
					uniform  sampler2D _TiledData;
					uniform  sampler2D _VirtualCameraTexture2;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					float u_xlat5;
					float u_xlat10;
					float u_xlat15;
					void main()
					{
					    u_xlat0.zw = vs_TEXCOORD0.xy;
					    u_xlat0.xy = vs_TEXCOORD0.xy + (-_NeighbourhoodParams.xy);
					    u_xlat1 = textureLod(_TiledData, u_xlat0.zy, 0.0);
					    u_xlat2 = textureLod(_TiledData, u_xlat0.xw, 0.0);
					    u_xlat3 = textureLod(_TiledData, u_xlat0.xy, 0.0);
					    u_xlat15 = max(u_xlat1.x, u_xlat3.x);
					    u_xlat1.x = min(u_xlat1.y, u_xlat3.y);
					    u_xlat3.z = u_xlat0.y;
					    u_xlat3.xy = vs_TEXCOORD0.xy + _NeighbourhoodParams.xy;
					    u_xlat4 = textureLod(_TiledData, u_xlat3.xz, 0.0);
					    u_xlat15 = max(u_xlat15, u_xlat4.x);
					    u_xlat1.x = min(u_xlat1.x, u_xlat4.y);
					    u_xlat1.x = min(u_xlat2.y, u_xlat1.x);
					    u_xlat15 = max(u_xlat2.x, u_xlat15);
					    u_xlat2 = textureLod(_TiledData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat15 = max(u_xlat15, u_xlat2.x);
					    u_xlat1.x = min(u_xlat1.x, u_xlat2.y);
					    u_xlat3.w = vs_TEXCOORD0.y;
					    u_xlat2 = textureLod(_TiledData, u_xlat3.xw, 0.0);
					    u_xlat15 = max(u_xlat15, u_xlat2.x);
					    u_xlat1.x = min(u_xlat1.x, u_xlat2.y);
					    u_xlat0.y = u_xlat3.y;
					    u_xlat2 = textureLod(_TiledData, u_xlat3.xy, 0.0);
					    u_xlat3 = textureLod(_TiledData, u_xlat0.xy, 0.0);
					    u_xlat0.x = max(u_xlat15, u_xlat3.x);
					    u_xlat15 = min(u_xlat1.x, u_xlat3.y);
					    u_xlat0.z = vs_TEXCOORD0.x;
					    u_xlat1 = textureLod(_TiledData, u_xlat0.zy, 0.0);
					    u_xlat0.x = max(u_xlat0.x, u_xlat1.x);
					    u_xlat5 = min(u_xlat15, u_xlat1.y);
					    u_xlat5 = min(u_xlat2.y, u_xlat5);
					    u_xlat0.x = max(u_xlat2.x, u_xlat0.x);
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat1 = textureLod(_VirtualCameraTexture2, vec2(0.5, 0.5), 0.0);
					    u_xlat0.x = u_xlat0.x * u_xlat1.y + u_xlat1.z;
					    u_xlat10 = float(1.0) / u_xlat5;
					    SV_Target0.y = u_xlat5;
					    u_xlat5 = u_xlat10 * u_xlat1.y + u_xlat1.z;
					    u_xlat0.x = max(abs(u_xlat5), abs(u_xlat0.x));
					    SV_Target0.x = min(u_xlat0.x, _CoCParams2.x);
					    SV_Target0.zw = vec2(0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _CoCParams1;
					//   float4 _CoCParams2;
					//   float4 _NeighbourhoodParams;
					//   sampler2D _TiledData;
					//   sampler2D _VirtualCameraTexture2;
					//
					//
					// Registers:
					//
					//   Name                   Reg   Size
					//   ---------------------- ----- ----
					//   _CoCParams1            c0       1
					//   _CoCParams2            c1       1
					//   _NeighbourhoodParams   c2       1
					//   _VirtualCameraTexture2 s0       1
					//   _TiledData             s1       1
					//
					
					    ps_3_0
					    def c3, 0, 0.5, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    mov r0.w, v0.x
					    add r0.xy, -c2, v0
					    mov r0.z, c3.x
					    texldl r1, r0.wyzz, s1
					    mov r2.xz, r0.wyzw
					    texldl r3, r0.xyzz, s1
					    max r4.x, r3.x, r1.x
					    min r4.y, r1.y, r3.y
					    mov r1.zw, r0.xyyz
					    add r1.xy, c2, v0
					    texldl r3, r1.xzww, s1
					    max r1.z, r4.x, r3.x
					    min r5.x, r3.y, r4.y
					    mov r0.y, v0.y
					    texldl r3, r0.xyzz, s1
					    max r0.y, r1.z, r3.x
					    min r1.z, r3.y, r5.x
					    mov r2.y, v0.y
					    texldl r3, r2.xyzz, s1
					    max r2.y, r0.y, r3.x
					    min r0.y, r3.y, r1.z
					    mov r3.xzw, r1.xyww
					    texldl r4, r1.xyww, s1
					    mov r0.w, r1.y
					    mov r3.y, v0.y
					    texldl r1, r3, s1
					    max r3.x, r2.y, r1.x
					    min r2.y, r1.y, r0.y
					    texldl r1, r0.xwzz, s1
					    mov r2.w, r0.w
					    texldl r0, r2.xwzz, s1
					    max r0.z, r3.x, r1.x
					    min r0.w, r1.y, r2.y
					    min r1.x, r0.y, r0.w
					    max r1.y, r0.z, r0.x
					    max r0.x, r1.y, r4.x
					    min r0.y, r4.y, r1.x
					    add r0.z, -r0.x, c0.z
					    max r1.x, r0.z, -c0.w
					    min r0.z, c0.w, r1.x
					    add r0.x, r0.z, r0.x
					    rcp r0.x, r0.x
					    texldl r1, c3.yyxx, s0
					    mad r0.x, r0.x, r1.y, r1.z
					    add r0.z, -r0.y, c0.z
					    max r1.x, r0.z, -c0.w
					    min r0.z, c0.w, r1.x
					    add r0.z, r0.z, r0.y
					    mov oC0.y, r0.y
					    rcp r0.y, r0.z
					    mad r0.y, r0.y, r1.y, r1.z
					    max r1.x, r0_abs.x, r0_abs.y
					    min oC0.x, c1.x, r1.x
					    mov oC0.zw, c3.x
					
					// approximately 64 instruction slots used (20 texture, 44 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[10];
						vec4 _CoCParams1;
						vec4 _CoCParams2;
						vec4 unused_0_3[5];
						vec4 _NeighbourhoodParams;
						vec4 unused_0_5[3];
					};
					uniform  sampler2D _TiledData;
					uniform  sampler2D _VirtualCameraTexture2;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					float u_xlat5;
					float u_xlat10;
					float u_xlat15;
					void main()
					{
					    u_xlat0.zw = vs_TEXCOORD0.xy;
					    u_xlat0.xy = vs_TEXCOORD0.xy + (-_NeighbourhoodParams.xy);
					    u_xlat1 = textureLod(_TiledData, u_xlat0.zy, 0.0);
					    u_xlat2 = textureLod(_TiledData, u_xlat0.xw, 0.0);
					    u_xlat3 = textureLod(_TiledData, u_xlat0.xy, 0.0);
					    u_xlat15 = max(u_xlat1.x, u_xlat3.x);
					    u_xlat1.x = min(u_xlat1.y, u_xlat3.y);
					    u_xlat3.z = u_xlat0.y;
					    u_xlat3.xy = vs_TEXCOORD0.xy + _NeighbourhoodParams.xy;
					    u_xlat4 = textureLod(_TiledData, u_xlat3.xz, 0.0);
					    u_xlat15 = max(u_xlat15, u_xlat4.x);
					    u_xlat1.x = min(u_xlat1.x, u_xlat4.y);
					    u_xlat1.x = min(u_xlat2.y, u_xlat1.x);
					    u_xlat15 = max(u_xlat2.x, u_xlat15);
					    u_xlat2 = textureLod(_TiledData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat15 = max(u_xlat15, u_xlat2.x);
					    u_xlat1.x = min(u_xlat1.x, u_xlat2.y);
					    u_xlat3.w = vs_TEXCOORD0.y;
					    u_xlat2 = textureLod(_TiledData, u_xlat3.xw, 0.0);
					    u_xlat15 = max(u_xlat15, u_xlat2.x);
					    u_xlat1.x = min(u_xlat1.x, u_xlat2.y);
					    u_xlat0.y = u_xlat3.y;
					    u_xlat2 = textureLod(_TiledData, u_xlat3.xy, 0.0);
					    u_xlat3 = textureLod(_TiledData, u_xlat0.xy, 0.0);
					    u_xlat0.x = max(u_xlat15, u_xlat3.x);
					    u_xlat15 = min(u_xlat1.x, u_xlat3.y);
					    u_xlat0.z = vs_TEXCOORD0.x;
					    u_xlat1 = textureLod(_TiledData, u_xlat0.zy, 0.0);
					    u_xlat0.x = max(u_xlat0.x, u_xlat1.x);
					    u_xlat5 = min(u_xlat15, u_xlat1.y);
					    u_xlat5 = min(u_xlat2.y, u_xlat5);
					    u_xlat0.x = max(u_xlat2.x, u_xlat0.x);
					    u_xlat10 = (-u_xlat0.x) + _CoCParams1.z;
					    u_xlat10 = max(u_xlat10, (-_CoCParams1.w));
					    u_xlat10 = min(u_xlat10, _CoCParams1.w);
					    u_xlat0.x = u_xlat10 + u_xlat0.x;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat1 = textureLod(_VirtualCameraTexture2, vec2(0.5, 0.5), 0.0);
					    u_xlat0.x = u_xlat0.x * u_xlat1.y + u_xlat1.z;
					    u_xlat10 = (-u_xlat5) + _CoCParams1.z;
					    u_xlat10 = max(u_xlat10, (-_CoCParams1.w));
					    u_xlat10 = min(u_xlat10, _CoCParams1.w);
					    u_xlat10 = u_xlat10 + u_xlat5;
					    SV_Target0.y = u_xlat5;
					    u_xlat5 = float(1.0) / u_xlat10;
					    u_xlat5 = u_xlat5 * u_xlat1.y + u_xlat1.z;
					    u_xlat0.x = max(abs(u_xlat5), abs(u_xlat0.x));
					    SV_Target0.x = min(u_xlat0.x, _CoCParams2.x);
					    SV_Target0.zw = vec2(0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _AvgCenterDepth;
					//   float4 _CoCParams2;
					//   float4 _NeighbourhoodParams;
					//   sampler2D _TiledData;
					//   float4 _VirtualCameraParams2;
					//   sampler2D _VirtualCameraTexture1;
					//
					//
					// Registers:
					//
					//   Name                   Reg   Size
					//   ---------------------- ----- ----
					//   _VirtualCameraParams2  c0       1
					//   _CoCParams2            c1       1
					//   _NeighbourhoodParams   c2       1
					//   _VirtualCameraTexture1 s0       1
					//   _AvgCenterDepth        s1       1
					//   _TiledData             s2       1
					//
					
					    ps_3_0
					    def c3, 0, 0.5, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    texldl r0, c3.yyxx, s0
					    rcp r0.x, r0.w
					    mul r0.y, c0.y, c0.y
					    mul r0.x, r0.x, r0.y
					    texldl r1, c3.yyxx, s1
					    mul r0.y, r0.x, r1.x
					    add r0.z, r1.x, -c0.y
					    rcp r0.z, r0.z
					    mul r1.x, r0.z, r0.y
					    mul r1.y, r0.z, -r0.x
					    mul r0.xy, r1, c0.w
					    mov r1.w, v0.x
					    add r1.xy, -c2, v0
					    mov r1.z, c3.x
					    texldl r2, r1.wyzz, s2
					    mov r3.xz, r1.wyzw
					    texldl r4, r1.xyzz, s2
					    max r0.z, r4.x, r2.x
					    min r0.w, r2.y, r4.y
					    mov r2.zw, r1.xyyz
					    add r2.xy, c2, v0
					    texldl r4, r2.xzww, s2
					    max r2.z, r0.z, r4.x
					    min r5.x, r4.y, r0.w
					    mov r1.y, v0.y
					    texldl r4, r1.xyzz, s2
					    max r0.z, r2.z, r4.x
					    min r0.w, r4.y, r5.x
					    mov r3.y, v0.y
					    texldl r4, r3.xyzz, s2
					    max r1.y, r0.z, r4.x
					    min r2.z, r4.y, r0.w
					    mov r4.xzw, r2.xyww
					    texldl r5, r2.xyww, s2
					    mov r1.w, r2.y
					    mov r4.y, v0.y
					    texldl r4, r4, s2
					    max r0.z, r1.y, r4.x
					    min r0.w, r4.y, r2.z
					    texldl r2, r1.xwzz, s2
					    mov r3.w, r1.w
					    texldl r1, r3.xwzz, s2
					    max r1.z, r0.z, r2.x
					    min r1.w, r2.y, r0.w
					    min r0.z, r1.y, r1.w
					    max r0.w, r1.z, r1.x
					    max r1.x, r0.w, r5.x
					    min r1.y, r5.y, r0.z
					    rcp r0.z, r1.x
					    mad r0.z, r0.z, r0.x, r0.y
					    rcp r0.w, r1.y
					    mov oC0.y, r1.y
					    mad r0.x, r0.w, r0.x, r0.y
					    max r1.x, r0_abs.z, r0_abs.x
					    min oC0.x, c1.x, r1.x
					    mov oC0.zw, c3.x
					
					// approximately 67 instruction slots used (22 texture, 45 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[8];
						vec4 _VirtualCameraParams2;
						vec4 unused_0_2[2];
						vec4 _CoCParams2;
						vec4 unused_0_4[5];
						vec4 _NeighbourhoodParams;
						vec4 unused_0_6[3];
					};
					uniform  sampler2D _TiledData;
					uniform  sampler2D _AvgCenterDepth;
					uniform  sampler2D _VirtualCameraTexture1;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					float u_xlat5;
					float u_xlat10;
					float u_xlat15;
					void main()
					{
					    u_xlat0 = textureLod(_VirtualCameraTexture1, vec2(0.5, 0.5), 0.0);
					    u_xlat0.x = _VirtualCameraParams2.y / u_xlat0.w;
					    u_xlat0.x = u_xlat0.x * _VirtualCameraParams2.y;
					    u_xlat1 = textureLod(_AvgCenterDepth, vec2(0.5, 0.5), 0.0);
					    u_xlat5 = u_xlat0.x * u_xlat1.x;
					    u_xlat10 = u_xlat1.x + (-_VirtualCameraParams2.y);
					    u_xlat10 = float(1.0) / u_xlat10;
					    u_xlat1.x = u_xlat10 * u_xlat5;
					    u_xlat1.y = u_xlat10 * (-u_xlat0.x);
					    u_xlat0.xy = u_xlat1.xy * _VirtualCameraParams2.ww;
					    u_xlat1.zw = vs_TEXCOORD0.xy;
					    u_xlat1.xy = vs_TEXCOORD0.xy + (-_NeighbourhoodParams.xy);
					    u_xlat2 = textureLod(_TiledData, u_xlat1.zy, 0.0);
					    u_xlat3 = textureLod(_TiledData, u_xlat1.xw, 0.0);
					    u_xlat4 = textureLod(_TiledData, u_xlat1.xy, 0.0);
					    u_xlat10 = max(u_xlat2.x, u_xlat4.x);
					    u_xlat15 = min(u_xlat2.y, u_xlat4.y);
					    u_xlat2.z = u_xlat1.y;
					    u_xlat2.xy = vs_TEXCOORD0.xy + _NeighbourhoodParams.xy;
					    u_xlat4 = textureLod(_TiledData, u_xlat2.xz, 0.0);
					    u_xlat10 = max(u_xlat10, u_xlat4.x);
					    u_xlat15 = min(u_xlat15, u_xlat4.y);
					    u_xlat15 = min(u_xlat3.y, u_xlat15);
					    u_xlat10 = max(u_xlat3.x, u_xlat10);
					    u_xlat3 = textureLod(_TiledData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat10 = max(u_xlat10, u_xlat3.x);
					    u_xlat15 = min(u_xlat15, u_xlat3.y);
					    u_xlat2.w = vs_TEXCOORD0.y;
					    u_xlat3 = textureLod(_TiledData, u_xlat2.xw, 0.0);
					    u_xlat10 = max(u_xlat10, u_xlat3.x);
					    u_xlat15 = min(u_xlat15, u_xlat3.y);
					    u_xlat1.y = u_xlat2.y;
					    u_xlat2 = textureLod(_TiledData, u_xlat2.xy, 0.0);
					    u_xlat3 = textureLod(_TiledData, u_xlat1.xy, 0.0);
					    u_xlat10 = max(u_xlat10, u_xlat3.x);
					    u_xlat15 = min(u_xlat15, u_xlat3.y);
					    u_xlat1.z = vs_TEXCOORD0.x;
					    u_xlat1 = textureLod(_TiledData, u_xlat1.zy, 0.0);
					    u_xlat10 = max(u_xlat10, u_xlat1.x);
					    u_xlat15 = min(u_xlat15, u_xlat1.y);
					    u_xlat15 = min(u_xlat2.y, u_xlat15);
					    u_xlat10 = max(u_xlat2.x, u_xlat10);
					    u_xlat10 = float(1.0) / u_xlat10;
					    u_xlat10 = u_xlat10 * u_xlat0.x + u_xlat0.y;
					    u_xlat1.x = float(1.0) / u_xlat15;
					    SV_Target0.y = u_xlat15;
					    u_xlat0.x = u_xlat1.x * u_xlat0.x + u_xlat0.y;
					    u_xlat0.x = max(abs(u_xlat0.x), abs(u_xlat10));
					    SV_Target0.x = min(u_xlat0.x, _CoCParams2.x);
					    SV_Target0.zw = vec2(0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _CoCParams1;
					//   float4 _CoCParams2;
					//   float4 _NeighbourhoodParams;
					//   sampler2D _TiledData;
					//
					//
					// Registers:
					//
					//   Name                 Reg   Size
					//   -------------------- ----- ----
					//   _CoCParams1          c0       1
					//   _CoCParams2          c1       1
					//   _NeighbourhoodParams c2       1
					//   _TiledData           s0       1
					//
					
					    ps_3_0
					    def c3, 0, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    mov r0.w, v0.x
					    add r0.xy, -c2, v0
					    mov r0.z, c3.x
					    texldl r1, r0.wyzz, s0
					    mov r2.xz, r0.wyzw
					    texldl r3, r0.xyzz, s0
					    max r4.x, r3.x, r1.x
					    min r4.y, r1.y, r3.y
					    mov r1.zw, r0.xyyz
					    add r1.xy, c2, v0
					    texldl r3, r1.xzww, s0
					    max r1.z, r4.x, r3.x
					    min r5.x, r3.y, r4.y
					    mov r0.y, v0.y
					    texldl r3, r0.xyzz, s0
					    max r0.y, r1.z, r3.x
					    min r1.z, r3.y, r5.x
					    mov r2.y, v0.y
					    texldl r3, r2.xyzz, s0
					    max r2.y, r0.y, r3.x
					    min r0.y, r3.y, r1.z
					    mov r3.xzw, r1.xyww
					    texldl r4, r1.xyww, s0
					    mov r0.w, r1.y
					    mov r3.y, v0.y
					    texldl r1, r3, s0
					    max r3.x, r2.y, r1.x
					    min r2.y, r1.y, r0.y
					    texldl r1, r0.xwzz, s0
					    mov r2.w, r0.w
					    texldl r0, r2.xwzz, s0
					    max r0.z, r3.x, r1.x
					    min r0.w, r1.y, r2.y
					    min r1.x, r0.y, r0.w
					    max r1.y, r0.z, r0.x
					    max r0.x, r1.y, r4.x
					    min r0.y, r4.y, r1.x
					    rcp r0.x, r0.x
					    mad r0.x, r0.x, c0.x, c0.y
					    rcp r0.z, r0.y
					    mov oC0.y, r0.y
					    mad r0.y, r0.z, c0.x, c0.y
					    max r1.x, r0_abs.x, r0_abs.y
					    min oC0.x, c1.x, r1.x
					    mov oC0.zw, c3.x
					
					// approximately 54 instruction slots used (18 texture, 36 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[10];
						vec4 _CoCParams1;
						vec4 _CoCParams2;
						vec4 unused_0_3[5];
						vec4 _NeighbourhoodParams;
						vec4 unused_0_5[3];
					};
					uniform  sampler2D _TiledData;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					float u_xlat5;
					float u_xlat10;
					float u_xlat15;
					void main()
					{
					    u_xlat0.zw = vs_TEXCOORD0.xy;
					    u_xlat0.xy = vs_TEXCOORD0.xy + (-_NeighbourhoodParams.xy);
					    u_xlat1 = textureLod(_TiledData, u_xlat0.zy, 0.0);
					    u_xlat2 = textureLod(_TiledData, u_xlat0.xw, 0.0);
					    u_xlat3 = textureLod(_TiledData, u_xlat0.xy, 0.0);
					    u_xlat15 = max(u_xlat1.x, u_xlat3.x);
					    u_xlat1.x = min(u_xlat1.y, u_xlat3.y);
					    u_xlat3.z = u_xlat0.y;
					    u_xlat3.xy = vs_TEXCOORD0.xy + _NeighbourhoodParams.xy;
					    u_xlat4 = textureLod(_TiledData, u_xlat3.xz, 0.0);
					    u_xlat15 = max(u_xlat15, u_xlat4.x);
					    u_xlat1.x = min(u_xlat1.x, u_xlat4.y);
					    u_xlat1.x = min(u_xlat2.y, u_xlat1.x);
					    u_xlat15 = max(u_xlat2.x, u_xlat15);
					    u_xlat2 = textureLod(_TiledData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat15 = max(u_xlat15, u_xlat2.x);
					    u_xlat1.x = min(u_xlat1.x, u_xlat2.y);
					    u_xlat3.w = vs_TEXCOORD0.y;
					    u_xlat2 = textureLod(_TiledData, u_xlat3.xw, 0.0);
					    u_xlat15 = max(u_xlat15, u_xlat2.x);
					    u_xlat1.x = min(u_xlat1.x, u_xlat2.y);
					    u_xlat0.y = u_xlat3.y;
					    u_xlat2 = textureLod(_TiledData, u_xlat3.xy, 0.0);
					    u_xlat3 = textureLod(_TiledData, u_xlat0.xy, 0.0);
					    u_xlat0.x = max(u_xlat15, u_xlat3.x);
					    u_xlat15 = min(u_xlat1.x, u_xlat3.y);
					    u_xlat0.z = vs_TEXCOORD0.x;
					    u_xlat1 = textureLod(_TiledData, u_xlat0.zy, 0.0);
					    u_xlat0.x = max(u_xlat0.x, u_xlat1.x);
					    u_xlat5 = min(u_xlat15, u_xlat1.y);
					    u_xlat5 = min(u_xlat2.y, u_xlat5);
					    u_xlat0.x = max(u_xlat2.x, u_xlat0.x);
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * _CoCParams1.x + _CoCParams1.y;
					    u_xlat10 = float(1.0) / u_xlat5;
					    SV_Target0.y = u_xlat5;
					    u_xlat5 = u_xlat10 * _CoCParams1.x + _CoCParams1.y;
					    u_xlat0.x = max(abs(u_xlat5), abs(u_xlat0.x));
					    SV_Target0.x = min(u_xlat0.x, _CoCParams2.x);
					    SV_Target0.zw = vec2(0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _CoCParams1;
					//   float4 _CoCParams2;
					//   float4 _NeighbourhoodParams;
					//   sampler2D _TiledData;
					//
					//
					// Registers:
					//
					//   Name                 Reg   Size
					//   -------------------- ----- ----
					//   _CoCParams1          c0       1
					//   _CoCParams2          c1       1
					//   _NeighbourhoodParams c2       1
					//   _TiledData           s0       1
					//
					
					    ps_3_0
					    def c3, 0, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    mov r0.w, v0.x
					    add r0.xy, -c2, v0
					    mov r0.z, c3.x
					    texldl r1, r0.wyzz, s0
					    mov r2.xz, r0.wyzw
					    texldl r3, r0.xyzz, s0
					    max r4.x, r3.x, r1.x
					    min r4.y, r1.y, r3.y
					    mov r1.zw, r0.xyyz
					    add r1.xy, c2, v0
					    texldl r3, r1.xzww, s0
					    max r1.z, r4.x, r3.x
					    min r5.x, r3.y, r4.y
					    mov r0.y, v0.y
					    texldl r3, r0.xyzz, s0
					    max r0.y, r1.z, r3.x
					    min r1.z, r3.y, r5.x
					    mov r2.y, v0.y
					    texldl r3, r2.xyzz, s0
					    max r2.y, r0.y, r3.x
					    min r0.y, r3.y, r1.z
					    mov r3.xzw, r1.xyww
					    texldl r4, r1.xyww, s0
					    mov r0.w, r1.y
					    mov r3.y, v0.y
					    texldl r1, r3, s0
					    max r3.x, r2.y, r1.x
					    min r2.y, r1.y, r0.y
					    texldl r1, r0.xwzz, s0
					    mov r2.w, r0.w
					    texldl r0, r2.xwzz, s0
					    max r0.z, r3.x, r1.x
					    min r0.w, r1.y, r2.y
					    min r1.x, r0.y, r0.w
					    max r1.y, r0.z, r0.x
					    max r0.x, r1.y, r4.x
					    min r0.y, r4.y, r1.x
					    add r0.z, -r0.x, c0.z
					    max r1.x, r0.z, -c0.w
					    min r0.z, c0.w, r1.x
					    add r0.x, r0.z, r0.x
					    rcp r0.x, r0.x
					    mad r0.x, r0.x, c0.x, c0.y
					    add r0.z, -r0.y, c0.z
					    max r1.x, r0.z, -c0.w
					    min r0.z, c0.w, r1.x
					    add r0.z, r0.z, r0.y
					    mov oC0.y, r0.y
					    rcp r0.y, r0.z
					    mad r0.y, r0.y, c0.x, c0.y
					    max r1.x, r0_abs.x, r0_abs.y
					    min oC0.x, c1.x, r1.x
					    mov oC0.zw, c3.x
					
					// approximately 62 instruction slots used (18 texture, 44 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[10];
						vec4 _CoCParams1;
						vec4 _CoCParams2;
						vec4 unused_0_3[5];
						vec4 _NeighbourhoodParams;
						vec4 unused_0_5[3];
					};
					uniform  sampler2D _TiledData;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					float u_xlat5;
					float u_xlat10;
					float u_xlat15;
					void main()
					{
					    u_xlat0.zw = vs_TEXCOORD0.xy;
					    u_xlat0.xy = vs_TEXCOORD0.xy + (-_NeighbourhoodParams.xy);
					    u_xlat1 = textureLod(_TiledData, u_xlat0.zy, 0.0);
					    u_xlat2 = textureLod(_TiledData, u_xlat0.xw, 0.0);
					    u_xlat3 = textureLod(_TiledData, u_xlat0.xy, 0.0);
					    u_xlat15 = max(u_xlat1.x, u_xlat3.x);
					    u_xlat1.x = min(u_xlat1.y, u_xlat3.y);
					    u_xlat3.z = u_xlat0.y;
					    u_xlat3.xy = vs_TEXCOORD0.xy + _NeighbourhoodParams.xy;
					    u_xlat4 = textureLod(_TiledData, u_xlat3.xz, 0.0);
					    u_xlat15 = max(u_xlat15, u_xlat4.x);
					    u_xlat1.x = min(u_xlat1.x, u_xlat4.y);
					    u_xlat1.x = min(u_xlat2.y, u_xlat1.x);
					    u_xlat15 = max(u_xlat2.x, u_xlat15);
					    u_xlat2 = textureLod(_TiledData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat15 = max(u_xlat15, u_xlat2.x);
					    u_xlat1.x = min(u_xlat1.x, u_xlat2.y);
					    u_xlat3.w = vs_TEXCOORD0.y;
					    u_xlat2 = textureLod(_TiledData, u_xlat3.xw, 0.0);
					    u_xlat15 = max(u_xlat15, u_xlat2.x);
					    u_xlat1.x = min(u_xlat1.x, u_xlat2.y);
					    u_xlat0.y = u_xlat3.y;
					    u_xlat2 = textureLod(_TiledData, u_xlat3.xy, 0.0);
					    u_xlat3 = textureLod(_TiledData, u_xlat0.xy, 0.0);
					    u_xlat0.x = max(u_xlat15, u_xlat3.x);
					    u_xlat15 = min(u_xlat1.x, u_xlat3.y);
					    u_xlat0.z = vs_TEXCOORD0.x;
					    u_xlat1 = textureLod(_TiledData, u_xlat0.zy, 0.0);
					    u_xlat0.x = max(u_xlat0.x, u_xlat1.x);
					    u_xlat5 = min(u_xlat15, u_xlat1.y);
					    u_xlat5 = min(u_xlat2.y, u_xlat5);
					    u_xlat0.x = max(u_xlat2.x, u_xlat0.x);
					    u_xlat10 = (-u_xlat0.x) + _CoCParams1.z;
					    u_xlat10 = max(u_xlat10, (-_CoCParams1.w));
					    u_xlat10 = min(u_xlat10, _CoCParams1.w);
					    u_xlat0.x = u_xlat10 + u_xlat0.x;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * _CoCParams1.x + _CoCParams1.y;
					    u_xlat10 = (-u_xlat5) + _CoCParams1.z;
					    u_xlat10 = max(u_xlat10, (-_CoCParams1.w));
					    u_xlat10 = min(u_xlat10, _CoCParams1.w);
					    u_xlat10 = u_xlat10 + u_xlat5;
					    SV_Target0.y = u_xlat5;
					    u_xlat5 = float(1.0) / u_xlat10;
					    u_xlat5 = u_xlat5 * _CoCParams1.x + _CoCParams1.y;
					    u_xlat0.x = max(abs(u_xlat5), abs(u_xlat0.x));
					    SV_Target0.x = min(u_xlat0.x, _CoCParams2.x);
					    SV_Target0.zw = vec2(0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _AvgCenterDepth;
					//   float4 _CoCParams2;
					//   float4 _NeighbourhoodParams;
					//   sampler2D _TiledData;
					//   float4 _VirtualCameraParams1;
					//   float4 _VirtualCameraParams2;
					//
					//
					// Registers:
					//
					//   Name                  Reg   Size
					//   --------------------- ----- ----
					//   _VirtualCameraParams1 c0       1
					//   _VirtualCameraParams2 c1       1
					//   _CoCParams2           c2       1
					//   _NeighbourhoodParams  c3       1
					//   _AvgCenterDepth       s0       1
					//   _TiledData            s1       1
					//
					
					    ps_3_0
					    def c4, 0, 0.5, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    rcp r0.x, c0.y
					    mul r0.y, c1.y, c1.y
					    mul r0.x, r0.x, r0.y
					    texldl r1, c4.yyxx, s0
					    mul r0.y, r0.x, r1.x
					    add r0.z, r1.x, -c1.y
					    rcp r0.z, r0.z
					    mul r1.x, r0.z, r0.y
					    mul r1.y, r0.z, -r0.x
					    mul r0.xy, r1, c1.w
					    mov r1.w, v0.x
					    add r1.xy, -c3, v0
					    mov r1.z, c4.x
					    texldl r2, r1.wyzz, s1
					    mov r3.xz, r1.wyzw
					    texldl r4, r1.xyzz, s1
					    max r0.z, r4.x, r2.x
					    min r0.w, r2.y, r4.y
					    mov r2.zw, r1.xyyz
					    add r2.xy, c3, v0
					    texldl r4, r2.xzww, s1
					    max r2.z, r0.z, r4.x
					    min r5.x, r4.y, r0.w
					    mov r1.y, v0.y
					    texldl r4, r1.xyzz, s1
					    max r0.z, r2.z, r4.x
					    min r0.w, r4.y, r5.x
					    mov r3.y, v0.y
					    texldl r4, r3.xyzz, s1
					    max r1.y, r0.z, r4.x
					    min r2.z, r4.y, r0.w
					    mov r4.xzw, r2.xyww
					    texldl r5, r2.xyww, s1
					    mov r1.w, r2.y
					    mov r4.y, v0.y
					    texldl r4, r4, s1
					    max r0.z, r1.y, r4.x
					    min r0.w, r4.y, r2.z
					    texldl r2, r1.xwzz, s1
					    mov r3.w, r1.w
					    texldl r1, r3.xwzz, s1
					    max r1.z, r0.z, r2.x
					    min r1.w, r2.y, r0.w
					    min r0.z, r1.y, r1.w
					    max r0.w, r1.z, r1.x
					    max r1.x, r0.w, r5.x
					    min r1.y, r5.y, r0.z
					    rcp r0.z, r1.x
					    mad r0.z, r0.z, r0.x, r0.y
					    rcp r0.w, r1.y
					    mov oC0.y, r1.y
					    mad r0.x, r0.w, r0.x, r0.y
					    max r1.x, r0_abs.z, r0_abs.x
					    min oC0.x, c2.x, r1.x
					    mov oC0.zw, c4.x
					
					// approximately 65 instruction slots used (20 texture, 45 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[7];
						vec4 _VirtualCameraParams1;
						vec4 _VirtualCameraParams2;
						vec4 unused_0_3[2];
						vec4 _CoCParams2;
						vec4 unused_0_5[5];
						vec4 _NeighbourhoodParams;
						vec4 unused_0_7[3];
					};
					uniform  sampler2D _TiledData;
					uniform  sampler2D _AvgCenterDepth;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec2 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					float u_xlat5;
					float u_xlat10;
					float u_xlat15;
					void main()
					{
					    u_xlat0.x = _VirtualCameraParams2.y / _VirtualCameraParams1.y;
					    u_xlat0.x = u_xlat0.x * _VirtualCameraParams2.y;
					    u_xlat1 = textureLod(_AvgCenterDepth, vec2(0.5, 0.5), 0.0);
					    u_xlat5 = u_xlat0.x * u_xlat1.x;
					    u_xlat10 = u_xlat1.x + (-_VirtualCameraParams2.y);
					    u_xlat10 = float(1.0) / u_xlat10;
					    u_xlat1.x = u_xlat10 * u_xlat5;
					    u_xlat1.y = u_xlat10 * (-u_xlat0.x);
					    u_xlat0.xy = u_xlat1.xy * _VirtualCameraParams2.ww;
					    u_xlat1.zw = vs_TEXCOORD0.xy;
					    u_xlat1.xy = vs_TEXCOORD0.xy + (-_NeighbourhoodParams.xy);
					    u_xlat2 = textureLod(_TiledData, u_xlat1.zy, 0.0);
					    u_xlat3 = textureLod(_TiledData, u_xlat1.xw, 0.0);
					    u_xlat4 = textureLod(_TiledData, u_xlat1.xy, 0.0);
					    u_xlat10 = max(u_xlat2.x, u_xlat4.x);
					    u_xlat15 = min(u_xlat2.y, u_xlat4.y);
					    u_xlat2.z = u_xlat1.y;
					    u_xlat2.xy = vs_TEXCOORD0.xy + _NeighbourhoodParams.xy;
					    u_xlat4 = textureLod(_TiledData, u_xlat2.xz, 0.0);
					    u_xlat10 = max(u_xlat10, u_xlat4.x);
					    u_xlat15 = min(u_xlat15, u_xlat4.y);
					    u_xlat15 = min(u_xlat3.y, u_xlat15);
					    u_xlat10 = max(u_xlat3.x, u_xlat10);
					    u_xlat3 = textureLod(_TiledData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat10 = max(u_xlat10, u_xlat3.x);
					    u_xlat15 = min(u_xlat15, u_xlat3.y);
					    u_xlat2.w = vs_TEXCOORD0.y;
					    u_xlat3 = textureLod(_TiledData, u_xlat2.xw, 0.0);
					    u_xlat10 = max(u_xlat10, u_xlat3.x);
					    u_xlat15 = min(u_xlat15, u_xlat3.y);
					    u_xlat1.y = u_xlat2.y;
					    u_xlat2 = textureLod(_TiledData, u_xlat2.xy, 0.0);
					    u_xlat3 = textureLod(_TiledData, u_xlat1.xy, 0.0);
					    u_xlat10 = max(u_xlat10, u_xlat3.x);
					    u_xlat15 = min(u_xlat15, u_xlat3.y);
					    u_xlat1.z = vs_TEXCOORD0.x;
					    u_xlat1 = textureLod(_TiledData, u_xlat1.zy, 0.0);
					    u_xlat10 = max(u_xlat10, u_xlat1.x);
					    u_xlat15 = min(u_xlat15, u_xlat1.y);
					    u_xlat15 = min(u_xlat2.y, u_xlat15);
					    u_xlat10 = max(u_xlat2.x, u_xlat10);
					    u_xlat10 = float(1.0) / u_xlat10;
					    u_xlat10 = u_xlat10 * u_xlat0.x + u_xlat0.y;
					    u_xlat1.x = float(1.0) / u_xlat15;
					    SV_Target0.y = u_xlat15;
					    u_xlat0.x = u_xlat1.x * u_xlat0.x + u_xlat0.y;
					    u_xlat0.x = max(abs(u_xlat0.x), abs(u_xlat10));
					    SV_Target0.x = min(u_xlat0.x, _CoCParams2.x);
					    SV_Target0.zw = vec2(0.0, 0.0);
					    return;
					}"
				}
			}
		}
		Pass {
			Name "MEDIANFILTER"
			ZClip Off
			ZWrite Off
			Cull Off
			Fog {
				Mode Off
			}
			GpuProgramID 242875
			Program "vp" {
				SubProgram "d3d9 " {
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _MainTex;
					//   float4 _ScionResolutionParameters2;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters2 c0       1
					//   _MainTex                    s0       1
					//
					
					    ps_3_0
					    def c1, 0, -1, 1, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    add r0.xy, -c0, v0
					    mov r0.zw, c1.x
					    texldl r0, r0, s0
					    mov r1.xyz, c1
					    mad r2, c0.xyxy, r1.xyxz, v0.xyxy
					    mul r3, r2.xyxx, c1.zzxx
					    mul r2, r2.zwxx, c1.zzxx
					    texldl r2, r2, s0
					    texldl r3, r3, s0
					    min r4, r3, r0
					    max r5, r0, r3
					    mul r0, c1.zzxx, v0.xyxx
					    texldl r0, r0, s0
					    mad r3, c0.xyxy, r1.yxyz, v0.xyxy
					    mul r6, r3.xyxx, c1.zzxx
					    mul r3, r3.zwxx, c1.zzxx
					    texldl r3, r3, s0
					    texldl r6, r6, s0
					    min r7, r0, r6
					    max r8, r6, r0
					    min r0, r7, r4
					    max r6, r4, r7
					    min r4, r2, r3
					    max r7, r3, r2
					    max r2, r0, r4
					    min r0, r2, r6
					    max r3, r6, r2
					    max r2, r8, r7
					    min r4, r7, r8
					    min r6, r2, r5
					    min r2, r4, r6
					    max r5, r6, r4
					    min r4, r2, r0
					    max r6, r0, r2
					    mad r0, c0.xyxy, r1.zyzx, v0.xyxy
					    mul r1, r0.xyxx, c1.zzxx
					    mul r0, r0.zwxx, c1.zzxx
					    texldl r0, r0, s0
					    texldl r1, r1, s0
					    max r2, r4, r1
					    max r1, r5, r2
					    min r4, r2, r5
					    min r2, r1, r3
					    max r1, r2, r6
					    min r3, r6, r2
					    max r2, r4, r0
					    min r5, r0, r4
					    max r0, r3, r5
					    min r3, r2, r1
					    add r1.xy, c0, v0
					    mov r1.zw, c1.x
					    texldl r1, r1, s0
					    max r2, r0, r1
					    min r4, r1, r0
					    min r0, r2, r3
					    max oC0, r0, r4
					
					// approximately 65 instruction slots used (18 texture, 47 arithmetic)"
				}
				SubProgram "d3d11 " {
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[3];
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_2[17];
					};
					uniform  sampler2D _MainTex;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD0.xy + (-_ScionResolutionParameters2.xy);
					    u_xlat0 = textureLod(_MainTex, u_xlat0.xy, 0.0);
					    u_xlat1 = _ScionResolutionParameters2.xyxy * vec4(0.0, -1.0, 0.0, 1.0) + vs_TEXCOORD0.xyxy;
					    u_xlat2 = textureLod(_MainTex, u_xlat1.xy, 0.0);
					    u_xlat1 = textureLod(_MainTex, u_xlat1.zw, 0.0);
					    u_xlat3 = min(u_xlat0, u_xlat2);
					    u_xlat0 = max(u_xlat0, u_xlat2);
					    u_xlat2 = _ScionResolutionParameters2.xyxy * vec4(-1.0, 0.0, -1.0, 1.0) + vs_TEXCOORD0.xyxy;
					    u_xlat4 = textureLod(_MainTex, u_xlat2.xy, 0.0);
					    u_xlat2 = textureLod(_MainTex, u_xlat2.zw, 0.0);
					    u_xlat5 = textureLod(_MainTex, vs_TEXCOORD0.xy, 0.0);
					    u_xlat6 = min(u_xlat4, u_xlat5);
					    u_xlat4 = max(u_xlat4, u_xlat5);
					    u_xlat5 = min(u_xlat3, u_xlat6);
					    u_xlat3 = max(u_xlat3, u_xlat6);
					    u_xlat6 = min(u_xlat1, u_xlat2);
					    u_xlat1 = max(u_xlat1, u_xlat2);
					    u_xlat2 = max(u_xlat5, u_xlat6);
					    u_xlat5 = min(u_xlat2, u_xlat3);
					    u_xlat2 = max(u_xlat2, u_xlat3);
					    u_xlat3 = max(u_xlat1, u_xlat4);
					    u_xlat1 = min(u_xlat1, u_xlat4);
					    u_xlat0 = min(u_xlat0, u_xlat3);
					    u_xlat3 = min(u_xlat1, u_xlat0);
					    u_xlat0 = max(u_xlat1, u_xlat0);
					    u_xlat1 = min(u_xlat3, u_xlat5);
					    u_xlat3 = max(u_xlat3, u_xlat5);
					    u_xlat4 = _ScionResolutionParameters2.xyxy * vec4(1.0, -1.0, 1.0, 0.0) + vs_TEXCOORD0.xyxy;
					    u_xlat5 = textureLod(_MainTex, u_xlat4.xy, 0.0);
					    u_xlat4 = textureLod(_MainTex, u_xlat4.zw, 0.0);
					    u_xlat1 = max(u_xlat1, u_xlat5);
					    u_xlat5 = max(u_xlat0, u_xlat1);
					    u_xlat0 = min(u_xlat0, u_xlat1);
					    u_xlat1 = min(u_xlat2, u_xlat5);
					    u_xlat2 = max(u_xlat3, u_xlat1);
					    u_xlat1 = min(u_xlat3, u_xlat1);
					    u_xlat3 = max(u_xlat4, u_xlat0);
					    u_xlat0 = min(u_xlat4, u_xlat0);
					    u_xlat0 = max(u_xlat0, u_xlat1);
					    u_xlat1 = min(u_xlat2, u_xlat3);
					    u_xlat2.xy = vs_TEXCOORD0.xy + _ScionResolutionParameters2.xy;
					    u_xlat2 = textureLod(_MainTex, u_xlat2.xy, 0.0);
					    u_xlat3 = max(u_xlat0, u_xlat2);
					    u_xlat0 = min(u_xlat0, u_xlat2);
					    u_xlat1 = min(u_xlat1, u_xlat3);
					    SV_Target0 = max(u_xlat0, u_xlat1);
					    return;
					}"
				}
			}
		}
		Pass {
			Name "PREFILTERSOURCE"
			ZClip Off
			ZWrite Off
			Cull Off
			Fog {
				Mode Off
			}
			GpuProgramID 268055
			Program "vp" {
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" "SC_DOF_MASK_ON" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" "SC_DOF_MASK_ON" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" "SC_DOF_MASK_ON" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" "SC_DOF_MASK_ON" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" "SC_DOF_MASK_ON" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" "SC_DOF_MASK_ON" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" "SC_DOF_MASK_ON" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" "SC_DOF_MASK_ON" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" "SC_DOF_MASK_ON" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" "SC_DOF_MASK_ON" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" "SC_DOF_MASK_ON" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" "SC_DOF_MASK_ON" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _CoCParams2;
					//   sampler2D _HalfResSourceDepthTexture;
					//   float4 _ScionResolutionParameters2;
					//   sampler2D _TiledNeighbourhoodData;
					//   sampler2D _VirtualCameraTexture2;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters2 c0       1
					//   _CoCParams2                 c1       1
					//   _VirtualCameraTexture2      s0       1
					//   _TiledNeighbourhoodData     s1       1
					//   _HalfResSourceDepthTexture  s2       1
					//
					
					    ps_3_0
					    def c2, -0.745654106, 0.113139302, 0.0829383731, -0.803609788
					    def c3, 0.258436203, 0.186414197, -0.710718393, -0.601000786
					    def c4, 0.0893398523, 0.90515691, -0.617822409, 0.76241082
					    def c5, 0.734034419, -0.416939408, 0.922537029, 0.281461209
					    def c6, 1, 0, 0.5, 0.349999994
					    def c7, -2, 3, 0.00999999978, 10
					    def c8, -1, 1, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    texldl r0, c6.zzyy, s0
					    mul r1, c6.xxyy, v0.xyxx
					    texldl r2, r1, s2
					    texldl r1, r1, s1
					    add r0.x, -r1.y, r2.w
					    rcp r0.w, r2.w
					    mad r0.y, r0.w, r0.y, r0.z
					    min r1.x, c1.x, r0_abs.y
					    mul r0.y, r1.x, c6.w
					    max r1.x, r0.y, c6.x
					    mul r1, r1.x, c0.xyxy
					    mad r3, r1.zwzw, c2, v0.xyxy
					    mul r4, r3.xyxx, c6.xxyy
					    mul r3, r3.zwxx, c6.xxyy
					    texldl r5, r4, s1
					    texldl r4, r4.xyww, s2
					    add r0.y, -r5.y, r4.w
					    mul_sat r0.xy, r0, c6.z
					    mad r0.z, r0.y, c7.x, c7.y
					    mul r0.y, r0.y, r0.y
					    mul r5.y, r0.y, r0.z
					    mad r5.x, r0.z, -r0.y, c6.x
					    mad r0.y, r0.x, c7.x, c7.y
					    mul r0.x, r0.x, r0.x
					    mad r6.yzw, r0.y, -r0.x, c6.x
					    mul r6.x, r0.x, r0.y
					    dp2add r0.x, r5, r6.yxzw, c6.y
					    add r0.y, r2.w, -r4.w
					    add r0.y, r0_abs.y, c7.z
					    rcp r0.y, r0.y
					    mad r0.x, r0.x, c7.w, r0.y
					    min r5.w, r0.x, c7.w
					    mul r5.xyz, r4, r5.w
					    mad r0, r2.xyzx, c6.xxxy, c6.yyyx
					    add r0, r5, r0
					    texldl r4, r3, s1
					    texldl r3, r3.xyww, s2
					    add r2.x, -r4.y, r3.w
					    mul_sat r2.x, r2.x, c6.z
					    mad r2.y, r2.x, c7.x, c7.y
					    mul r2.x, r2.x, r2.x
					    mul r4.y, r2.x, r2.y
					    mad r4.x, r2.y, -r2.x, c6.x
					    dp2add r2.x, r4, r6.zxzw, c6.y
					    add r2.y, r2.w, -r3.w
					    add r2.y, r2_abs.y, c7.z
					    rcp r2.y, r2.y
					    mad r2.x, r2.x, c7.w, r2.y
					    min r4.w, r2.x, c7.w
					    mul r4.xyz, r3, r4.w
					    add r0, r0, r4
					    mad r3, r1.zwzw, c3, v0.xyxy
					    mul r4, r3.xyxx, c6.xxyy
					    mul r3, r3.zwxx, c6.xxyy
					    texldl r5, r4, s1
					    texldl r4, r4.xyww, s2
					    add r2.x, -r5.y, r4.w
					    mul_sat r2.x, r2.x, c6.z
					    mad r2.y, r2.x, c7.x, c7.y
					    mul r2.x, r2.x, r2.x
					    mul r5.y, r2.x, r2.y
					    mad r5.x, r2.y, -r2.x, c6.x
					    dp2add r2.x, r5, r6.wxzw, c6.y
					    mad r2.yz, r6.x, c8.xxyw, c8
					    add r4.w, r2.w, -r4.w
					    add r4.w, r4_abs.w, c7.z
					    rcp r4.w, r4.w
					    mad r2.x, r2.x, c7.w, r4.w
					    min r5.w, r2.x, c7.w
					    mul r5.xyz, r4, r5.w
					    add r0, r0, r5
					    texldl r4, r3, s1
					    texldl r3, r3.xyww, s2
					    add r2.x, -r4.y, r3.w
					    mul_sat r2.x, r2.x, c6.z
					    mad r4.x, r2.x, c7.x, c7.y
					    mul r2.x, r2.x, r2.x
					    mul r5.y, r2.x, r4.x
					    mad r5.x, r4.x, -r2.x, c6.x
					    dp2add r2.x, r5, r2.yzzw, c6.y
					    add r3.w, r2.w, -r3.w
					    add r3.w, r3_abs.w, c7.z
					    rcp r3.w, r3.w
					    mad r2.x, r2.x, c7.w, r3.w
					    min r4.w, r2.x, c7.w
					    mul r4.xyz, r3, r4.w
					    add r0, r0, r4
					    mad r3, r1.zwzw, c4, v0.xyxy
					    mad r1, r1, c5, v0.xyxy
					    mul r4, r3.xyxx, c6.xxyy
					    mul r3, r3.zwxx, c6.xxyy
					    texldl r5, r4, s1
					    texldl r4, r4.xyww, s2
					    add r2.x, -r5.y, r4.w
					    mul_sat r2.x, r2.x, c6.z
					    mad r5.x, r2.x, c7.x, c7.y
					    mul r2.x, r2.x, r2.x
					    mul r6.y, r2.x, r5.x
					    mad r6.x, r5.x, -r2.x, c6.x
					    dp2add r2.x, r6, r2.yzzw, c6.y
					    add r4.w, r2.w, -r4.w
					    add r4.w, r4_abs.w, c7.z
					    rcp r4.w, r4.w
					    mad r2.x, r2.x, c7.w, r4.w
					    min r5.w, r2.x, c7.w
					    mul r5.xyz, r4, r5.w
					    add r0, r0, r5
					    texldl r4, r3, s1
					    texldl r3, r3.xyww, s2
					    add r2.x, -r4.y, r3.w
					    mul_sat r2.x, r2.x, c6.z
					    mad r4.x, r2.x, c7.x, c7.y
					    mul r2.x, r2.x, r2.x
					    mul r5.y, r2.x, r4.x
					    mad r5.x, r4.x, -r2.x, c6.x
					    dp2add r2.x, r5, r2.yzzw, c6.y
					    add r3.w, r2.w, -r3.w
					    add r3.w, r3_abs.w, c7.z
					    rcp r3.w, r3.w
					    mad r2.x, r2.x, c7.w, r3.w
					    min r4.w, r2.x, c7.w
					    mul r4.xyz, r3, r4.w
					    add r0, r0, r4
					    mul r3, r1.xyxx, c6.xxyy
					    mul r1, r1.zwxx, c6.xxyy
					    texldl r4, r3, s1
					    texldl r3, r3.xyww, s2
					    add r2.x, -r4.y, r3.w
					    mul_sat r2.x, r2.x, c6.z
					    mad r4.x, r2.x, c7.x, c7.y
					    mul r2.x, r2.x, r2.x
					    mul r5.y, r2.x, r4.x
					    mad r5.x, r4.x, -r2.x, c6.x
					    dp2add r2.x, r5, r2.yzzw, c6.y
					    add r3.w, r2.w, -r3.w
					    add r3.w, r3_abs.w, c7.z
					    rcp r3.w, r3.w
					    mad r2.x, r2.x, c7.w, r3.w
					    min r4.w, r2.x, c7.w
					    mul r4.xyz, r3, r4.w
					    add r0, r0, r4
					    texldl r3, r1, s1
					    texldl r1, r1.xyww, s2
					    add r2.x, -r3.y, r1.w
					    mul_sat r2.x, r2.x, c6.z
					    mad r3.x, r2.x, c7.x, c7.y
					    mul r2.x, r2.x, r2.x
					    mul r4.y, r2.x, r3.x
					    mad r4.x, r3.x, -r2.x, c6.x
					    dp2add r2.x, r4, r2.yzzw, c6.y
					    add r1.w, -r1.w, r2.w
					    mov oC0.w, r2.w
					    add r1.w, r1_abs.w, c7.z
					    rcp r1.w, r1.w
					    mad r1.w, r2.x, c7.w, r1.w
					    min r2.w, r1.w, c7.w
					    mul r2.xyz, r1, r2.w
					    add r0, r0, r2
					    rcp r0.w, r0.w
					    mul oC0.xyz, r0.w, r0
					
					// approximately 187 instruction slots used (38 texture, 149 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[3];
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_2[7];
						vec4 _CoCParams2;
						vec4 unused_0_4[9];
					};
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _VirtualCameraTexture2;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					float u_xlat8;
					vec2 u_xlat9;
					float u_xlat10;
					float u_xlat22;
					float u_xlat24;
					void main()
					{
					    u_xlat0.w = 1.0;
					    u_xlat1 = textureLod(_VirtualCameraTexture2, vec2(0.5, 0.5), 0.0);
					    u_xlat2 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1.x = float(1.0) / u_xlat2.w;
					    u_xlat1.x = u_xlat1.x * u_xlat1.y + u_xlat1.z;
					    u_xlat1.x = min(abs(u_xlat1.x), _CoCParams2.x);
					    u_xlat1.x = u_xlat1.x * 0.349999994;
					    u_xlat1.x = max(u_xlat1.x, 1.0);
					    u_xlat1 = u_xlat1.xxxx * _ScionResolutionParameters2.xyxy;
					    u_xlat3 = u_xlat1.zwzw * vec4(-0.745654106, 0.113139302, 0.0829383731, -0.803609788) + vs_TEXCOORD0.xyxy;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat3.xy, 0.0);
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat3.xy, 0.0);
					    u_xlat3.x = (-u_xlat4.y) + u_xlat5.w;
					    u_xlat3.x = u_xlat3.x * 0.5;
					    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
					    u_xlat10 = u_xlat3.x * -2.0 + 3.0;
					    u_xlat3.x = u_xlat3.x * u_xlat3.x;
					    u_xlat4.y = u_xlat3.x * u_xlat10;
					    u_xlat4.x = (-u_xlat10) * u_xlat3.x + 1.0;
					    u_xlat6 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat3.x = u_xlat2.w + (-u_xlat6.y);
					    u_xlat3.x = u_xlat3.x * 0.5;
					    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
					    u_xlat10 = u_xlat3.x * -2.0 + 3.0;
					    u_xlat3.x = u_xlat3.x * u_xlat3.x;
					    u_xlat6.yzw = (-vec3(u_xlat10)) * u_xlat3.xxx + vec3(1.0, 1.0, 1.0);
					    u_xlat6.x = u_xlat3.x * u_xlat10;
					    u_xlat3.x = dot(u_xlat4.yx, u_xlat6.xy);
					    u_xlat10 = u_xlat2.w + (-u_xlat5.w);
					    u_xlat10 = abs(u_xlat10) + 0.00999999978;
					    u_xlat10 = float(1.0) / u_xlat10;
					    u_xlat3.x = u_xlat3.x * 10.0 + u_xlat10;
					    u_xlat4.w = min(u_xlat3.x, 10.0);
					    u_xlat4.xyz = u_xlat4.www * u_xlat5.xyz;
					    u_xlat0.xyz = u_xlat2.xyz;
					    u_xlat0 = u_xlat0 + u_xlat4;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat3.zw, 0.0);
					    u_xlat3 = textureLod(_HalfResSourceDepthTexture, u_xlat3.zw, 0.0);
					    u_xlat2.x = (-u_xlat4.y) + u_xlat3.w;
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat9.x = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat4.y = u_xlat2.x * u_xlat9.x;
					    u_xlat4.x = (-u_xlat9.x) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat4.yx, u_xlat6.xz);
					    u_xlat9.x = u_xlat2.w + (-u_xlat3.w);
					    u_xlat9.x = abs(u_xlat9.x) + 0.00999999978;
					    u_xlat9.x = float(1.0) / u_xlat9.x;
					    u_xlat2.x = u_xlat2.x * 10.0 + u_xlat9.x;
					    u_xlat4.w = min(u_xlat2.x, 10.0);
					    u_xlat4.xyz = u_xlat3.xyz * u_xlat4.www;
					    u_xlat0 = u_xlat0 + u_xlat4;
					    u_xlat3 = u_xlat1.zwzw * vec4(0.258436203, 0.186414197, -0.710718393, -0.601000786) + vs_TEXCOORD0.xyxy;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat3.xy, 0.0);
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat3.xy, 0.0);
					    u_xlat2.x = (-u_xlat4.y) + u_xlat5.w;
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat9.x = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat3.y = u_xlat2.x * u_xlat9.x;
					    u_xlat3.x = (-u_xlat9.x) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat3.yx, u_xlat6.xw);
					    u_xlat9.xy = u_xlat6.xx * vec2(-1.0, 1.0) + vec2(1.0, 0.0);
					    u_xlat3.x = u_xlat2.w + (-u_xlat5.w);
					    u_xlat3.x = abs(u_xlat3.x) + 0.00999999978;
					    u_xlat3.x = float(1.0) / u_xlat3.x;
					    u_xlat2.x = u_xlat2.x * 10.0 + u_xlat3.x;
					    u_xlat4.w = min(u_xlat2.x, 10.0);
					    u_xlat4.xyz = u_xlat4.www * u_xlat5.xyz;
					    u_xlat0 = u_xlat0 + u_xlat4;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat3.zw, 0.0);
					    u_xlat3 = textureLod(_HalfResSourceDepthTexture, u_xlat3.zw, 0.0);
					    u_xlat2.x = (-u_xlat4.y) + u_xlat3.w;
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat4.x = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat5.y = u_xlat2.x * u_xlat4.x;
					    u_xlat5.x = (-u_xlat4.x) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat5.xy, u_xlat9.xy);
					    u_xlat24 = u_xlat2.w + (-u_xlat3.w);
					    u_xlat24 = abs(u_xlat24) + 0.00999999978;
					    u_xlat24 = float(1.0) / u_xlat24;
					    u_xlat2.x = u_xlat2.x * 10.0 + u_xlat24;
					    u_xlat4.w = min(u_xlat2.x, 10.0);
					    u_xlat4.xyz = u_xlat3.xyz * u_xlat4.www;
					    u_xlat0 = u_xlat0 + u_xlat4;
					    u_xlat3 = u_xlat1.zwzw * vec4(0.0893398523, 0.90515691, -0.617822409, 0.76241082) + vs_TEXCOORD0.xyxy;
					    u_xlat1 = u_xlat1 * vec4(0.734034419, -0.416939408, 0.922537029, 0.281461209) + vs_TEXCOORD0.xyxy;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat3.xy, 0.0);
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat3.xy, 0.0);
					    u_xlat2.x = (-u_xlat4.y) + u_xlat5.w;
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat3.x = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat4.y = u_xlat2.x * u_xlat3.x;
					    u_xlat4.x = (-u_xlat3.x) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat4.xy, u_xlat9.xy);
					    u_xlat3.x = u_xlat2.w + (-u_xlat5.w);
					    u_xlat3.x = abs(u_xlat3.x) + 0.00999999978;
					    u_xlat3.x = float(1.0) / u_xlat3.x;
					    u_xlat2.x = u_xlat2.x * 10.0 + u_xlat3.x;
					    u_xlat4.w = min(u_xlat2.x, 10.0);
					    u_xlat4.xyz = u_xlat4.www * u_xlat5.xyz;
					    u_xlat0 = u_xlat0 + u_xlat4;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat3.zw, 0.0);
					    u_xlat3 = textureLod(_HalfResSourceDepthTexture, u_xlat3.zw, 0.0);
					    u_xlat2.x = (-u_xlat4.y) + u_xlat3.w;
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat4.x = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat5.y = u_xlat2.x * u_xlat4.x;
					    u_xlat5.x = (-u_xlat4.x) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat5.xy, u_xlat9.xy);
					    u_xlat24 = u_xlat2.w + (-u_xlat3.w);
					    u_xlat24 = abs(u_xlat24) + 0.00999999978;
					    u_xlat24 = float(1.0) / u_xlat24;
					    u_xlat2.x = u_xlat2.x * 10.0 + u_xlat24;
					    u_xlat4.w = min(u_xlat2.x, 10.0);
					    u_xlat4.xyz = u_xlat3.xyz * u_xlat4.www;
					    u_xlat0 = u_xlat0 + u_xlat4;
					    u_xlat3 = textureLod(_TiledNeighbourhoodData, u_xlat1.xy, 0.0);
					    u_xlat4 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat1.x = (-u_xlat3.y) + u_xlat4.w;
					    u_xlat1.x = u_xlat1.x * 0.5;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat8 = u_xlat1.x * -2.0 + 3.0;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x;
					    u_xlat3.y = u_xlat1.x * u_xlat8;
					    u_xlat3.x = (-u_xlat8) * u_xlat1.x + 1.0;
					    u_xlat1.x = dot(u_xlat3.xy, u_xlat9.xy);
					    u_xlat8 = u_xlat2.w + (-u_xlat4.w);
					    u_xlat8 = abs(u_xlat8) + 0.00999999978;
					    u_xlat8 = float(1.0) / u_xlat8;
					    u_xlat1.x = u_xlat1.x * 10.0 + u_xlat8;
					    u_xlat3.w = min(u_xlat1.x, 10.0);
					    u_xlat3.xyz = u_xlat3.www * u_xlat4.xyz;
					    u_xlat0 = u_xlat0 + u_xlat3;
					    u_xlat3 = textureLod(_TiledNeighbourhoodData, u_xlat1.zw, 0.0);
					    u_xlat1 = textureLod(_HalfResSourceDepthTexture, u_xlat1.zw, 0.0);
					    u_xlat2.x = (-u_xlat3.y) + u_xlat1.w;
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat3.x = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat4.y = u_xlat2.x * u_xlat3.x;
					    u_xlat4.x = (-u_xlat3.x) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat4.xy, u_xlat9.xy);
					    u_xlat22 = (-u_xlat1.w) + u_xlat2.w;
					    SV_Target0.w = u_xlat2.w;
					    u_xlat22 = abs(u_xlat22) + 0.00999999978;
					    u_xlat22 = float(1.0) / u_xlat22;
					    u_xlat22 = u_xlat2.x * 10.0 + u_xlat22;
					    u_xlat2.w = min(u_xlat22, 10.0);
					    u_xlat2.xyz = u_xlat1.xyz * u_xlat2.www;
					    u_xlat0 = u_xlat0 + u_xlat2;
					    SV_Target0.xyz = u_xlat0.xyz / u_xlat0.www;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" "SC_DOF_MASK_ON" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _CoCParams2;
					//   sampler2D _ExclusionMask;
					//   sampler2D _HalfResSourceDepthTexture;
					//   float4 _ScionResolutionParameters2;
					//   sampler2D _TiledNeighbourhoodData;
					//   sampler2D _VirtualCameraTexture2;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters2 c0       1
					//   _CoCParams2                 c1       1
					//   _VirtualCameraTexture2      s0       1
					//   _TiledNeighbourhoodData     s1       1
					//   _ExclusionMask              s2       1
					//   _HalfResSourceDepthTexture  s3       1
					//
					
					    ps_3_0
					    def c2, -0.745654106, 0.113139302, 0.0829383731, -0.803609788
					    def c3, 0.258436203, 0.186414197, -0.710718393, -0.601000786
					    def c4, 0.0893398523, 0.90515691, -0.617822409, 0.76241082
					    def c5, 0.734034419, -0.416939408, 0.922537029, 0.281461209
					    def c6, 1, 0, 0.5, 0.349999994
					    def c7, -2, 3, 0.00999999978, 10
					    def c8, -1, 1, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    dcl_2d s3
					    mul r0, c6.xxyy, v0.xyxx
					    texldl r1, r0, s3
					    texldl r2, r0, s2
					    if_lt r2.x, c6.z
					    else
					      texldl r0, r0, s1
					      add r0.x, -r0.y, r1.w
					      mul_sat r0.x, r0.x, c6.z
					      mad r0.y, r0.x, c7.x, c7.y
					      mul r0.x, r0.x, r0.x
					      mul r2.x, r0.x, r0.y
					      texldl r3, c6.zzyy, s0
					      rcp r0.z, r1.w
					      mad r0.z, r0.z, r3.y, r3.z
					      min r3.x, c1.x, r0_abs.z
					      mul r0.z, r3.x, c6.w
					      max r3.x, r0.z, c6.x
					      mul r3, r3.x, c0.xyxy
					      mad r4, r3.zwzw, c2, v0.xyxy
					      mul r5, r4.xyxx, c6.xxyy
					      texldl r6, r5.xyww, s3
					      add r0.z, r1.w, -r6.w
					      add r0.z, r0_abs.z, c7.z
					      rcp r0.z, r0.z
					      texldl r5, r5, s1
					      add r0.w, -r5.y, r6.w
					      mul_sat r0.w, r0.w, c6.z
					      mad r4.y, r0.w, c7.x, c7.y
					      mul r0.w, r0.w, r0.w
					      mul r5.y, r0.w, r4.y
					      mad r5.x, r4.y, -r0.w, c6.x
					      mad r2.yzw, r0.y, -r0.x, c6.x
					      dp2add r0.x, r5, r2.yxzw, c6.y
					      mad r0.x, r0.x, c7.w, r0.z
					      min r5.w, r0.x, c7.w
					      mul r5.xyz, r5.w, r6
					      mad r0, r1.xyzx, c6.xxxy, c6.yyyx
					      add r0, r5, r0
					      mul r4, r4.zwxx, c6.xxyy
					      texldl r5, r4.xyww, s3
					      add r2.y, r1.w, -r5.w
					      add r2.y, r2_abs.y, c7.z
					      rcp r2.y, r2.y
					      texldl r4, r4, s1
					      add r4.x, -r4.y, r5.w
					      mul_sat r4.x, r4.x, c6.z
					      mad r4.y, r4.x, c7.x, c7.y
					      mul r4.x, r4.x, r4.x
					      mul r6.y, r4.x, r4.y
					      mad r6.x, r4.y, -r4.x, c6.x
					      dp2add r2.z, r6, r2.zxzw, c6.y
					      mad r2.y, r2.z, c7.w, r2.y
					      min r4.w, r2.y, c7.w
					      mul r4.xyz, r4.w, r5
					      add r0, r0, r4
					      mad r4, r3.zwzw, c3, v0.xyxy
					      mul r5, r4.xyxx, c6.xxyy
					      texldl r6, r5.xyww, s3
					      add r2.y, r1.w, -r6.w
					      add r2.y, r2_abs.y, c7.z
					      rcp r2.y, r2.y
					      texldl r5, r5, s1
					      add r2.z, -r5.y, r6.w
					      mul_sat r2.z, r2.z, c6.z
					      mad r4.y, r2.z, c7.x, c7.y
					      mul r2.z, r2.z, r2.z
					      mul r5.y, r2.z, r4.y
					      mad r5.x, r4.y, -r2.z, c6.x
					      dp2add r2.z, r5, r2.wxzw, c6.y
					      mad r2.y, r2.z, c7.w, r2.y
					      min r5.w, r2.y, c7.w
					      mul r5.xyz, r5.w, r6
					      add r0, r0, r5
					      mul r4, r4.zwxx, c6.xxyy
					      texldl r5, r4.xyww, s3
					      add r2.y, r1.w, -r5.w
					      add r2.y, r2_abs.y, c7.z
					      rcp r2.y, r2.y
					      texldl r4, r4, s1
					      add r2.z, -r4.y, r5.w
					      mul_sat r2.z, r2.z, c6.z
					      mad r2.w, r2.z, c7.x, c7.y
					      mul r2.z, r2.z, r2.z
					      mul r4.y, r2.z, r2.w
					      mad r4.x, r2.w, -r2.z, c6.x
					      mad r2.xz, r2.x, c8.xyyw, c8.yyzw
					      dp2add r2.w, r4, r2.xzzw, c6.y
					      mad r2.y, r2.w, c7.w, r2.y
					      min r4.w, r2.y, c7.w
					      mul r4.xyz, r4.w, r5
					      add r0, r0, r4
					      mad r4, r3.zwzw, c4, v0.xyxy
					      mul r5, r4.xyxx, c6.xxyy
					      texldl r6, r5.xyww, s3
					      add r2.y, r1.w, -r6.w
					      add r2.y, r2_abs.y, c7.z
					      rcp r2.y, r2.y
					      texldl r5, r5, s1
					      add r2.w, -r5.y, r6.w
					      mul_sat r2.w, r2.w, c6.z
					      mad r4.y, r2.w, c7.x, c7.y
					      mul r2.w, r2.w, r2.w
					      mul r5.y, r2.w, r4.y
					      mad r5.x, r4.y, -r2.w, c6.x
					      dp2add r2.w, r5, r2.xzzw, c6.y
					      mad r2.y, r2.w, c7.w, r2.y
					      min r5.w, r2.y, c7.w
					      mul r5.xyz, r5.w, r6
					      add r0, r0, r5
					      mul r4, r4.zwxx, c6.xxyy
					      texldl r5, r4.xyww, s3
					      add r2.y, r1.w, -r5.w
					      add r2.y, r2_abs.y, c7.z
					      rcp r2.y, r2.y
					      texldl r4, r4, s1
					      add r2.w, -r4.y, r5.w
					      mul_sat r2.w, r2.w, c6.z
					      mad r4.x, r2.w, c7.x, c7.y
					      mul r2.w, r2.w, r2.w
					      mul r6.y, r2.w, r4.x
					      mad r6.x, r4.x, -r2.w, c6.x
					      dp2add r2.w, r6, r2.xzzw, c6.y
					      mad r2.y, r2.w, c7.w, r2.y
					      min r4.w, r2.y, c7.w
					      mul r4.xyz, r4.w, r5
					      add r0, r0, r4
					      mad r3, r3, c5, v0.xyxy
					      mul r4, r3.xyxx, c6.xxyy
					      texldl r5, r4.xyww, s3
					      add r2.y, r1.w, -r5.w
					      add r2.y, r2_abs.y, c7.z
					      rcp r2.y, r2.y
					      texldl r4, r4, s1
					      add r2.w, -r4.y, r5.w
					      mul_sat r2.w, r2.w, c6.z
					      mad r3.y, r2.w, c7.x, c7.y
					      mul r2.w, r2.w, r2.w
					      mul r4.y, r2.w, r3.y
					      mad r4.x, r3.y, -r2.w, c6.x
					      dp2add r2.w, r4, r2.xzzw, c6.y
					      mad r2.y, r2.w, c7.w, r2.y
					      min r4.w, r2.y, c7.w
					      mul r4.xyz, r4.w, r5
					      add r0, r0, r4
					      mul r3, r3.zwxx, c6.xxyy
					      texldl r4, r3.xyww, s3
					      add r2.y, r1.w, -r4.w
					      add r2.y, r2_abs.y, c7.z
					      rcp r2.y, r2.y
					      texldl r3, r3, s1
					      add r2.w, -r3.y, r4.w
					      mul_sat r2.w, r2.w, c6.z
					      mad r3.x, r2.w, c7.x, c7.y
					      mul r2.w, r2.w, r2.w
					      mul r5.y, r2.w, r3.x
					      mad r5.x, r3.x, -r2.w, c6.x
					      dp2add r2.x, r5, r2.xzzw, c6.y
					      mad r2.x, r2.x, c7.w, r2.y
					      min r3.w, r2.x, c7.w
					      mul r3.xyz, r3.w, r4
					      add r0, r0, r3
					      rcp r0.w, r0.w
					      mul r1.xyz, r0.w, r0
					    endif
					    mov oC0, r1
					
					// approximately 195 instruction slots used (40 texture, 155 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" "SC_DOF_MASK_ON" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[3];
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_2[7];
						vec4 _CoCParams2;
						vec4 unused_0_4[9];
					};
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _ExclusionMask;
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _VirtualCameraTexture2;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					bool u_xlatb1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec2 u_xlat7;
					float u_xlat8;
					float u_xlat9;
					float u_xlat14;
					float u_xlat15;
					float u_xlat22;
					void main()
					{
					    u_xlat0 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1 = textureLod(_ExclusionMask, vs_TEXCOORD0.xy, 0.0);
					    u_xlatb1 = u_xlat1.x<0.5;
					    if(u_xlatb1){
					        SV_Target0 = u_xlat0;
					        return;
					    }
					    u_xlat1 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1.x = u_xlat0.w + (-u_xlat1.y);
					    u_xlat1.x = u_xlat1.x * 0.5;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat8 = u_xlat1.x * -2.0 + 3.0;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x;
					    u_xlat2.x = u_xlat1.x * u_xlat8;
					    u_xlat3 = textureLod(_VirtualCameraTexture2, vec2(0.5, 0.5), 0.0);
					    u_xlat15 = float(1.0) / u_xlat0.w;
					    u_xlat15 = u_xlat15 * u_xlat3.y + u_xlat3.z;
					    u_xlat15 = min(abs(u_xlat15), _CoCParams2.x);
					    u_xlat15 = u_xlat15 * 0.349999994;
					    u_xlat15 = max(u_xlat15, 1.0);
					    u_xlat3 = vec4(u_xlat15) * _ScionResolutionParameters2.xyxy;
					    u_xlat4 = u_xlat3.zwzw * vec4(-0.745654106, 0.113139302, 0.0829383731, -0.803609788) + vs_TEXCOORD0.xyxy;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					    u_xlat15 = u_xlat0.w + (-u_xlat5.w);
					    u_xlat15 = abs(u_xlat15) + 0.00999999978;
					    u_xlat15 = float(1.0) / u_xlat15;
					    u_xlat6 = textureLod(_TiledNeighbourhoodData, u_xlat4.xy, 0.0);
					    u_xlat22 = u_xlat5.w + (-u_xlat6.y);
					    u_xlat22 = u_xlat22 * 0.5;
					    u_xlat22 = clamp(u_xlat22, 0.0, 1.0);
					    u_xlat4.x = u_xlat22 * -2.0 + 3.0;
					    u_xlat22 = u_xlat22 * u_xlat22;
					    u_xlat6.y = u_xlat22 * u_xlat4.x;
					    u_xlat6.x = (-u_xlat4.x) * u_xlat22 + 1.0;
					    u_xlat2.yzw = (-vec3(u_xlat8)) * u_xlat1.xxx + vec3(1.0, 1.0, 1.0);
					    u_xlat1.x = dot(u_xlat6.yx, u_xlat2.xy);
					    u_xlat1.x = u_xlat1.x * 10.0 + u_xlat15;
					    u_xlat1.w = min(u_xlat1.x, 10.0);
					    u_xlat1.xyz = u_xlat1.www * u_xlat5.xyz;
					    u_xlat5.xyz = u_xlat0.xyz;
					    u_xlat5.w = 1.0;
					    u_xlat1 = u_xlat1 + u_xlat5;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat4.zw, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat5.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat4.zw, 0.0);
					    u_xlat7.x = (-u_xlat4.y) + u_xlat5.w;
					    u_xlat7.x = u_xlat7.x * 0.5;
					    u_xlat7.x = clamp(u_xlat7.x, 0.0, 1.0);
					    u_xlat14 = u_xlat7.x * -2.0 + 3.0;
					    u_xlat7.x = u_xlat7.x * u_xlat7.x;
					    u_xlat4.y = u_xlat7.x * u_xlat14;
					    u_xlat4.x = (-u_xlat14) * u_xlat7.x + 1.0;
					    u_xlat7.x = dot(u_xlat4.yx, u_xlat2.xz);
					    u_xlat0.x = u_xlat7.x * 10.0 + u_xlat0.x;
					    u_xlat4.w = min(u_xlat0.x, 10.0);
					    u_xlat4.xyz = u_xlat4.www * u_xlat5.xyz;
					    u_xlat1 = u_xlat1 + u_xlat4;
					    u_xlat4 = u_xlat3.zwzw * vec4(0.258436203, 0.186414197, -0.710718393, -0.601000786) + vs_TEXCOORD0.xyxy;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat5.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat6 = textureLod(_TiledNeighbourhoodData, u_xlat4.xy, 0.0);
					    u_xlat7.x = u_xlat5.w + (-u_xlat6.y);
					    u_xlat7.x = u_xlat7.x * 0.5;
					    u_xlat7.x = clamp(u_xlat7.x, 0.0, 1.0);
					    u_xlat14 = u_xlat7.x * -2.0 + 3.0;
					    u_xlat7.x = u_xlat7.x * u_xlat7.x;
					    u_xlat4.y = u_xlat7.x * u_xlat14;
					    u_xlat4.x = (-u_xlat14) * u_xlat7.x + 1.0;
					    u_xlat7.x = dot(u_xlat4.yx, u_xlat2.xw);
					    u_xlat0.x = u_xlat7.x * 10.0 + u_xlat0.x;
					    u_xlat6.w = min(u_xlat0.x, 10.0);
					    u_xlat6.xyz = u_xlat5.xyz * u_xlat6.www;
					    u_xlat1 = u_xlat1 + u_xlat6;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat4.zw, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat5.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat4.zw, 0.0);
					    u_xlat7.x = (-u_xlat4.y) + u_xlat5.w;
					    u_xlat7.x = u_xlat7.x * 0.5;
					    u_xlat7.x = clamp(u_xlat7.x, 0.0, 1.0);
					    u_xlat14 = u_xlat7.x * -2.0 + 3.0;
					    u_xlat7.x = u_xlat7.x * u_xlat7.x;
					    u_xlat4.y = u_xlat7.x * u_xlat14;
					    u_xlat4.x = (-u_xlat14) * u_xlat7.x + 1.0;
					    u_xlat7.xy = u_xlat2.xx * vec2(-1.0, 1.0) + vec2(1.0, 0.0);
					    u_xlat2.x = dot(u_xlat4.xy, u_xlat7.xy);
					    u_xlat0.x = u_xlat2.x * 10.0 + u_xlat0.x;
					    u_xlat2.w = min(u_xlat0.x, 10.0);
					    u_xlat2.xyz = u_xlat2.www * u_xlat5.xyz;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2 = u_xlat3.zwzw * vec4(0.0893398523, 0.90515691, -0.617822409, 0.76241082) + vs_TEXCOORD0.xyxy;
					    u_xlat4 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat4.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat5 = textureLod(_TiledNeighbourhoodData, u_xlat2.xy, 0.0);
					    u_xlat2.x = u_xlat4.w + (-u_xlat5.y);
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat9 = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat5.y = u_xlat2.x * u_xlat9;
					    u_xlat5.x = (-u_xlat9) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat5.xy, u_xlat7.xy);
					    u_xlat0.x = u_xlat2.x * 10.0 + u_xlat0.x;
					    u_xlat5.w = min(u_xlat0.x, 10.0);
					    u_xlat5.xyz = u_xlat4.xyz * u_xlat5.www;
					    u_xlat1 = u_xlat1 + u_xlat5;
					    u_xlat4 = textureLod(_HalfResSourceDepthTexture, u_xlat2.zw, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat4.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat2 = textureLod(_TiledNeighbourhoodData, u_xlat2.zw, 0.0);
					    u_xlat2.x = (-u_xlat2.y) + u_xlat4.w;
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat9 = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat5.y = u_xlat2.x * u_xlat9;
					    u_xlat5.x = (-u_xlat9) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat5.xy, u_xlat7.xy);
					    u_xlat0.x = u_xlat2.x * 10.0 + u_xlat0.x;
					    u_xlat2.w = min(u_xlat0.x, 10.0);
					    u_xlat2.xyz = u_xlat2.www * u_xlat4.xyz;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2 = u_xlat3 * vec4(0.734034419, -0.416939408, 0.922537029, 0.281461209) + vs_TEXCOORD0.xyxy;
					    u_xlat3 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat3.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat2.xy, 0.0);
					    u_xlat2.x = u_xlat3.w + (-u_xlat4.y);
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat9 = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat4.y = u_xlat2.x * u_xlat9;
					    u_xlat4.x = (-u_xlat9) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat4.xy, u_xlat7.xy);
					    u_xlat0.x = u_xlat2.x * 10.0 + u_xlat0.x;
					    u_xlat4.w = min(u_xlat0.x, 10.0);
					    u_xlat4.xyz = u_xlat3.xyz * u_xlat4.www;
					    u_xlat1 = u_xlat1 + u_xlat4;
					    u_xlat3 = textureLod(_HalfResSourceDepthTexture, u_xlat2.zw, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat3.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat2 = textureLod(_TiledNeighbourhoodData, u_xlat2.zw, 0.0);
					    u_xlat2.x = (-u_xlat2.y) + u_xlat3.w;
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat9 = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat4.y = u_xlat2.x * u_xlat9;
					    u_xlat4.x = (-u_xlat9) * u_xlat2.x + 1.0;
					    u_xlat7.x = dot(u_xlat4.xy, u_xlat7.xy);
					    u_xlat0.x = u_xlat7.x * 10.0 + u_xlat0.x;
					    u_xlat2.w = min(u_xlat0.x, 10.0);
					    u_xlat2.xyz = u_xlat2.www * u_xlat3.xyz;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    SV_Target0.xyz = u_xlat1.xyz / u_xlat1.www;
					    SV_Target0.w = u_xlat0.w;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _CoCParams1;
					//   float4 _CoCParams2;
					//   sampler2D _HalfResSourceDepthTexture;
					//   float4 _ScionResolutionParameters2;
					//   sampler2D _TiledNeighbourhoodData;
					//   sampler2D _VirtualCameraTexture2;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters2 c0       1
					//   _CoCParams1                 c1       1
					//   _CoCParams2                 c2       1
					//   _VirtualCameraTexture2      s0       1
					//   _TiledNeighbourhoodData     s1       1
					//   _HalfResSourceDepthTexture  s2       1
					//
					
					    ps_3_0
					    def c3, -0.745654106, 0.113139302, 0.0829383731, -0.803609788
					    def c4, 0.258436203, 0.186414197, -0.710718393, -0.601000786
					    def c5, 0.0893398523, 0.90515691, -0.617822409, 0.76241082
					    def c6, 0.734034419, -0.416939408, 0.922537029, 0.281461209
					    def c7, 1, 0, 0.5, 0.349999994
					    def c8, -2, 3, 0.00999999978, 10
					    def c9, -1, 1, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    texldl r0, c7.zzyy, s0
					    mul r1, c7.xxyy, v0.xyxx
					    texldl r2, r1, s2
					    texldl r1, r1, s1
					    add r0.x, -r1.y, r2.w
					    add r0.w, -r2.w, c1.z
					    max r1.x, r0.w, -c1.w
					    min r0.w, c1.w, r1.x
					    add r0.w, r0.w, r2.w
					    rcp r0.w, r0.w
					    mad r0.y, r0.w, r0.y, r0.z
					    min r1.x, c2.x, r0_abs.y
					    mul r0.y, r1.x, c7.w
					    max r1.x, r0.y, c7.x
					    mul r1, r1.x, c0.xyxy
					    mad r3, r1.zwzw, c3, v0.xyxy
					    mul r4, r3.xyxx, c7.xxyy
					    mul r3, r3.zwxx, c7.xxyy
					    texldl r5, r4, s1
					    texldl r4, r4.xyww, s2
					    add r0.y, -r5.y, r4.w
					    mul_sat r0.xy, r0, c7.z
					    mad r0.z, r0.y, c8.x, c8.y
					    mul r0.y, r0.y, r0.y
					    mul r5.y, r0.y, r0.z
					    mad r5.x, r0.z, -r0.y, c7.x
					    mad r0.y, r0.x, c8.x, c8.y
					    mul r0.x, r0.x, r0.x
					    mad r6.yzw, r0.y, -r0.x, c7.x
					    mul r6.x, r0.x, r0.y
					    dp2add r0.x, r5, r6.yxzw, c7.y
					    add r0.y, r2.w, -r4.w
					    add r0.y, r0_abs.y, c8.z
					    rcp r0.y, r0.y
					    mad r0.x, r0.x, c8.w, r0.y
					    min r5.w, r0.x, c8.w
					    mul r5.xyz, r4, r5.w
					    mad r0, r2.xyzx, c7.xxxy, c7.yyyx
					    add r0, r5, r0
					    texldl r4, r3, s1
					    texldl r3, r3.xyww, s2
					    add r2.x, -r4.y, r3.w
					    mul_sat r2.x, r2.x, c7.z
					    mad r2.y, r2.x, c8.x, c8.y
					    mul r2.x, r2.x, r2.x
					    mul r4.y, r2.x, r2.y
					    mad r4.x, r2.y, -r2.x, c7.x
					    dp2add r2.x, r4, r6.zxzw, c7.y
					    add r2.y, r2.w, -r3.w
					    add r2.y, r2_abs.y, c8.z
					    rcp r2.y, r2.y
					    mad r2.x, r2.x, c8.w, r2.y
					    min r4.w, r2.x, c8.w
					    mul r4.xyz, r3, r4.w
					    add r0, r0, r4
					    mad r3, r1.zwzw, c4, v0.xyxy
					    mul r4, r3.xyxx, c7.xxyy
					    mul r3, r3.zwxx, c7.xxyy
					    texldl r5, r4, s1
					    texldl r4, r4.xyww, s2
					    add r2.x, -r5.y, r4.w
					    mul_sat r2.x, r2.x, c7.z
					    mad r2.y, r2.x, c8.x, c8.y
					    mul r2.x, r2.x, r2.x
					    mul r5.y, r2.x, r2.y
					    mad r5.x, r2.y, -r2.x, c7.x
					    dp2add r2.x, r5, r6.wxzw, c7.y
					    mad r2.yz, r6.x, c9.xxyw, c9
					    add r4.w, r2.w, -r4.w
					    add r4.w, r4_abs.w, c8.z
					    rcp r4.w, r4.w
					    mad r2.x, r2.x, c8.w, r4.w
					    min r5.w, r2.x, c8.w
					    mul r5.xyz, r4, r5.w
					    add r0, r0, r5
					    texldl r4, r3, s1
					    texldl r3, r3.xyww, s2
					    add r2.x, -r4.y, r3.w
					    mul_sat r2.x, r2.x, c7.z
					    mad r4.x, r2.x, c8.x, c8.y
					    mul r2.x, r2.x, r2.x
					    mul r5.y, r2.x, r4.x
					    mad r5.x, r4.x, -r2.x, c7.x
					    dp2add r2.x, r5, r2.yzzw, c7.y
					    add r3.w, r2.w, -r3.w
					    add r3.w, r3_abs.w, c8.z
					    rcp r3.w, r3.w
					    mad r2.x, r2.x, c8.w, r3.w
					    min r4.w, r2.x, c8.w
					    mul r4.xyz, r3, r4.w
					    add r0, r0, r4
					    mad r3, r1.zwzw, c5, v0.xyxy
					    mad r1, r1, c6, v0.xyxy
					    mul r4, r3.xyxx, c7.xxyy
					    mul r3, r3.zwxx, c7.xxyy
					    texldl r5, r4, s1
					    texldl r4, r4.xyww, s2
					    add r2.x, -r5.y, r4.w
					    mul_sat r2.x, r2.x, c7.z
					    mad r5.x, r2.x, c8.x, c8.y
					    mul r2.x, r2.x, r2.x
					    mul r6.y, r2.x, r5.x
					    mad r6.x, r5.x, -r2.x, c7.x
					    dp2add r2.x, r6, r2.yzzw, c7.y
					    add r4.w, r2.w, -r4.w
					    add r4.w, r4_abs.w, c8.z
					    rcp r4.w, r4.w
					    mad r2.x, r2.x, c8.w, r4.w
					    min r5.w, r2.x, c8.w
					    mul r5.xyz, r4, r5.w
					    add r0, r0, r5
					    texldl r4, r3, s1
					    texldl r3, r3.xyww, s2
					    add r2.x, -r4.y, r3.w
					    mul_sat r2.x, r2.x, c7.z
					    mad r4.x, r2.x, c8.x, c8.y
					    mul r2.x, r2.x, r2.x
					    mul r5.y, r2.x, r4.x
					    mad r5.x, r4.x, -r2.x, c7.x
					    dp2add r2.x, r5, r2.yzzw, c7.y
					    add r3.w, r2.w, -r3.w
					    add r3.w, r3_abs.w, c8.z
					    rcp r3.w, r3.w
					    mad r2.x, r2.x, c8.w, r3.w
					    min r4.w, r2.x, c8.w
					    mul r4.xyz, r3, r4.w
					    add r0, r0, r4
					    mul r3, r1.xyxx, c7.xxyy
					    mul r1, r1.zwxx, c7.xxyy
					    texldl r4, r3, s1
					    texldl r3, r3.xyww, s2
					    add r2.x, -r4.y, r3.w
					    mul_sat r2.x, r2.x, c7.z
					    mad r4.x, r2.x, c8.x, c8.y
					    mul r2.x, r2.x, r2.x
					    mul r5.y, r2.x, r4.x
					    mad r5.x, r4.x, -r2.x, c7.x
					    dp2add r2.x, r5, r2.yzzw, c7.y
					    add r3.w, r2.w, -r3.w
					    add r3.w, r3_abs.w, c8.z
					    rcp r3.w, r3.w
					    mad r2.x, r2.x, c8.w, r3.w
					    min r4.w, r2.x, c8.w
					    mul r4.xyz, r3, r4.w
					    add r0, r0, r4
					    texldl r3, r1, s1
					    texldl r1, r1.xyww, s2
					    add r2.x, -r3.y, r1.w
					    mul_sat r2.x, r2.x, c7.z
					    mad r3.x, r2.x, c8.x, c8.y
					    mul r2.x, r2.x, r2.x
					    mul r4.y, r2.x, r3.x
					    mad r4.x, r3.x, -r2.x, c7.x
					    dp2add r2.x, r4, r2.yzzw, c7.y
					    add r1.w, -r1.w, r2.w
					    mov oC0.w, r2.w
					    add r1.w, r1_abs.w, c8.z
					    rcp r1.w, r1.w
					    mad r1.w, r2.x, c8.w, r1.w
					    min r2.w, r1.w, c8.w
					    mul r2.xyz, r1, r2.w
					    add r0, r0, r2
					    rcp r0.w, r0.w
					    mul oC0.xyz, r0.w, r0
					
					// approximately 191 instruction slots used (38 texture, 153 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[3];
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_2[6];
						vec4 _CoCParams1;
						vec4 _CoCParams2;
						vec4 unused_0_5[9];
					};
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _VirtualCameraTexture2;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					float u_xlat8;
					vec2 u_xlat9;
					float u_xlat10;
					float u_xlat22;
					float u_xlat24;
					void main()
					{
					    u_xlat0.w = 1.0;
					    u_xlat1 = textureLod(_VirtualCameraTexture2, vec2(0.5, 0.5), 0.0);
					    u_xlat2 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1.x = (-u_xlat2.w) + _CoCParams1.z;
					    u_xlat1.x = max(u_xlat1.x, (-_CoCParams1.w));
					    u_xlat1.x = min(u_xlat1.x, _CoCParams1.w);
					    u_xlat1.x = u_xlat1.x + u_xlat2.w;
					    u_xlat1.x = float(1.0) / u_xlat1.x;
					    u_xlat1.x = u_xlat1.x * u_xlat1.y + u_xlat1.z;
					    u_xlat1.x = min(abs(u_xlat1.x), _CoCParams2.x);
					    u_xlat1.x = u_xlat1.x * 0.349999994;
					    u_xlat1.x = max(u_xlat1.x, 1.0);
					    u_xlat1 = u_xlat1.xxxx * _ScionResolutionParameters2.xyxy;
					    u_xlat3 = u_xlat1.zwzw * vec4(-0.745654106, 0.113139302, 0.0829383731, -0.803609788) + vs_TEXCOORD0.xyxy;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat3.xy, 0.0);
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat3.xy, 0.0);
					    u_xlat3.x = (-u_xlat4.y) + u_xlat5.w;
					    u_xlat3.x = u_xlat3.x * 0.5;
					    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
					    u_xlat10 = u_xlat3.x * -2.0 + 3.0;
					    u_xlat3.x = u_xlat3.x * u_xlat3.x;
					    u_xlat4.y = u_xlat3.x * u_xlat10;
					    u_xlat4.x = (-u_xlat10) * u_xlat3.x + 1.0;
					    u_xlat6 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat3.x = u_xlat2.w + (-u_xlat6.y);
					    u_xlat3.x = u_xlat3.x * 0.5;
					    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
					    u_xlat10 = u_xlat3.x * -2.0 + 3.0;
					    u_xlat3.x = u_xlat3.x * u_xlat3.x;
					    u_xlat6.yzw = (-vec3(u_xlat10)) * u_xlat3.xxx + vec3(1.0, 1.0, 1.0);
					    u_xlat6.x = u_xlat3.x * u_xlat10;
					    u_xlat3.x = dot(u_xlat4.yx, u_xlat6.xy);
					    u_xlat10 = u_xlat2.w + (-u_xlat5.w);
					    u_xlat10 = abs(u_xlat10) + 0.00999999978;
					    u_xlat10 = float(1.0) / u_xlat10;
					    u_xlat3.x = u_xlat3.x * 10.0 + u_xlat10;
					    u_xlat4.w = min(u_xlat3.x, 10.0);
					    u_xlat4.xyz = u_xlat4.www * u_xlat5.xyz;
					    u_xlat0.xyz = u_xlat2.xyz;
					    u_xlat0 = u_xlat0 + u_xlat4;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat3.zw, 0.0);
					    u_xlat3 = textureLod(_HalfResSourceDepthTexture, u_xlat3.zw, 0.0);
					    u_xlat2.x = (-u_xlat4.y) + u_xlat3.w;
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat9.x = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat4.y = u_xlat2.x * u_xlat9.x;
					    u_xlat4.x = (-u_xlat9.x) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat4.yx, u_xlat6.xz);
					    u_xlat9.x = u_xlat2.w + (-u_xlat3.w);
					    u_xlat9.x = abs(u_xlat9.x) + 0.00999999978;
					    u_xlat9.x = float(1.0) / u_xlat9.x;
					    u_xlat2.x = u_xlat2.x * 10.0 + u_xlat9.x;
					    u_xlat4.w = min(u_xlat2.x, 10.0);
					    u_xlat4.xyz = u_xlat3.xyz * u_xlat4.www;
					    u_xlat0 = u_xlat0 + u_xlat4;
					    u_xlat3 = u_xlat1.zwzw * vec4(0.258436203, 0.186414197, -0.710718393, -0.601000786) + vs_TEXCOORD0.xyxy;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat3.xy, 0.0);
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat3.xy, 0.0);
					    u_xlat2.x = (-u_xlat4.y) + u_xlat5.w;
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat9.x = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat3.y = u_xlat2.x * u_xlat9.x;
					    u_xlat3.x = (-u_xlat9.x) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat3.yx, u_xlat6.xw);
					    u_xlat9.xy = u_xlat6.xx * vec2(-1.0, 1.0) + vec2(1.0, 0.0);
					    u_xlat3.x = u_xlat2.w + (-u_xlat5.w);
					    u_xlat3.x = abs(u_xlat3.x) + 0.00999999978;
					    u_xlat3.x = float(1.0) / u_xlat3.x;
					    u_xlat2.x = u_xlat2.x * 10.0 + u_xlat3.x;
					    u_xlat4.w = min(u_xlat2.x, 10.0);
					    u_xlat4.xyz = u_xlat4.www * u_xlat5.xyz;
					    u_xlat0 = u_xlat0 + u_xlat4;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat3.zw, 0.0);
					    u_xlat3 = textureLod(_HalfResSourceDepthTexture, u_xlat3.zw, 0.0);
					    u_xlat2.x = (-u_xlat4.y) + u_xlat3.w;
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat4.x = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat5.y = u_xlat2.x * u_xlat4.x;
					    u_xlat5.x = (-u_xlat4.x) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat5.xy, u_xlat9.xy);
					    u_xlat24 = u_xlat2.w + (-u_xlat3.w);
					    u_xlat24 = abs(u_xlat24) + 0.00999999978;
					    u_xlat24 = float(1.0) / u_xlat24;
					    u_xlat2.x = u_xlat2.x * 10.0 + u_xlat24;
					    u_xlat4.w = min(u_xlat2.x, 10.0);
					    u_xlat4.xyz = u_xlat3.xyz * u_xlat4.www;
					    u_xlat0 = u_xlat0 + u_xlat4;
					    u_xlat3 = u_xlat1.zwzw * vec4(0.0893398523, 0.90515691, -0.617822409, 0.76241082) + vs_TEXCOORD0.xyxy;
					    u_xlat1 = u_xlat1 * vec4(0.734034419, -0.416939408, 0.922537029, 0.281461209) + vs_TEXCOORD0.xyxy;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat3.xy, 0.0);
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat3.xy, 0.0);
					    u_xlat2.x = (-u_xlat4.y) + u_xlat5.w;
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat3.x = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat4.y = u_xlat2.x * u_xlat3.x;
					    u_xlat4.x = (-u_xlat3.x) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat4.xy, u_xlat9.xy);
					    u_xlat3.x = u_xlat2.w + (-u_xlat5.w);
					    u_xlat3.x = abs(u_xlat3.x) + 0.00999999978;
					    u_xlat3.x = float(1.0) / u_xlat3.x;
					    u_xlat2.x = u_xlat2.x * 10.0 + u_xlat3.x;
					    u_xlat4.w = min(u_xlat2.x, 10.0);
					    u_xlat4.xyz = u_xlat4.www * u_xlat5.xyz;
					    u_xlat0 = u_xlat0 + u_xlat4;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat3.zw, 0.0);
					    u_xlat3 = textureLod(_HalfResSourceDepthTexture, u_xlat3.zw, 0.0);
					    u_xlat2.x = (-u_xlat4.y) + u_xlat3.w;
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat4.x = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat5.y = u_xlat2.x * u_xlat4.x;
					    u_xlat5.x = (-u_xlat4.x) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat5.xy, u_xlat9.xy);
					    u_xlat24 = u_xlat2.w + (-u_xlat3.w);
					    u_xlat24 = abs(u_xlat24) + 0.00999999978;
					    u_xlat24 = float(1.0) / u_xlat24;
					    u_xlat2.x = u_xlat2.x * 10.0 + u_xlat24;
					    u_xlat4.w = min(u_xlat2.x, 10.0);
					    u_xlat4.xyz = u_xlat3.xyz * u_xlat4.www;
					    u_xlat0 = u_xlat0 + u_xlat4;
					    u_xlat3 = textureLod(_TiledNeighbourhoodData, u_xlat1.xy, 0.0);
					    u_xlat4 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat1.x = (-u_xlat3.y) + u_xlat4.w;
					    u_xlat1.x = u_xlat1.x * 0.5;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat8 = u_xlat1.x * -2.0 + 3.0;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x;
					    u_xlat3.y = u_xlat1.x * u_xlat8;
					    u_xlat3.x = (-u_xlat8) * u_xlat1.x + 1.0;
					    u_xlat1.x = dot(u_xlat3.xy, u_xlat9.xy);
					    u_xlat8 = u_xlat2.w + (-u_xlat4.w);
					    u_xlat8 = abs(u_xlat8) + 0.00999999978;
					    u_xlat8 = float(1.0) / u_xlat8;
					    u_xlat1.x = u_xlat1.x * 10.0 + u_xlat8;
					    u_xlat3.w = min(u_xlat1.x, 10.0);
					    u_xlat3.xyz = u_xlat3.www * u_xlat4.xyz;
					    u_xlat0 = u_xlat0 + u_xlat3;
					    u_xlat3 = textureLod(_TiledNeighbourhoodData, u_xlat1.zw, 0.0);
					    u_xlat1 = textureLod(_HalfResSourceDepthTexture, u_xlat1.zw, 0.0);
					    u_xlat2.x = (-u_xlat3.y) + u_xlat1.w;
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat3.x = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat4.y = u_xlat2.x * u_xlat3.x;
					    u_xlat4.x = (-u_xlat3.x) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat4.xy, u_xlat9.xy);
					    u_xlat22 = (-u_xlat1.w) + u_xlat2.w;
					    SV_Target0.w = u_xlat2.w;
					    u_xlat22 = abs(u_xlat22) + 0.00999999978;
					    u_xlat22 = float(1.0) / u_xlat22;
					    u_xlat22 = u_xlat2.x * 10.0 + u_xlat22;
					    u_xlat2.w = min(u_xlat22, 10.0);
					    u_xlat2.xyz = u_xlat1.xyz * u_xlat2.www;
					    u_xlat0 = u_xlat0 + u_xlat2;
					    SV_Target0.xyz = u_xlat0.xyz / u_xlat0.www;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" "SC_DOF_MASK_ON" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _CoCParams1;
					//   float4 _CoCParams2;
					//   sampler2D _ExclusionMask;
					//   sampler2D _HalfResSourceDepthTexture;
					//   float4 _ScionResolutionParameters2;
					//   sampler2D _TiledNeighbourhoodData;
					//   sampler2D _VirtualCameraTexture2;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters2 c0       1
					//   _CoCParams1                 c1       1
					//   _CoCParams2                 c2       1
					//   _VirtualCameraTexture2      s0       1
					//   _TiledNeighbourhoodData     s1       1
					//   _ExclusionMask              s2       1
					//   _HalfResSourceDepthTexture  s3       1
					//
					
					    ps_3_0
					    def c3, -0.745654106, 0.113139302, 0.0829383731, -0.803609788
					    def c4, 0.258436203, 0.186414197, -0.710718393, -0.601000786
					    def c5, 0.0893398523, 0.90515691, -0.617822409, 0.76241082
					    def c6, 0.734034419, -0.416939408, 0.922537029, 0.281461209
					    def c7, 1, 0, 0.5, 0.349999994
					    def c8, -2, 3, 0.00999999978, 10
					    def c9, -1, 1, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    dcl_2d s3
					    mul r0, c7.xxyy, v0.xyxx
					    texldl r1, r0, s3
					    texldl r2, r0, s2
					    if_lt r2.x, c7.z
					    else
					      texldl r0, r0, s1
					      add r0.x, -r0.y, r1.w
					      mul_sat r0.x, r0.x, c7.z
					      mad r0.y, r0.x, c8.x, c8.y
					      mul r0.x, r0.x, r0.x
					      mul r2.x, r0.x, r0.y
					      texldl r3, c7.zzyy, s0
					      add r0.z, -r1.w, c1.z
					      max r3.x, r0.z, -c1.w
					      min r0.z, c1.w, r3.x
					      add r0.z, r0.z, r1.w
					      rcp r0.z, r0.z
					      mad r0.z, r0.z, r3.y, r3.z
					      min r3.x, c2.x, r0_abs.z
					      mul r0.z, r3.x, c7.w
					      max r3.x, r0.z, c7.x
					      mul r3, r3.x, c0.xyxy
					      mad r4, r3.zwzw, c3, v0.xyxy
					      mul r5, r4.xyxx, c7.xxyy
					      texldl r6, r5.xyww, s3
					      add r0.z, r1.w, -r6.w
					      add r0.z, r0_abs.z, c8.z
					      rcp r0.z, r0.z
					      texldl r5, r5, s1
					      add r0.w, -r5.y, r6.w
					      mul_sat r0.w, r0.w, c7.z
					      mad r4.y, r0.w, c8.x, c8.y
					      mul r0.w, r0.w, r0.w
					      mul r5.y, r0.w, r4.y
					      mad r5.x, r4.y, -r0.w, c7.x
					      mad r2.yzw, r0.y, -r0.x, c7.x
					      dp2add r0.x, r5, r2.yxzw, c7.y
					      mad r0.x, r0.x, c8.w, r0.z
					      min r5.w, r0.x, c8.w
					      mul r5.xyz, r5.w, r6
					      mad r0, r1.xyzx, c7.xxxy, c7.yyyx
					      add r0, r5, r0
					      mul r4, r4.zwxx, c7.xxyy
					      texldl r5, r4.xyww, s3
					      add r2.y, r1.w, -r5.w
					      add r2.y, r2_abs.y, c8.z
					      rcp r2.y, r2.y
					      texldl r4, r4, s1
					      add r4.x, -r4.y, r5.w
					      mul_sat r4.x, r4.x, c7.z
					      mad r4.y, r4.x, c8.x, c8.y
					      mul r4.x, r4.x, r4.x
					      mul r6.y, r4.x, r4.y
					      mad r6.x, r4.y, -r4.x, c7.x
					      dp2add r2.z, r6, r2.zxzw, c7.y
					      mad r2.y, r2.z, c8.w, r2.y
					      min r4.w, r2.y, c8.w
					      mul r4.xyz, r4.w, r5
					      add r0, r0, r4
					      mad r4, r3.zwzw, c4, v0.xyxy
					      mul r5, r4.xyxx, c7.xxyy
					      texldl r6, r5.xyww, s3
					      add r2.y, r1.w, -r6.w
					      add r2.y, r2_abs.y, c8.z
					      rcp r2.y, r2.y
					      texldl r5, r5, s1
					      add r2.z, -r5.y, r6.w
					      mul_sat r2.z, r2.z, c7.z
					      mad r4.y, r2.z, c8.x, c8.y
					      mul r2.z, r2.z, r2.z
					      mul r5.y, r2.z, r4.y
					      mad r5.x, r4.y, -r2.z, c7.x
					      dp2add r2.z, r5, r2.wxzw, c7.y
					      mad r2.y, r2.z, c8.w, r2.y
					      min r5.w, r2.y, c8.w
					      mul r5.xyz, r5.w, r6
					      add r0, r0, r5
					      mul r4, r4.zwxx, c7.xxyy
					      texldl r5, r4.xyww, s3
					      add r2.y, r1.w, -r5.w
					      add r2.y, r2_abs.y, c8.z
					      rcp r2.y, r2.y
					      texldl r4, r4, s1
					      add r2.z, -r4.y, r5.w
					      mul_sat r2.z, r2.z, c7.z
					      mad r2.w, r2.z, c8.x, c8.y
					      mul r2.z, r2.z, r2.z
					      mul r4.y, r2.z, r2.w
					      mad r4.x, r2.w, -r2.z, c7.x
					      mad r2.xz, r2.x, c9.xyyw, c9.yyzw
					      dp2add r2.w, r4, r2.xzzw, c7.y
					      mad r2.y, r2.w, c8.w, r2.y
					      min r4.w, r2.y, c8.w
					      mul r4.xyz, r4.w, r5
					      add r0, r0, r4
					      mad r4, r3.zwzw, c5, v0.xyxy
					      mul r5, r4.xyxx, c7.xxyy
					      texldl r6, r5.xyww, s3
					      add r2.y, r1.w, -r6.w
					      add r2.y, r2_abs.y, c8.z
					      rcp r2.y, r2.y
					      texldl r5, r5, s1
					      add r2.w, -r5.y, r6.w
					      mul_sat r2.w, r2.w, c7.z
					      mad r4.y, r2.w, c8.x, c8.y
					      mul r2.w, r2.w, r2.w
					      mul r5.y, r2.w, r4.y
					      mad r5.x, r4.y, -r2.w, c7.x
					      dp2add r2.w, r5, r2.xzzw, c7.y
					      mad r2.y, r2.w, c8.w, r2.y
					      min r5.w, r2.y, c8.w
					      mul r5.xyz, r5.w, r6
					      add r0, r0, r5
					      mul r4, r4.zwxx, c7.xxyy
					      texldl r5, r4.xyww, s3
					      add r2.y, r1.w, -r5.w
					      add r2.y, r2_abs.y, c8.z
					      rcp r2.y, r2.y
					      texldl r4, r4, s1
					      add r2.w, -r4.y, r5.w
					      mul_sat r2.w, r2.w, c7.z
					      mad r4.x, r2.w, c8.x, c8.y
					      mul r2.w, r2.w, r2.w
					      mul r6.y, r2.w, r4.x
					      mad r6.x, r4.x, -r2.w, c7.x
					      dp2add r2.w, r6, r2.xzzw, c7.y
					      mad r2.y, r2.w, c8.w, r2.y
					      min r4.w, r2.y, c8.w
					      mul r4.xyz, r4.w, r5
					      add r0, r0, r4
					      mad r3, r3, c6, v0.xyxy
					      mul r4, r3.xyxx, c7.xxyy
					      texldl r5, r4.xyww, s3
					      add r2.y, r1.w, -r5.w
					      add r2.y, r2_abs.y, c8.z
					      rcp r2.y, r2.y
					      texldl r4, r4, s1
					      add r2.w, -r4.y, r5.w
					      mul_sat r2.w, r2.w, c7.z
					      mad r3.y, r2.w, c8.x, c8.y
					      mul r2.w, r2.w, r2.w
					      mul r4.y, r2.w, r3.y
					      mad r4.x, r3.y, -r2.w, c7.x
					      dp2add r2.w, r4, r2.xzzw, c7.y
					      mad r2.y, r2.w, c8.w, r2.y
					      min r4.w, r2.y, c8.w
					      mul r4.xyz, r4.w, r5
					      add r0, r0, r4
					      mul r3, r3.zwxx, c7.xxyy
					      texldl r4, r3.xyww, s3
					      add r2.y, r1.w, -r4.w
					      add r2.y, r2_abs.y, c8.z
					      rcp r2.y, r2.y
					      texldl r3, r3, s1
					      add r2.w, -r3.y, r4.w
					      mul_sat r2.w, r2.w, c7.z
					      mad r3.x, r2.w, c8.x, c8.y
					      mul r2.w, r2.w, r2.w
					      mul r5.y, r2.w, r3.x
					      mad r5.x, r3.x, -r2.w, c7.x
					      dp2add r2.x, r5, r2.xzzw, c7.y
					      mad r2.x, r2.x, c8.w, r2.y
					      min r3.w, r2.x, c8.w
					      mul r3.xyz, r3.w, r4
					      add r0, r0, r3
					      rcp r0.w, r0.w
					      mul r1.xyz, r0.w, r0
					    endif
					    mov oC0, r1
					
					// approximately 199 instruction slots used (40 texture, 159 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" "SC_DOF_MASK_ON" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[3];
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_2[6];
						vec4 _CoCParams1;
						vec4 _CoCParams2;
						vec4 unused_0_5[9];
					};
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _ExclusionMask;
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _VirtualCameraTexture2;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					bool u_xlatb1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec2 u_xlat7;
					float u_xlat8;
					float u_xlat9;
					float u_xlat14;
					float u_xlat15;
					float u_xlat22;
					void main()
					{
					    u_xlat0 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1 = textureLod(_ExclusionMask, vs_TEXCOORD0.xy, 0.0);
					    u_xlatb1 = u_xlat1.x<0.5;
					    if(u_xlatb1){
					        SV_Target0 = u_xlat0;
					        return;
					    }
					    u_xlat1 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1.x = u_xlat0.w + (-u_xlat1.y);
					    u_xlat1.x = u_xlat1.x * 0.5;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat8 = u_xlat1.x * -2.0 + 3.0;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x;
					    u_xlat2.x = u_xlat1.x * u_xlat8;
					    u_xlat3 = textureLod(_VirtualCameraTexture2, vec2(0.5, 0.5), 0.0);
					    u_xlat15 = (-u_xlat0.w) + _CoCParams1.z;
					    u_xlat15 = max(u_xlat15, (-_CoCParams1.w));
					    u_xlat15 = min(u_xlat15, _CoCParams1.w);
					    u_xlat15 = u_xlat0.w + u_xlat15;
					    u_xlat15 = float(1.0) / u_xlat15;
					    u_xlat15 = u_xlat15 * u_xlat3.y + u_xlat3.z;
					    u_xlat15 = min(abs(u_xlat15), _CoCParams2.x);
					    u_xlat15 = u_xlat15 * 0.349999994;
					    u_xlat15 = max(u_xlat15, 1.0);
					    u_xlat3 = vec4(u_xlat15) * _ScionResolutionParameters2.xyxy;
					    u_xlat4 = u_xlat3.zwzw * vec4(-0.745654106, 0.113139302, 0.0829383731, -0.803609788) + vs_TEXCOORD0.xyxy;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					    u_xlat15 = u_xlat0.w + (-u_xlat5.w);
					    u_xlat15 = abs(u_xlat15) + 0.00999999978;
					    u_xlat15 = float(1.0) / u_xlat15;
					    u_xlat6 = textureLod(_TiledNeighbourhoodData, u_xlat4.xy, 0.0);
					    u_xlat22 = u_xlat5.w + (-u_xlat6.y);
					    u_xlat22 = u_xlat22 * 0.5;
					    u_xlat22 = clamp(u_xlat22, 0.0, 1.0);
					    u_xlat4.x = u_xlat22 * -2.0 + 3.0;
					    u_xlat22 = u_xlat22 * u_xlat22;
					    u_xlat6.y = u_xlat22 * u_xlat4.x;
					    u_xlat6.x = (-u_xlat4.x) * u_xlat22 + 1.0;
					    u_xlat2.yzw = (-vec3(u_xlat8)) * u_xlat1.xxx + vec3(1.0, 1.0, 1.0);
					    u_xlat1.x = dot(u_xlat6.yx, u_xlat2.xy);
					    u_xlat1.x = u_xlat1.x * 10.0 + u_xlat15;
					    u_xlat1.w = min(u_xlat1.x, 10.0);
					    u_xlat1.xyz = u_xlat1.www * u_xlat5.xyz;
					    u_xlat5.xyz = u_xlat0.xyz;
					    u_xlat5.w = 1.0;
					    u_xlat1 = u_xlat1 + u_xlat5;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat4.zw, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat5.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat4.zw, 0.0);
					    u_xlat7.x = (-u_xlat4.y) + u_xlat5.w;
					    u_xlat7.x = u_xlat7.x * 0.5;
					    u_xlat7.x = clamp(u_xlat7.x, 0.0, 1.0);
					    u_xlat14 = u_xlat7.x * -2.0 + 3.0;
					    u_xlat7.x = u_xlat7.x * u_xlat7.x;
					    u_xlat4.y = u_xlat7.x * u_xlat14;
					    u_xlat4.x = (-u_xlat14) * u_xlat7.x + 1.0;
					    u_xlat7.x = dot(u_xlat4.yx, u_xlat2.xz);
					    u_xlat0.x = u_xlat7.x * 10.0 + u_xlat0.x;
					    u_xlat4.w = min(u_xlat0.x, 10.0);
					    u_xlat4.xyz = u_xlat4.www * u_xlat5.xyz;
					    u_xlat1 = u_xlat1 + u_xlat4;
					    u_xlat4 = u_xlat3.zwzw * vec4(0.258436203, 0.186414197, -0.710718393, -0.601000786) + vs_TEXCOORD0.xyxy;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat5.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat6 = textureLod(_TiledNeighbourhoodData, u_xlat4.xy, 0.0);
					    u_xlat7.x = u_xlat5.w + (-u_xlat6.y);
					    u_xlat7.x = u_xlat7.x * 0.5;
					    u_xlat7.x = clamp(u_xlat7.x, 0.0, 1.0);
					    u_xlat14 = u_xlat7.x * -2.0 + 3.0;
					    u_xlat7.x = u_xlat7.x * u_xlat7.x;
					    u_xlat4.y = u_xlat7.x * u_xlat14;
					    u_xlat4.x = (-u_xlat14) * u_xlat7.x + 1.0;
					    u_xlat7.x = dot(u_xlat4.yx, u_xlat2.xw);
					    u_xlat0.x = u_xlat7.x * 10.0 + u_xlat0.x;
					    u_xlat6.w = min(u_xlat0.x, 10.0);
					    u_xlat6.xyz = u_xlat5.xyz * u_xlat6.www;
					    u_xlat1 = u_xlat1 + u_xlat6;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat4.zw, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat5.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat4.zw, 0.0);
					    u_xlat7.x = (-u_xlat4.y) + u_xlat5.w;
					    u_xlat7.x = u_xlat7.x * 0.5;
					    u_xlat7.x = clamp(u_xlat7.x, 0.0, 1.0);
					    u_xlat14 = u_xlat7.x * -2.0 + 3.0;
					    u_xlat7.x = u_xlat7.x * u_xlat7.x;
					    u_xlat4.y = u_xlat7.x * u_xlat14;
					    u_xlat4.x = (-u_xlat14) * u_xlat7.x + 1.0;
					    u_xlat7.xy = u_xlat2.xx * vec2(-1.0, 1.0) + vec2(1.0, 0.0);
					    u_xlat2.x = dot(u_xlat4.xy, u_xlat7.xy);
					    u_xlat0.x = u_xlat2.x * 10.0 + u_xlat0.x;
					    u_xlat2.w = min(u_xlat0.x, 10.0);
					    u_xlat2.xyz = u_xlat2.www * u_xlat5.xyz;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2 = u_xlat3.zwzw * vec4(0.0893398523, 0.90515691, -0.617822409, 0.76241082) + vs_TEXCOORD0.xyxy;
					    u_xlat4 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat4.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat5 = textureLod(_TiledNeighbourhoodData, u_xlat2.xy, 0.0);
					    u_xlat2.x = u_xlat4.w + (-u_xlat5.y);
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat9 = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat5.y = u_xlat2.x * u_xlat9;
					    u_xlat5.x = (-u_xlat9) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat5.xy, u_xlat7.xy);
					    u_xlat0.x = u_xlat2.x * 10.0 + u_xlat0.x;
					    u_xlat5.w = min(u_xlat0.x, 10.0);
					    u_xlat5.xyz = u_xlat4.xyz * u_xlat5.www;
					    u_xlat1 = u_xlat1 + u_xlat5;
					    u_xlat4 = textureLod(_HalfResSourceDepthTexture, u_xlat2.zw, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat4.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat2 = textureLod(_TiledNeighbourhoodData, u_xlat2.zw, 0.0);
					    u_xlat2.x = (-u_xlat2.y) + u_xlat4.w;
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat9 = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat5.y = u_xlat2.x * u_xlat9;
					    u_xlat5.x = (-u_xlat9) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat5.xy, u_xlat7.xy);
					    u_xlat0.x = u_xlat2.x * 10.0 + u_xlat0.x;
					    u_xlat2.w = min(u_xlat0.x, 10.0);
					    u_xlat2.xyz = u_xlat2.www * u_xlat4.xyz;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2 = u_xlat3 * vec4(0.734034419, -0.416939408, 0.922537029, 0.281461209) + vs_TEXCOORD0.xyxy;
					    u_xlat3 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat3.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat2.xy, 0.0);
					    u_xlat2.x = u_xlat3.w + (-u_xlat4.y);
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat9 = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat4.y = u_xlat2.x * u_xlat9;
					    u_xlat4.x = (-u_xlat9) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat4.xy, u_xlat7.xy);
					    u_xlat0.x = u_xlat2.x * 10.0 + u_xlat0.x;
					    u_xlat4.w = min(u_xlat0.x, 10.0);
					    u_xlat4.xyz = u_xlat3.xyz * u_xlat4.www;
					    u_xlat1 = u_xlat1 + u_xlat4;
					    u_xlat3 = textureLod(_HalfResSourceDepthTexture, u_xlat2.zw, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat3.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat2 = textureLod(_TiledNeighbourhoodData, u_xlat2.zw, 0.0);
					    u_xlat2.x = (-u_xlat2.y) + u_xlat3.w;
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat9 = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat4.y = u_xlat2.x * u_xlat9;
					    u_xlat4.x = (-u_xlat9) * u_xlat2.x + 1.0;
					    u_xlat7.x = dot(u_xlat4.xy, u_xlat7.xy);
					    u_xlat0.x = u_xlat7.x * 10.0 + u_xlat0.x;
					    u_xlat2.w = min(u_xlat0.x, 10.0);
					    u_xlat2.xyz = u_xlat2.www * u_xlat3.xyz;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    SV_Target0.xyz = u_xlat1.xyz / u_xlat1.www;
					    SV_Target0.w = u_xlat0.w;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _AvgCenterDepth;
					//   float4 _CoCParams2;
					//   sampler2D _HalfResSourceDepthTexture;
					//   float4 _ScionResolutionParameters2;
					//   sampler2D _TiledNeighbourhoodData;
					//   float4 _VirtualCameraParams2;
					//   sampler2D _VirtualCameraTexture1;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters2 c0       1
					//   _VirtualCameraParams2       c1       1
					//   _CoCParams2                 c2       1
					//   _VirtualCameraTexture1      s0       1
					//   _TiledNeighbourhoodData     s1       1
					//   _HalfResSourceDepthTexture  s2       1
					//   _AvgCenterDepth             s3       1
					//
					
					    ps_3_0
					    def c3, -0.745654106, 0.113139302, 0.0829383731, -0.803609788
					    def c4, 0.258436203, 0.186414197, -0.710718393, -0.601000786
					    def c5, 0.0893398523, 0.90515691, -0.617822409, 0.76241082
					    def c6, 0.734034419, -0.416939408, 0.922537029, 0.281461209
					    def c7, 1, 0, 0.5, 0.349999994
					    def c8, -2, 3, 0.00999999978, 10
					    def c9, -1, 1, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    dcl_2d s3
					    texldl r0, c7.zzyy, s0
					    rcp r0.x, r0.w
					    mul r0.y, c1.y, c1.y
					    mul r0.x, r0.x, r0.y
					    texldl r1, c7.zzyy, s3
					    mul r0.y, r0.x, r1.x
					    add r0.z, r1.x, -c1.y
					    rcp r0.z, r0.z
					    mul r1.x, r0.z, r0.y
					    mul r1.y, r0.z, -r0.x
					    mul r0.xy, r1, c1.w
					    mul r1, c7.xxyy, v0.xyxx
					    texldl r2, r1, s2
					    texldl r1, r1, s1
					    add r0.z, -r1.y, r2.w
					    rcp r0.w, r2.w
					    mad r0.x, r0.w, r0.x, r0.y
					    min r1.x, c2.x, r0_abs.x
					    mul r0.x, r1.x, c7.w
					    max r1.x, r0.x, c7.x
					    mul r1, r1.x, c0.xyxy
					    mad r3, r1.zwzw, c3, v0.xyxy
					    mul r4, r3.xyxx, c7.xxyy
					    mul r3, r3.zwxx, c7.xxyy
					    texldl r5, r4, s1
					    texldl r4, r4.xyww, s2
					    add r0.x, -r5.y, r4.w
					    mul_sat r0.xz, r0, c7.z
					    mad r0.y, r0.x, c8.x, c8.y
					    mul r0.x, r0.x, r0.x
					    mul r5.y, r0.x, r0.y
					    mad r5.x, r0.y, -r0.x, c7.x
					    mad r0.x, r0.z, c8.x, c8.y
					    mul r0.y, r0.z, r0.z
					    mad r6.yzw, r0.x, -r0.y, c7.x
					    mul r6.x, r0.y, r0.x
					    dp2add r0.x, r5, r6.yxzw, c7.y
					    add r0.y, r2.w, -r4.w
					    add r0.y, r0_abs.y, c8.z
					    rcp r0.y, r0.y
					    mad r0.x, r0.x, c8.w, r0.y
					    min r5.w, r0.x, c8.w
					    mul r5.xyz, r4, r5.w
					    mad r0, r2.xyzx, c7.xxxy, c7.yyyx
					    add r0, r5, r0
					    texldl r4, r3, s1
					    texldl r3, r3.xyww, s2
					    add r2.x, -r4.y, r3.w
					    mul_sat r2.x, r2.x, c7.z
					    mad r2.y, r2.x, c8.x, c8.y
					    mul r2.x, r2.x, r2.x
					    mul r4.y, r2.x, r2.y
					    mad r4.x, r2.y, -r2.x, c7.x
					    dp2add r2.x, r4, r6.zxzw, c7.y
					    add r2.y, r2.w, -r3.w
					    add r2.y, r2_abs.y, c8.z
					    rcp r2.y, r2.y
					    mad r2.x, r2.x, c8.w, r2.y
					    min r4.w, r2.x, c8.w
					    mul r4.xyz, r3, r4.w
					    add r0, r0, r4
					    mad r3, r1.zwzw, c4, v0.xyxy
					    mul r4, r3.xyxx, c7.xxyy
					    mul r3, r3.zwxx, c7.xxyy
					    texldl r5, r4, s1
					    texldl r4, r4.xyww, s2
					    add r2.x, -r5.y, r4.w
					    mul_sat r2.x, r2.x, c7.z
					    mad r2.y, r2.x, c8.x, c8.y
					    mul r2.x, r2.x, r2.x
					    mul r5.y, r2.x, r2.y
					    mad r5.x, r2.y, -r2.x, c7.x
					    dp2add r2.x, r5, r6.wxzw, c7.y
					    mad r2.yz, r6.x, c9.xxyw, c9
					    add r4.w, r2.w, -r4.w
					    add r4.w, r4_abs.w, c8.z
					    rcp r4.w, r4.w
					    mad r2.x, r2.x, c8.w, r4.w
					    min r5.w, r2.x, c8.w
					    mul r5.xyz, r4, r5.w
					    add r0, r0, r5
					    texldl r4, r3, s1
					    texldl r3, r3.xyww, s2
					    add r2.x, -r4.y, r3.w
					    mul_sat r2.x, r2.x, c7.z
					    mad r4.x, r2.x, c8.x, c8.y
					    mul r2.x, r2.x, r2.x
					    mul r5.y, r2.x, r4.x
					    mad r5.x, r4.x, -r2.x, c7.x
					    dp2add r2.x, r5, r2.yzzw, c7.y
					    add r3.w, r2.w, -r3.w
					    add r3.w, r3_abs.w, c8.z
					    rcp r3.w, r3.w
					    mad r2.x, r2.x, c8.w, r3.w
					    min r4.w, r2.x, c8.w
					    mul r4.xyz, r3, r4.w
					    add r0, r0, r4
					    mad r3, r1.zwzw, c5, v0.xyxy
					    mad r1, r1, c6, v0.xyxy
					    mul r4, r3.xyxx, c7.xxyy
					    mul r3, r3.zwxx, c7.xxyy
					    texldl r5, r4, s1
					    texldl r4, r4.xyww, s2
					    add r2.x, -r5.y, r4.w
					    mul_sat r2.x, r2.x, c7.z
					    mad r5.x, r2.x, c8.x, c8.y
					    mul r2.x, r2.x, r2.x
					    mul r6.y, r2.x, r5.x
					    mad r6.x, r5.x, -r2.x, c7.x
					    dp2add r2.x, r6, r2.yzzw, c7.y
					    add r4.w, r2.w, -r4.w
					    add r4.w, r4_abs.w, c8.z
					    rcp r4.w, r4.w
					    mad r2.x, r2.x, c8.w, r4.w
					    min r5.w, r2.x, c8.w
					    mul r5.xyz, r4, r5.w
					    add r0, r0, r5
					    texldl r4, r3, s1
					    texldl r3, r3.xyww, s2
					    add r2.x, -r4.y, r3.w
					    mul_sat r2.x, r2.x, c7.z
					    mad r4.x, r2.x, c8.x, c8.y
					    mul r2.x, r2.x, r2.x
					    mul r5.y, r2.x, r4.x
					    mad r5.x, r4.x, -r2.x, c7.x
					    dp2add r2.x, r5, r2.yzzw, c7.y
					    add r3.w, r2.w, -r3.w
					    add r3.w, r3_abs.w, c8.z
					    rcp r3.w, r3.w
					    mad r2.x, r2.x, c8.w, r3.w
					    min r4.w, r2.x, c8.w
					    mul r4.xyz, r3, r4.w
					    add r0, r0, r4
					    mul r3, r1.xyxx, c7.xxyy
					    mul r1, r1.zwxx, c7.xxyy
					    texldl r4, r3, s1
					    texldl r3, r3.xyww, s2
					    add r2.x, -r4.y, r3.w
					    mul_sat r2.x, r2.x, c7.z
					    mad r4.x, r2.x, c8.x, c8.y
					    mul r2.x, r2.x, r2.x
					    mul r5.y, r2.x, r4.x
					    mad r5.x, r4.x, -r2.x, c7.x
					    dp2add r2.x, r5, r2.yzzw, c7.y
					    add r3.w, r2.w, -r3.w
					    add r3.w, r3_abs.w, c8.z
					    rcp r3.w, r3.w
					    mad r2.x, r2.x, c8.w, r3.w
					    min r4.w, r2.x, c8.w
					    mul r4.xyz, r3, r4.w
					    add r0, r0, r4
					    texldl r3, r1, s1
					    texldl r1, r1.xyww, s2
					    add r2.x, -r3.y, r1.w
					    mul_sat r2.x, r2.x, c7.z
					    mad r3.x, r2.x, c8.x, c8.y
					    mul r2.x, r2.x, r2.x
					    mul r4.y, r2.x, r3.x
					    mad r4.x, r3.x, -r2.x, c7.x
					    dp2add r2.x, r4, r2.yzzw, c7.y
					    add r1.w, -r1.w, r2.w
					    mov oC0.w, r2.w
					    add r1.w, r1_abs.w, c8.z
					    rcp r1.w, r1.w
					    mad r1.w, r2.x, c8.w, r1.w
					    min r2.w, r1.w, c8.w
					    mul r2.xyz, r1, r2.w
					    add r0, r0, r2
					    rcp r0.w, r0.w
					    mul oC0.xyz, r0.w, r0
					
					// approximately 198 instruction slots used (40 texture, 158 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[3];
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_2[4];
						vec4 _VirtualCameraParams2;
						vec4 unused_0_4[2];
						vec4 _CoCParams2;
						vec4 unused_0_6[9];
					};
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _AvgCenterDepth;
					uniform  sampler2D _VirtualCameraTexture1;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					float u_xlat8;
					vec2 u_xlat9;
					float u_xlat10;
					float u_xlat15;
					float u_xlat22;
					float u_xlat24;
					void main()
					{
					    u_xlat0.w = 1.0;
					    u_xlat1 = textureLod(_VirtualCameraTexture1, vec2(0.5, 0.5), 0.0);
					    u_xlat1.x = _VirtualCameraParams2.y / u_xlat1.w;
					    u_xlat1.x = u_xlat1.x * _VirtualCameraParams2.y;
					    u_xlat2 = textureLod(_AvgCenterDepth, vec2(0.5, 0.5), 0.0);
					    u_xlat8 = u_xlat1.x * u_xlat2.x;
					    u_xlat15 = u_xlat2.x + (-_VirtualCameraParams2.y);
					    u_xlat15 = float(1.0) / u_xlat15;
					    u_xlat2.x = u_xlat15 * u_xlat8;
					    u_xlat2.y = u_xlat15 * (-u_xlat1.x);
					    u_xlat1.xy = u_xlat2.xy * _VirtualCameraParams2.ww;
					    u_xlat2 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat15 = float(1.0) / u_xlat2.w;
					    u_xlat1.x = u_xlat15 * u_xlat1.x + u_xlat1.y;
					    u_xlat1.x = min(abs(u_xlat1.x), _CoCParams2.x);
					    u_xlat1.x = u_xlat1.x * 0.349999994;
					    u_xlat1.x = max(u_xlat1.x, 1.0);
					    u_xlat1 = u_xlat1.xxxx * _ScionResolutionParameters2.xyxy;
					    u_xlat3 = u_xlat1.zwzw * vec4(-0.745654106, 0.113139302, 0.0829383731, -0.803609788) + vs_TEXCOORD0.xyxy;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat3.xy, 0.0);
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat3.xy, 0.0);
					    u_xlat3.x = (-u_xlat4.y) + u_xlat5.w;
					    u_xlat3.x = u_xlat3.x * 0.5;
					    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
					    u_xlat10 = u_xlat3.x * -2.0 + 3.0;
					    u_xlat3.x = u_xlat3.x * u_xlat3.x;
					    u_xlat4.y = u_xlat3.x * u_xlat10;
					    u_xlat4.x = (-u_xlat10) * u_xlat3.x + 1.0;
					    u_xlat6 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat3.x = u_xlat2.w + (-u_xlat6.y);
					    u_xlat3.x = u_xlat3.x * 0.5;
					    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
					    u_xlat10 = u_xlat3.x * -2.0 + 3.0;
					    u_xlat3.x = u_xlat3.x * u_xlat3.x;
					    u_xlat6.yzw = (-vec3(u_xlat10)) * u_xlat3.xxx + vec3(1.0, 1.0, 1.0);
					    u_xlat6.x = u_xlat3.x * u_xlat10;
					    u_xlat3.x = dot(u_xlat4.yx, u_xlat6.xy);
					    u_xlat10 = u_xlat2.w + (-u_xlat5.w);
					    u_xlat10 = abs(u_xlat10) + 0.00999999978;
					    u_xlat10 = float(1.0) / u_xlat10;
					    u_xlat3.x = u_xlat3.x * 10.0 + u_xlat10;
					    u_xlat4.w = min(u_xlat3.x, 10.0);
					    u_xlat4.xyz = u_xlat4.www * u_xlat5.xyz;
					    u_xlat0.xyz = u_xlat2.xyz;
					    u_xlat0 = u_xlat0 + u_xlat4;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat3.zw, 0.0);
					    u_xlat3 = textureLod(_HalfResSourceDepthTexture, u_xlat3.zw, 0.0);
					    u_xlat2.x = (-u_xlat4.y) + u_xlat3.w;
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat9.x = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat4.y = u_xlat2.x * u_xlat9.x;
					    u_xlat4.x = (-u_xlat9.x) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat4.yx, u_xlat6.xz);
					    u_xlat9.x = u_xlat2.w + (-u_xlat3.w);
					    u_xlat9.x = abs(u_xlat9.x) + 0.00999999978;
					    u_xlat9.x = float(1.0) / u_xlat9.x;
					    u_xlat2.x = u_xlat2.x * 10.0 + u_xlat9.x;
					    u_xlat4.w = min(u_xlat2.x, 10.0);
					    u_xlat4.xyz = u_xlat3.xyz * u_xlat4.www;
					    u_xlat0 = u_xlat0 + u_xlat4;
					    u_xlat3 = u_xlat1.zwzw * vec4(0.258436203, 0.186414197, -0.710718393, -0.601000786) + vs_TEXCOORD0.xyxy;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat3.xy, 0.0);
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat3.xy, 0.0);
					    u_xlat2.x = (-u_xlat4.y) + u_xlat5.w;
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat9.x = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat3.y = u_xlat2.x * u_xlat9.x;
					    u_xlat3.x = (-u_xlat9.x) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat3.yx, u_xlat6.xw);
					    u_xlat9.xy = u_xlat6.xx * vec2(-1.0, 1.0) + vec2(1.0, 0.0);
					    u_xlat3.x = u_xlat2.w + (-u_xlat5.w);
					    u_xlat3.x = abs(u_xlat3.x) + 0.00999999978;
					    u_xlat3.x = float(1.0) / u_xlat3.x;
					    u_xlat2.x = u_xlat2.x * 10.0 + u_xlat3.x;
					    u_xlat4.w = min(u_xlat2.x, 10.0);
					    u_xlat4.xyz = u_xlat4.www * u_xlat5.xyz;
					    u_xlat0 = u_xlat0 + u_xlat4;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat3.zw, 0.0);
					    u_xlat3 = textureLod(_HalfResSourceDepthTexture, u_xlat3.zw, 0.0);
					    u_xlat2.x = (-u_xlat4.y) + u_xlat3.w;
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat4.x = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat5.y = u_xlat2.x * u_xlat4.x;
					    u_xlat5.x = (-u_xlat4.x) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat5.xy, u_xlat9.xy);
					    u_xlat24 = u_xlat2.w + (-u_xlat3.w);
					    u_xlat24 = abs(u_xlat24) + 0.00999999978;
					    u_xlat24 = float(1.0) / u_xlat24;
					    u_xlat2.x = u_xlat2.x * 10.0 + u_xlat24;
					    u_xlat4.w = min(u_xlat2.x, 10.0);
					    u_xlat4.xyz = u_xlat3.xyz * u_xlat4.www;
					    u_xlat0 = u_xlat0 + u_xlat4;
					    u_xlat3 = u_xlat1.zwzw * vec4(0.0893398523, 0.90515691, -0.617822409, 0.76241082) + vs_TEXCOORD0.xyxy;
					    u_xlat1 = u_xlat1 * vec4(0.734034419, -0.416939408, 0.922537029, 0.281461209) + vs_TEXCOORD0.xyxy;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat3.xy, 0.0);
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat3.xy, 0.0);
					    u_xlat2.x = (-u_xlat4.y) + u_xlat5.w;
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat3.x = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat4.y = u_xlat2.x * u_xlat3.x;
					    u_xlat4.x = (-u_xlat3.x) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat4.xy, u_xlat9.xy);
					    u_xlat3.x = u_xlat2.w + (-u_xlat5.w);
					    u_xlat3.x = abs(u_xlat3.x) + 0.00999999978;
					    u_xlat3.x = float(1.0) / u_xlat3.x;
					    u_xlat2.x = u_xlat2.x * 10.0 + u_xlat3.x;
					    u_xlat4.w = min(u_xlat2.x, 10.0);
					    u_xlat4.xyz = u_xlat4.www * u_xlat5.xyz;
					    u_xlat0 = u_xlat0 + u_xlat4;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat3.zw, 0.0);
					    u_xlat3 = textureLod(_HalfResSourceDepthTexture, u_xlat3.zw, 0.0);
					    u_xlat2.x = (-u_xlat4.y) + u_xlat3.w;
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat4.x = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat5.y = u_xlat2.x * u_xlat4.x;
					    u_xlat5.x = (-u_xlat4.x) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat5.xy, u_xlat9.xy);
					    u_xlat24 = u_xlat2.w + (-u_xlat3.w);
					    u_xlat24 = abs(u_xlat24) + 0.00999999978;
					    u_xlat24 = float(1.0) / u_xlat24;
					    u_xlat2.x = u_xlat2.x * 10.0 + u_xlat24;
					    u_xlat4.w = min(u_xlat2.x, 10.0);
					    u_xlat4.xyz = u_xlat3.xyz * u_xlat4.www;
					    u_xlat0 = u_xlat0 + u_xlat4;
					    u_xlat3 = textureLod(_TiledNeighbourhoodData, u_xlat1.xy, 0.0);
					    u_xlat4 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat1.x = (-u_xlat3.y) + u_xlat4.w;
					    u_xlat1.x = u_xlat1.x * 0.5;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat8 = u_xlat1.x * -2.0 + 3.0;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x;
					    u_xlat3.y = u_xlat1.x * u_xlat8;
					    u_xlat3.x = (-u_xlat8) * u_xlat1.x + 1.0;
					    u_xlat1.x = dot(u_xlat3.xy, u_xlat9.xy);
					    u_xlat8 = u_xlat2.w + (-u_xlat4.w);
					    u_xlat8 = abs(u_xlat8) + 0.00999999978;
					    u_xlat8 = float(1.0) / u_xlat8;
					    u_xlat1.x = u_xlat1.x * 10.0 + u_xlat8;
					    u_xlat3.w = min(u_xlat1.x, 10.0);
					    u_xlat3.xyz = u_xlat3.www * u_xlat4.xyz;
					    u_xlat0 = u_xlat0 + u_xlat3;
					    u_xlat3 = textureLod(_TiledNeighbourhoodData, u_xlat1.zw, 0.0);
					    u_xlat1 = textureLod(_HalfResSourceDepthTexture, u_xlat1.zw, 0.0);
					    u_xlat2.x = (-u_xlat3.y) + u_xlat1.w;
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat3.x = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat4.y = u_xlat2.x * u_xlat3.x;
					    u_xlat4.x = (-u_xlat3.x) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat4.xy, u_xlat9.xy);
					    u_xlat22 = (-u_xlat1.w) + u_xlat2.w;
					    SV_Target0.w = u_xlat2.w;
					    u_xlat22 = abs(u_xlat22) + 0.00999999978;
					    u_xlat22 = float(1.0) / u_xlat22;
					    u_xlat22 = u_xlat2.x * 10.0 + u_xlat22;
					    u_xlat2.w = min(u_xlat22, 10.0);
					    u_xlat2.xyz = u_xlat1.xyz * u_xlat2.www;
					    u_xlat0 = u_xlat0 + u_xlat2;
					    SV_Target0.xyz = u_xlat0.xyz / u_xlat0.www;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" "SC_DOF_MASK_ON" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _AvgCenterDepth;
					//   float4 _CoCParams2;
					//   sampler2D _ExclusionMask;
					//   sampler2D _HalfResSourceDepthTexture;
					//   float4 _ScionResolutionParameters2;
					//   sampler2D _TiledNeighbourhoodData;
					//   float4 _VirtualCameraParams2;
					//   sampler2D _VirtualCameraTexture1;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters2 c0       1
					//   _VirtualCameraParams2       c1       1
					//   _CoCParams2                 c2       1
					//   _VirtualCameraTexture1      s0       1
					//   _TiledNeighbourhoodData     s1       1
					//   _ExclusionMask              s2       1
					//   _HalfResSourceDepthTexture  s3       1
					//   _AvgCenterDepth             s4       1
					//
					
					    ps_3_0
					    def c3, -0.745654106, 0.113139302, 0.0829383731, -0.803609788
					    def c4, 0.258436203, 0.186414197, -0.710718393, -0.601000786
					    def c5, 0.0893398523, 0.90515691, -0.617822409, 0.76241082
					    def c6, 0.734034419, -0.416939408, 0.922537029, 0.281461209
					    def c7, 1, 0, 0.5, 0.349999994
					    def c8, -2, 3, 0.00999999978, 10
					    def c9, -1, 1, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    dcl_2d s3
					    dcl_2d s4
					    mul r0, c7.xxyy, v0.xyxx
					    texldl r1, r0, s3
					    texldl r2, r0, s2
					    if_lt r2.x, c7.z
					    else
					      texldl r0, r0, s1
					      add r0.x, -r0.y, r1.w
					      mul_sat r0.x, r0.x, c7.z
					      mad r0.y, r0.x, c8.x, c8.y
					      mul r0.x, r0.x, r0.x
					      mul r2.x, r0.x, r0.y
					      texldl r3, c7.zzyy, s4
					      texldl r4, c7.zzyy, s0
					      rcp r0.z, r4.w
					      mul r0.w, c1.y, c1.y
					      mul r0.z, r0.z, r0.w
					      add r0.w, r3.x, -c1.y
					      rcp r0.w, r0.w
					      mul r3.x, r3.x, r0.z
					      mul r3.x, r0.w, r3.x
					      mul r3.y, r0.w, -r0.z
					      mul r0.zw, r3.xyxy, c1.w
					      rcp r3.x, r1.w
					      mad r0.z, r3.x, r0.z, r0.w
					      min r3.x, c2.x, r0_abs.z
					      mul r0.z, r3.x, c7.w
					      max r3.x, r0.z, c7.x
					      mul r3, r3.x, c0.xyxy
					      mad r4, r3.zwzw, c3, v0.xyxy
					      mul r5, r4.xyxx, c7.xxyy
					      texldl r6, r5.xyww, s3
					      add r0.z, r1.w, -r6.w
					      add r0.z, r0_abs.z, c8.z
					      rcp r0.z, r0.z
					      texldl r5, r5, s1
					      add r0.w, -r5.y, r6.w
					      mul_sat r0.w, r0.w, c7.z
					      mad r4.y, r0.w, c8.x, c8.y
					      mul r0.w, r0.w, r0.w
					      mul r5.y, r0.w, r4.y
					      mad r5.x, r4.y, -r0.w, c7.x
					      mad r2.yzw, r0.y, -r0.x, c7.x
					      dp2add r0.x, r5, r2.yxzw, c7.y
					      mad r0.x, r0.x, c8.w, r0.z
					      min r5.w, r0.x, c8.w
					      mul r5.xyz, r5.w, r6
					      mad r0, r1.xyzx, c7.xxxy, c7.yyyx
					      add r0, r5, r0
					      mul r4, r4.zwxx, c7.xxyy
					      texldl r5, r4.xyww, s3
					      add r2.y, r1.w, -r5.w
					      add r2.y, r2_abs.y, c8.z
					      rcp r2.y, r2.y
					      texldl r4, r4, s1
					      add r4.x, -r4.y, r5.w
					      mul_sat r4.x, r4.x, c7.z
					      mad r4.y, r4.x, c8.x, c8.y
					      mul r4.x, r4.x, r4.x
					      mul r6.y, r4.x, r4.y
					      mad r6.x, r4.y, -r4.x, c7.x
					      dp2add r2.z, r6, r2.zxzw, c7.y
					      mad r2.y, r2.z, c8.w, r2.y
					      min r4.w, r2.y, c8.w
					      mul r4.xyz, r4.w, r5
					      add r0, r0, r4
					      mad r4, r3.zwzw, c4, v0.xyxy
					      mul r5, r4.xyxx, c7.xxyy
					      texldl r6, r5.xyww, s3
					      add r2.y, r1.w, -r6.w
					      add r2.y, r2_abs.y, c8.z
					      rcp r2.y, r2.y
					      texldl r5, r5, s1
					      add r2.z, -r5.y, r6.w
					      mul_sat r2.z, r2.z, c7.z
					      mad r4.y, r2.z, c8.x, c8.y
					      mul r2.z, r2.z, r2.z
					      mul r5.y, r2.z, r4.y
					      mad r5.x, r4.y, -r2.z, c7.x
					      dp2add r2.z, r5, r2.wxzw, c7.y
					      mad r2.y, r2.z, c8.w, r2.y
					      min r5.w, r2.y, c8.w
					      mul r5.xyz, r5.w, r6
					      add r0, r0, r5
					      mul r4, r4.zwxx, c7.xxyy
					      texldl r5, r4.xyww, s3
					      add r2.y, r1.w, -r5.w
					      add r2.y, r2_abs.y, c8.z
					      rcp r2.y, r2.y
					      texldl r4, r4, s1
					      add r2.z, -r4.y, r5.w
					      mul_sat r2.z, r2.z, c7.z
					      mad r2.w, r2.z, c8.x, c8.y
					      mul r2.z, r2.z, r2.z
					      mul r4.y, r2.z, r2.w
					      mad r4.x, r2.w, -r2.z, c7.x
					      mad r2.xz, r2.x, c9.xyyw, c9.yyzw
					      dp2add r2.w, r4, r2.xzzw, c7.y
					      mad r2.y, r2.w, c8.w, r2.y
					      min r4.w, r2.y, c8.w
					      mul r4.xyz, r4.w, r5
					      add r0, r0, r4
					      mad r4, r3.zwzw, c5, v0.xyxy
					      mul r5, r4.xyxx, c7.xxyy
					      texldl r6, r5.xyww, s3
					      add r2.y, r1.w, -r6.w
					      add r2.y, r2_abs.y, c8.z
					      rcp r2.y, r2.y
					      texldl r5, r5, s1
					      add r2.w, -r5.y, r6.w
					      mul_sat r2.w, r2.w, c7.z
					      mad r4.y, r2.w, c8.x, c8.y
					      mul r2.w, r2.w, r2.w
					      mul r5.y, r2.w, r4.y
					      mad r5.x, r4.y, -r2.w, c7.x
					      dp2add r2.w, r5, r2.xzzw, c7.y
					      mad r2.y, r2.w, c8.w, r2.y
					      min r5.w, r2.y, c8.w
					      mul r5.xyz, r5.w, r6
					      add r0, r0, r5
					      mul r4, r4.zwxx, c7.xxyy
					      texldl r5, r4.xyww, s3
					      add r2.y, r1.w, -r5.w
					      add r2.y, r2_abs.y, c8.z
					      rcp r2.y, r2.y
					      texldl r4, r4, s1
					      add r2.w, -r4.y, r5.w
					      mul_sat r2.w, r2.w, c7.z
					      mad r4.x, r2.w, c8.x, c8.y
					      mul r2.w, r2.w, r2.w
					      mul r6.y, r2.w, r4.x
					      mad r6.x, r4.x, -r2.w, c7.x
					      dp2add r2.w, r6, r2.xzzw, c7.y
					      mad r2.y, r2.w, c8.w, r2.y
					      min r4.w, r2.y, c8.w
					      mul r4.xyz, r4.w, r5
					      add r0, r0, r4
					      mad r3, r3, c6, v0.xyxy
					      mul r4, r3.xyxx, c7.xxyy
					      texldl r5, r4.xyww, s3
					      add r2.y, r1.w, -r5.w
					      add r2.y, r2_abs.y, c8.z
					      rcp r2.y, r2.y
					      texldl r4, r4, s1
					      add r2.w, -r4.y, r5.w
					      mul_sat r2.w, r2.w, c7.z
					      mad r3.y, r2.w, c8.x, c8.y
					      mul r2.w, r2.w, r2.w
					      mul r4.y, r2.w, r3.y
					      mad r4.x, r3.y, -r2.w, c7.x
					      dp2add r2.w, r4, r2.xzzw, c7.y
					      mad r2.y, r2.w, c8.w, r2.y
					      min r4.w, r2.y, c8.w
					      mul r4.xyz, r4.w, r5
					      add r0, r0, r4
					      mul r3, r3.zwxx, c7.xxyy
					      texldl r4, r3.xyww, s3
					      add r2.y, r1.w, -r4.w
					      add r2.y, r2_abs.y, c8.z
					      rcp r2.y, r2.y
					      texldl r3, r3, s1
					      add r2.w, -r3.y, r4.w
					      mul_sat r2.w, r2.w, c7.z
					      mad r3.x, r2.w, c8.x, c8.y
					      mul r2.w, r2.w, r2.w
					      mul r5.y, r2.w, r3.x
					      mad r5.x, r3.x, -r2.w, c7.x
					      dp2add r2.x, r5, r2.xzzw, c7.y
					      mad r2.x, r2.x, c8.w, r2.y
					      min r3.w, r2.x, c8.w
					      mul r3.xyz, r3.w, r4
					      add r0, r0, r3
					      rcp r0.w, r0.w
					      mul r1.xyz, r0.w, r0
					    endif
					    mov oC0, r1
					
					// approximately 206 instruction slots used (42 texture, 164 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" "SC_DOF_MASK_ON" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[3];
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_2[4];
						vec4 _VirtualCameraParams2;
						vec4 unused_0_4[2];
						vec4 _CoCParams2;
						vec4 unused_0_6[9];
					};
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _ExclusionMask;
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _AvgCenterDepth;
					uniform  sampler2D _VirtualCameraTexture1;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					bool u_xlatb1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec2 u_xlat7;
					float u_xlat8;
					float u_xlat9;
					float u_xlat14;
					vec2 u_xlat15;
					float u_xlat22;
					void main()
					{
					    u_xlat0 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1 = textureLod(_ExclusionMask, vs_TEXCOORD0.xy, 0.0);
					    u_xlatb1 = u_xlat1.x<0.5;
					    if(u_xlatb1){
					        SV_Target0 = u_xlat0;
					        return;
					    }
					    u_xlat1 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1.x = u_xlat0.w + (-u_xlat1.y);
					    u_xlat1.x = u_xlat1.x * 0.5;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat8 = u_xlat1.x * -2.0 + 3.0;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x;
					    u_xlat2.x = u_xlat1.x * u_xlat8;
					    u_xlat3 = textureLod(_AvgCenterDepth, vec2(0.5, 0.5), 0.0);
					    u_xlat4 = textureLod(_VirtualCameraTexture1, vec2(0.5, 0.5), 0.0);
					    u_xlat15.x = _VirtualCameraParams2.y / u_xlat4.w;
					    u_xlat15.x = u_xlat15.x * _VirtualCameraParams2.y;
					    u_xlat22 = u_xlat3.x + (-_VirtualCameraParams2.y);
					    u_xlat22 = float(1.0) / u_xlat22;
					    u_xlat3.x = u_xlat3.x * u_xlat15.x;
					    u_xlat3.x = u_xlat22 * u_xlat3.x;
					    u_xlat3.y = u_xlat22 * (-u_xlat15.x);
					    u_xlat15.xy = u_xlat3.xy * _VirtualCameraParams2.ww;
					    u_xlat3.x = float(1.0) / u_xlat0.w;
					    u_xlat15.x = u_xlat3.x * u_xlat15.x + u_xlat15.y;
					    u_xlat15.x = min(abs(u_xlat15.x), _CoCParams2.x);
					    u_xlat15.x = u_xlat15.x * 0.349999994;
					    u_xlat15.x = max(u_xlat15.x, 1.0);
					    u_xlat3 = u_xlat15.xxxx * _ScionResolutionParameters2.xyxy;
					    u_xlat4 = u_xlat3.zwzw * vec4(-0.745654106, 0.113139302, 0.0829383731, -0.803609788) + vs_TEXCOORD0.xyxy;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					    u_xlat15.x = u_xlat0.w + (-u_xlat5.w);
					    u_xlat15.x = abs(u_xlat15.x) + 0.00999999978;
					    u_xlat15.x = float(1.0) / u_xlat15.x;
					    u_xlat6 = textureLod(_TiledNeighbourhoodData, u_xlat4.xy, 0.0);
					    u_xlat22 = u_xlat5.w + (-u_xlat6.y);
					    u_xlat22 = u_xlat22 * 0.5;
					    u_xlat22 = clamp(u_xlat22, 0.0, 1.0);
					    u_xlat4.x = u_xlat22 * -2.0 + 3.0;
					    u_xlat22 = u_xlat22 * u_xlat22;
					    u_xlat6.y = u_xlat22 * u_xlat4.x;
					    u_xlat6.x = (-u_xlat4.x) * u_xlat22 + 1.0;
					    u_xlat2.yzw = (-vec3(u_xlat8)) * u_xlat1.xxx + vec3(1.0, 1.0, 1.0);
					    u_xlat1.x = dot(u_xlat6.yx, u_xlat2.xy);
					    u_xlat1.x = u_xlat1.x * 10.0 + u_xlat15.x;
					    u_xlat1.w = min(u_xlat1.x, 10.0);
					    u_xlat1.xyz = u_xlat1.www * u_xlat5.xyz;
					    u_xlat5.xyz = u_xlat0.xyz;
					    u_xlat5.w = 1.0;
					    u_xlat1 = u_xlat1 + u_xlat5;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat4.zw, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat5.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat4.zw, 0.0);
					    u_xlat7.x = (-u_xlat4.y) + u_xlat5.w;
					    u_xlat7.x = u_xlat7.x * 0.5;
					    u_xlat7.x = clamp(u_xlat7.x, 0.0, 1.0);
					    u_xlat14 = u_xlat7.x * -2.0 + 3.0;
					    u_xlat7.x = u_xlat7.x * u_xlat7.x;
					    u_xlat4.y = u_xlat7.x * u_xlat14;
					    u_xlat4.x = (-u_xlat14) * u_xlat7.x + 1.0;
					    u_xlat7.x = dot(u_xlat4.yx, u_xlat2.xz);
					    u_xlat0.x = u_xlat7.x * 10.0 + u_xlat0.x;
					    u_xlat4.w = min(u_xlat0.x, 10.0);
					    u_xlat4.xyz = u_xlat4.www * u_xlat5.xyz;
					    u_xlat1 = u_xlat1 + u_xlat4;
					    u_xlat4 = u_xlat3.zwzw * vec4(0.258436203, 0.186414197, -0.710718393, -0.601000786) + vs_TEXCOORD0.xyxy;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat5.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat6 = textureLod(_TiledNeighbourhoodData, u_xlat4.xy, 0.0);
					    u_xlat7.x = u_xlat5.w + (-u_xlat6.y);
					    u_xlat7.x = u_xlat7.x * 0.5;
					    u_xlat7.x = clamp(u_xlat7.x, 0.0, 1.0);
					    u_xlat14 = u_xlat7.x * -2.0 + 3.0;
					    u_xlat7.x = u_xlat7.x * u_xlat7.x;
					    u_xlat4.y = u_xlat7.x * u_xlat14;
					    u_xlat4.x = (-u_xlat14) * u_xlat7.x + 1.0;
					    u_xlat7.x = dot(u_xlat4.yx, u_xlat2.xw);
					    u_xlat0.x = u_xlat7.x * 10.0 + u_xlat0.x;
					    u_xlat6.w = min(u_xlat0.x, 10.0);
					    u_xlat6.xyz = u_xlat5.xyz * u_xlat6.www;
					    u_xlat1 = u_xlat1 + u_xlat6;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat4.zw, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat5.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat4.zw, 0.0);
					    u_xlat7.x = (-u_xlat4.y) + u_xlat5.w;
					    u_xlat7.x = u_xlat7.x * 0.5;
					    u_xlat7.x = clamp(u_xlat7.x, 0.0, 1.0);
					    u_xlat14 = u_xlat7.x * -2.0 + 3.0;
					    u_xlat7.x = u_xlat7.x * u_xlat7.x;
					    u_xlat4.y = u_xlat7.x * u_xlat14;
					    u_xlat4.x = (-u_xlat14) * u_xlat7.x + 1.0;
					    u_xlat7.xy = u_xlat2.xx * vec2(-1.0, 1.0) + vec2(1.0, 0.0);
					    u_xlat2.x = dot(u_xlat4.xy, u_xlat7.xy);
					    u_xlat0.x = u_xlat2.x * 10.0 + u_xlat0.x;
					    u_xlat2.w = min(u_xlat0.x, 10.0);
					    u_xlat2.xyz = u_xlat2.www * u_xlat5.xyz;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2 = u_xlat3.zwzw * vec4(0.0893398523, 0.90515691, -0.617822409, 0.76241082) + vs_TEXCOORD0.xyxy;
					    u_xlat4 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat4.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat5 = textureLod(_TiledNeighbourhoodData, u_xlat2.xy, 0.0);
					    u_xlat2.x = u_xlat4.w + (-u_xlat5.y);
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat9 = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat5.y = u_xlat2.x * u_xlat9;
					    u_xlat5.x = (-u_xlat9) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat5.xy, u_xlat7.xy);
					    u_xlat0.x = u_xlat2.x * 10.0 + u_xlat0.x;
					    u_xlat5.w = min(u_xlat0.x, 10.0);
					    u_xlat5.xyz = u_xlat4.xyz * u_xlat5.www;
					    u_xlat1 = u_xlat1 + u_xlat5;
					    u_xlat4 = textureLod(_HalfResSourceDepthTexture, u_xlat2.zw, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat4.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat2 = textureLod(_TiledNeighbourhoodData, u_xlat2.zw, 0.0);
					    u_xlat2.x = (-u_xlat2.y) + u_xlat4.w;
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat9 = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat5.y = u_xlat2.x * u_xlat9;
					    u_xlat5.x = (-u_xlat9) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat5.xy, u_xlat7.xy);
					    u_xlat0.x = u_xlat2.x * 10.0 + u_xlat0.x;
					    u_xlat2.w = min(u_xlat0.x, 10.0);
					    u_xlat2.xyz = u_xlat2.www * u_xlat4.xyz;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2 = u_xlat3 * vec4(0.734034419, -0.416939408, 0.922537029, 0.281461209) + vs_TEXCOORD0.xyxy;
					    u_xlat3 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat3.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat2.xy, 0.0);
					    u_xlat2.x = u_xlat3.w + (-u_xlat4.y);
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat9 = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat4.y = u_xlat2.x * u_xlat9;
					    u_xlat4.x = (-u_xlat9) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat4.xy, u_xlat7.xy);
					    u_xlat0.x = u_xlat2.x * 10.0 + u_xlat0.x;
					    u_xlat4.w = min(u_xlat0.x, 10.0);
					    u_xlat4.xyz = u_xlat3.xyz * u_xlat4.www;
					    u_xlat1 = u_xlat1 + u_xlat4;
					    u_xlat3 = textureLod(_HalfResSourceDepthTexture, u_xlat2.zw, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat3.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat2 = textureLod(_TiledNeighbourhoodData, u_xlat2.zw, 0.0);
					    u_xlat2.x = (-u_xlat2.y) + u_xlat3.w;
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat9 = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat4.y = u_xlat2.x * u_xlat9;
					    u_xlat4.x = (-u_xlat9) * u_xlat2.x + 1.0;
					    u_xlat7.x = dot(u_xlat4.xy, u_xlat7.xy);
					    u_xlat0.x = u_xlat7.x * 10.0 + u_xlat0.x;
					    u_xlat2.w = min(u_xlat0.x, 10.0);
					    u_xlat2.xyz = u_xlat2.www * u_xlat3.xyz;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    SV_Target0.xyz = u_xlat1.xyz / u_xlat1.www;
					    SV_Target0.w = u_xlat0.w;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _CoCParams1;
					//   float4 _CoCParams2;
					//   sampler2D _HalfResSourceDepthTexture;
					//   float4 _ScionResolutionParameters2;
					//   sampler2D _TiledNeighbourhoodData;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters2 c0       1
					//   _CoCParams1                 c1       1
					//   _CoCParams2                 c2       1
					//   _TiledNeighbourhoodData     s0       1
					//   _HalfResSourceDepthTexture  s1       1
					//
					
					    ps_3_0
					    def c3, -0.745654106, 0.113139302, 0.0829383731, -0.803609788
					    def c4, 0.258436203, 0.186414197, -0.710718393, -0.601000786
					    def c5, 0.0893398523, 0.90515691, -0.617822409, 0.76241082
					    def c6, 0.734034419, -0.416939408, 0.922537029, 0.281461209
					    def c7, 1, 0, 0.5, 0.349999994
					    def c8, -2, 3, 0.00999999978, 10
					    def c9, -1, 1, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    mul r0, c7.xxyy, v0.xyxx
					    texldl r1, r0, s1
					    texldl r0, r0, s0
					    add r0.x, -r0.y, r1.w
					    rcp r0.y, r1.w
					    mad r0.y, r0.y, c1.x, c1.y
					    min r2.x, c2.x, r0_abs.y
					    mul r0.y, r2.x, c7.w
					    max r2.x, r0.y, c7.x
					    mul r2, r2.x, c0.xyxy
					    mad r3, r2.zwzw, c3, v0.xyxy
					    mul r4, r3.xyxx, c7.xxyy
					    mul r3, r3.zwxx, c7.xxyy
					    texldl r5, r4, s0
					    texldl r4, r4.xyww, s1
					    add r0.y, -r5.y, r4.w
					    mul_sat r0.xy, r0, c7.z
					    mad r0.z, r0.y, c8.x, c8.y
					    mul r0.y, r0.y, r0.y
					    mul r5.y, r0.y, r0.z
					    mad r5.x, r0.z, -r0.y, c7.x
					    mad r0.y, r0.x, c8.x, c8.y
					    mul r0.x, r0.x, r0.x
					    mad r6.yzw, r0.y, -r0.x, c7.x
					    mul r6.x, r0.x, r0.y
					    dp2add r0.x, r5, r6.yxzw, c7.y
					    add r0.y, r1.w, -r4.w
					    add r0.y, r0_abs.y, c8.z
					    rcp r0.y, r0.y
					    mad r0.x, r0.x, c8.w, r0.y
					    min r5.w, r0.x, c8.w
					    mul r5.xyz, r4, r5.w
					    mad r0, r1.xyzx, c7.xxxy, c7.yyyx
					    add r0, r5, r0
					    texldl r4, r3, s0
					    texldl r3, r3.xyww, s1
					    add r1.x, -r4.y, r3.w
					    mul_sat r1.x, r1.x, c7.z
					    mad r1.y, r1.x, c8.x, c8.y
					    mul r1.x, r1.x, r1.x
					    mul r4.y, r1.x, r1.y
					    mad r4.x, r1.y, -r1.x, c7.x
					    dp2add r1.x, r4, r6.zxzw, c7.y
					    add r1.y, r1.w, -r3.w
					    add r1.y, r1_abs.y, c8.z
					    rcp r1.y, r1.y
					    mad r1.x, r1.x, c8.w, r1.y
					    min r4.w, r1.x, c8.w
					    mul r4.xyz, r3, r4.w
					    add r0, r0, r4
					    mad r3, r2.zwzw, c4, v0.xyxy
					    mul r4, r3.xyxx, c7.xxyy
					    mul r3, r3.zwxx, c7.xxyy
					    texldl r5, r4, s0
					    texldl r4, r4.xyww, s1
					    add r1.x, -r5.y, r4.w
					    mul_sat r1.x, r1.x, c7.z
					    mad r1.y, r1.x, c8.x, c8.y
					    mul r1.x, r1.x, r1.x
					    mul r5.y, r1.x, r1.y
					    mad r5.x, r1.y, -r1.x, c7.x
					    dp2add r1.x, r5, r6.wxzw, c7.y
					    mad r1.yz, r6.x, c9.xxyw, c9
					    add r4.w, r1.w, -r4.w
					    add r4.w, r4_abs.w, c8.z
					    rcp r4.w, r4.w
					    mad r1.x, r1.x, c8.w, r4.w
					    min r5.w, r1.x, c8.w
					    mul r5.xyz, r4, r5.w
					    add r0, r0, r5
					    texldl r4, r3, s0
					    texldl r3, r3.xyww, s1
					    add r1.x, -r4.y, r3.w
					    mul_sat r1.x, r1.x, c7.z
					    mad r4.x, r1.x, c8.x, c8.y
					    mul r1.x, r1.x, r1.x
					    mul r5.y, r1.x, r4.x
					    mad r5.x, r4.x, -r1.x, c7.x
					    dp2add r1.x, r5, r1.yzzw, c7.y
					    add r3.w, r1.w, -r3.w
					    add r3.w, r3_abs.w, c8.z
					    rcp r3.w, r3.w
					    mad r1.x, r1.x, c8.w, r3.w
					    min r4.w, r1.x, c8.w
					    mul r4.xyz, r3, r4.w
					    add r0, r0, r4
					    mad r3, r2.zwzw, c5, v0.xyxy
					    mad r2, r2, c6, v0.xyxy
					    mul r4, r3.xyxx, c7.xxyy
					    mul r3, r3.zwxx, c7.xxyy
					    texldl r5, r4, s0
					    texldl r4, r4.xyww, s1
					    add r1.x, -r5.y, r4.w
					    mul_sat r1.x, r1.x, c7.z
					    mad r5.x, r1.x, c8.x, c8.y
					    mul r1.x, r1.x, r1.x
					    mul r6.y, r1.x, r5.x
					    mad r6.x, r5.x, -r1.x, c7.x
					    dp2add r1.x, r6, r1.yzzw, c7.y
					    add r4.w, r1.w, -r4.w
					    add r4.w, r4_abs.w, c8.z
					    rcp r4.w, r4.w
					    mad r1.x, r1.x, c8.w, r4.w
					    min r5.w, r1.x, c8.w
					    mul r5.xyz, r4, r5.w
					    add r0, r0, r5
					    texldl r4, r3, s0
					    texldl r3, r3.xyww, s1
					    add r1.x, -r4.y, r3.w
					    mul_sat r1.x, r1.x, c7.z
					    mad r4.x, r1.x, c8.x, c8.y
					    mul r1.x, r1.x, r1.x
					    mul r5.y, r1.x, r4.x
					    mad r5.x, r4.x, -r1.x, c7.x
					    dp2add r1.x, r5, r1.yzzw, c7.y
					    add r3.w, r1.w, -r3.w
					    add r3.w, r3_abs.w, c8.z
					    rcp r3.w, r3.w
					    mad r1.x, r1.x, c8.w, r3.w
					    min r4.w, r1.x, c8.w
					    mul r4.xyz, r3, r4.w
					    add r0, r0, r4
					    mul r3, r2.xyxx, c7.xxyy
					    mul r2, r2.zwxx, c7.xxyy
					    texldl r4, r3, s0
					    texldl r3, r3.xyww, s1
					    add r1.x, -r4.y, r3.w
					    mul_sat r1.x, r1.x, c7.z
					    mad r4.x, r1.x, c8.x, c8.y
					    mul r1.x, r1.x, r1.x
					    mul r5.y, r1.x, r4.x
					    mad r5.x, r4.x, -r1.x, c7.x
					    dp2add r1.x, r5, r1.yzzw, c7.y
					    add r3.w, r1.w, -r3.w
					    add r3.w, r3_abs.w, c8.z
					    rcp r3.w, r3.w
					    mad r1.x, r1.x, c8.w, r3.w
					    min r4.w, r1.x, c8.w
					    mul r4.xyz, r3, r4.w
					    add r0, r0, r4
					    texldl r3, r2, s0
					    texldl r2, r2.xyww, s1
					    add r1.x, -r3.y, r2.w
					    mul_sat r1.x, r1.x, c7.z
					    mad r3.x, r1.x, c8.x, c8.y
					    mul r1.x, r1.x, r1.x
					    mul r4.y, r1.x, r3.x
					    mad r4.x, r3.x, -r1.x, c7.x
					    dp2add r1.x, r4, r1.yzzw, c7.y
					    add r1.y, r1.w, -r2.w
					    mov oC0.w, r1.w
					    add r1.y, r1_abs.y, c8.z
					    rcp r1.y, r1.y
					    mad r1.x, r1.x, c8.w, r1.y
					    min r3.w, r1.x, c8.w
					    mul r3.xyz, r2, r3.w
					    add r0, r0, r3
					    rcp r0.w, r0.w
					    mul oC0.xyz, r0.w, r0
					
					// approximately 185 instruction slots used (36 texture, 149 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[3];
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_2[6];
						vec4 _CoCParams1;
						vec4 _CoCParams2;
						vec4 unused_0_5[9];
					};
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _TiledNeighbourhoodData;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec2 u_xlat8;
					float u_xlat10;
					float u_xlat24;
					void main()
					{
					    u_xlat0.w = 1.0;
					    u_xlat1 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat2.x = float(1.0) / u_xlat1.w;
					    u_xlat2.x = u_xlat2.x * _CoCParams1.x + _CoCParams1.y;
					    u_xlat2.x = min(abs(u_xlat2.x), _CoCParams2.x);
					    u_xlat2.x = u_xlat2.x * 0.349999994;
					    u_xlat2.x = max(u_xlat2.x, 1.0);
					    u_xlat2 = u_xlat2.xxxx * _ScionResolutionParameters2.xyxy;
					    u_xlat3 = u_xlat2.zwzw * vec4(-0.745654106, 0.113139302, 0.0829383731, -0.803609788) + vs_TEXCOORD0.xyxy;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat3.xy, 0.0);
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat3.xy, 0.0);
					    u_xlat3.x = (-u_xlat4.y) + u_xlat5.w;
					    u_xlat3.x = u_xlat3.x * 0.5;
					    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
					    u_xlat10 = u_xlat3.x * -2.0 + 3.0;
					    u_xlat3.x = u_xlat3.x * u_xlat3.x;
					    u_xlat4.y = u_xlat3.x * u_xlat10;
					    u_xlat4.x = (-u_xlat10) * u_xlat3.x + 1.0;
					    u_xlat6 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat3.x = u_xlat1.w + (-u_xlat6.y);
					    u_xlat3.x = u_xlat3.x * 0.5;
					    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
					    u_xlat10 = u_xlat3.x * -2.0 + 3.0;
					    u_xlat3.x = u_xlat3.x * u_xlat3.x;
					    u_xlat6.yzw = (-vec3(u_xlat10)) * u_xlat3.xxx + vec3(1.0, 1.0, 1.0);
					    u_xlat6.x = u_xlat3.x * u_xlat10;
					    u_xlat3.x = dot(u_xlat4.yx, u_xlat6.xy);
					    u_xlat10 = u_xlat1.w + (-u_xlat5.w);
					    u_xlat10 = abs(u_xlat10) + 0.00999999978;
					    u_xlat10 = float(1.0) / u_xlat10;
					    u_xlat3.x = u_xlat3.x * 10.0 + u_xlat10;
					    u_xlat4.w = min(u_xlat3.x, 10.0);
					    u_xlat4.xyz = u_xlat4.www * u_xlat5.xyz;
					    u_xlat0.xyz = u_xlat1.xyz;
					    u_xlat0 = u_xlat0 + u_xlat4;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat3.zw, 0.0);
					    u_xlat3 = textureLod(_HalfResSourceDepthTexture, u_xlat3.zw, 0.0);
					    u_xlat1.x = (-u_xlat4.y) + u_xlat3.w;
					    u_xlat1.x = u_xlat1.x * 0.5;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat8.x = u_xlat1.x * -2.0 + 3.0;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x;
					    u_xlat4.y = u_xlat1.x * u_xlat8.x;
					    u_xlat4.x = (-u_xlat8.x) * u_xlat1.x + 1.0;
					    u_xlat1.x = dot(u_xlat4.yx, u_xlat6.xz);
					    u_xlat8.x = u_xlat1.w + (-u_xlat3.w);
					    u_xlat8.x = abs(u_xlat8.x) + 0.00999999978;
					    u_xlat8.x = float(1.0) / u_xlat8.x;
					    u_xlat1.x = u_xlat1.x * 10.0 + u_xlat8.x;
					    u_xlat4.w = min(u_xlat1.x, 10.0);
					    u_xlat4.xyz = u_xlat3.xyz * u_xlat4.www;
					    u_xlat0 = u_xlat0 + u_xlat4;
					    u_xlat3 = u_xlat2.zwzw * vec4(0.258436203, 0.186414197, -0.710718393, -0.601000786) + vs_TEXCOORD0.xyxy;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat3.xy, 0.0);
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat3.xy, 0.0);
					    u_xlat1.x = (-u_xlat4.y) + u_xlat5.w;
					    u_xlat1.x = u_xlat1.x * 0.5;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat8.x = u_xlat1.x * -2.0 + 3.0;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x;
					    u_xlat3.y = u_xlat1.x * u_xlat8.x;
					    u_xlat3.x = (-u_xlat8.x) * u_xlat1.x + 1.0;
					    u_xlat1.x = dot(u_xlat3.yx, u_xlat6.xw);
					    u_xlat8.xy = u_xlat6.xx * vec2(-1.0, 1.0) + vec2(1.0, 0.0);
					    u_xlat3.x = u_xlat1.w + (-u_xlat5.w);
					    u_xlat3.x = abs(u_xlat3.x) + 0.00999999978;
					    u_xlat3.x = float(1.0) / u_xlat3.x;
					    u_xlat1.x = u_xlat1.x * 10.0 + u_xlat3.x;
					    u_xlat4.w = min(u_xlat1.x, 10.0);
					    u_xlat4.xyz = u_xlat4.www * u_xlat5.xyz;
					    u_xlat0 = u_xlat0 + u_xlat4;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat3.zw, 0.0);
					    u_xlat3 = textureLod(_HalfResSourceDepthTexture, u_xlat3.zw, 0.0);
					    u_xlat1.x = (-u_xlat4.y) + u_xlat3.w;
					    u_xlat1.x = u_xlat1.x * 0.5;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat4.x = u_xlat1.x * -2.0 + 3.0;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x;
					    u_xlat5.y = u_xlat1.x * u_xlat4.x;
					    u_xlat5.x = (-u_xlat4.x) * u_xlat1.x + 1.0;
					    u_xlat1.x = dot(u_xlat5.xy, u_xlat8.xy);
					    u_xlat24 = u_xlat1.w + (-u_xlat3.w);
					    u_xlat24 = abs(u_xlat24) + 0.00999999978;
					    u_xlat24 = float(1.0) / u_xlat24;
					    u_xlat1.x = u_xlat1.x * 10.0 + u_xlat24;
					    u_xlat4.w = min(u_xlat1.x, 10.0);
					    u_xlat4.xyz = u_xlat3.xyz * u_xlat4.www;
					    u_xlat0 = u_xlat0 + u_xlat4;
					    u_xlat3 = u_xlat2.zwzw * vec4(0.0893398523, 0.90515691, -0.617822409, 0.76241082) + vs_TEXCOORD0.xyxy;
					    u_xlat2 = u_xlat2 * vec4(0.734034419, -0.416939408, 0.922537029, 0.281461209) + vs_TEXCOORD0.xyxy;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat3.xy, 0.0);
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat3.xy, 0.0);
					    u_xlat1.x = (-u_xlat4.y) + u_xlat5.w;
					    u_xlat1.x = u_xlat1.x * 0.5;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat3.x = u_xlat1.x * -2.0 + 3.0;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x;
					    u_xlat4.y = u_xlat1.x * u_xlat3.x;
					    u_xlat4.x = (-u_xlat3.x) * u_xlat1.x + 1.0;
					    u_xlat1.x = dot(u_xlat4.xy, u_xlat8.xy);
					    u_xlat3.x = u_xlat1.w + (-u_xlat5.w);
					    u_xlat3.x = abs(u_xlat3.x) + 0.00999999978;
					    u_xlat3.x = float(1.0) / u_xlat3.x;
					    u_xlat1.x = u_xlat1.x * 10.0 + u_xlat3.x;
					    u_xlat4.w = min(u_xlat1.x, 10.0);
					    u_xlat4.xyz = u_xlat4.www * u_xlat5.xyz;
					    u_xlat0 = u_xlat0 + u_xlat4;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat3.zw, 0.0);
					    u_xlat3 = textureLod(_HalfResSourceDepthTexture, u_xlat3.zw, 0.0);
					    u_xlat1.x = (-u_xlat4.y) + u_xlat3.w;
					    u_xlat1.x = u_xlat1.x * 0.5;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat4.x = u_xlat1.x * -2.0 + 3.0;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x;
					    u_xlat5.y = u_xlat1.x * u_xlat4.x;
					    u_xlat5.x = (-u_xlat4.x) * u_xlat1.x + 1.0;
					    u_xlat1.x = dot(u_xlat5.xy, u_xlat8.xy);
					    u_xlat24 = u_xlat1.w + (-u_xlat3.w);
					    u_xlat24 = abs(u_xlat24) + 0.00999999978;
					    u_xlat24 = float(1.0) / u_xlat24;
					    u_xlat1.x = u_xlat1.x * 10.0 + u_xlat24;
					    u_xlat4.w = min(u_xlat1.x, 10.0);
					    u_xlat4.xyz = u_xlat3.xyz * u_xlat4.www;
					    u_xlat0 = u_xlat0 + u_xlat4;
					    u_xlat3 = textureLod(_TiledNeighbourhoodData, u_xlat2.xy, 0.0);
					    u_xlat4 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					    u_xlat1.x = (-u_xlat3.y) + u_xlat4.w;
					    u_xlat1.x = u_xlat1.x * 0.5;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat2.x = u_xlat1.x * -2.0 + 3.0;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x;
					    u_xlat3.y = u_xlat1.x * u_xlat2.x;
					    u_xlat3.x = (-u_xlat2.x) * u_xlat1.x + 1.0;
					    u_xlat1.x = dot(u_xlat3.xy, u_xlat8.xy);
					    u_xlat2.x = u_xlat1.w + (-u_xlat4.w);
					    u_xlat2.x = abs(u_xlat2.x) + 0.00999999978;
					    u_xlat2.x = float(1.0) / u_xlat2.x;
					    u_xlat1.x = u_xlat1.x * 10.0 + u_xlat2.x;
					    u_xlat3.w = min(u_xlat1.x, 10.0);
					    u_xlat3.xyz = u_xlat3.www * u_xlat4.xyz;
					    u_xlat0 = u_xlat0 + u_xlat3;
					    u_xlat3 = textureLod(_TiledNeighbourhoodData, u_xlat2.zw, 0.0);
					    u_xlat2 = textureLod(_HalfResSourceDepthTexture, u_xlat2.zw, 0.0);
					    u_xlat1.x = (-u_xlat3.y) + u_xlat2.w;
					    u_xlat1.x = u_xlat1.x * 0.5;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat3.x = u_xlat1.x * -2.0 + 3.0;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x;
					    u_xlat4.y = u_xlat1.x * u_xlat3.x;
					    u_xlat4.x = (-u_xlat3.x) * u_xlat1.x + 1.0;
					    u_xlat1.x = dot(u_xlat4.xy, u_xlat8.xy);
					    u_xlat8.x = u_xlat1.w + (-u_xlat2.w);
					    SV_Target0.w = u_xlat1.w;
					    u_xlat8.x = abs(u_xlat8.x) + 0.00999999978;
					    u_xlat8.x = float(1.0) / u_xlat8.x;
					    u_xlat1.x = u_xlat1.x * 10.0 + u_xlat8.x;
					    u_xlat1.w = min(u_xlat1.x, 10.0);
					    u_xlat1.xyz = u_xlat1.www * u_xlat2.xyz;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    SV_Target0.xyz = u_xlat0.xyz / u_xlat0.www;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" "SC_DOF_MASK_ON" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _CoCParams1;
					//   float4 _CoCParams2;
					//   sampler2D _ExclusionMask;
					//   sampler2D _HalfResSourceDepthTexture;
					//   float4 _ScionResolutionParameters2;
					//   sampler2D _TiledNeighbourhoodData;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters2 c0       1
					//   _CoCParams1                 c1       1
					//   _CoCParams2                 c2       1
					//   _TiledNeighbourhoodData     s0       1
					//   _ExclusionMask              s1       1
					//   _HalfResSourceDepthTexture  s2       1
					//
					
					    ps_3_0
					    def c3, -0.745654106, 0.113139302, 0.0829383731, -0.803609788
					    def c4, 0.258436203, 0.186414197, -0.710718393, -0.601000786
					    def c5, 0.0893398523, 0.90515691, -0.617822409, 0.76241082
					    def c6, 0.734034419, -0.416939408, 0.922537029, 0.281461209
					    def c7, 1, 0, 0.5, 0.349999994
					    def c8, -2, 3, 0.00999999978, 10
					    def c9, -1, 1, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    mul r0, c7.xxyy, v0.xyxx
					    texldl r1, r0, s2
					    texldl r2, r0, s1
					    if_lt r2.x, c7.z
					    else
					      texldl r0, r0, s0
					      add r0.x, -r0.y, r1.w
					      mul_sat r0.x, r0.x, c7.z
					      mad r0.y, r0.x, c8.x, c8.y
					      mul r0.x, r0.x, r0.x
					      mul r2.x, r0.x, r0.y
					      rcp r0.z, r1.w
					      mad r0.z, r0.z, c1.x, c1.y
					      min r3.x, c2.x, r0_abs.z
					      mul r0.z, r3.x, c7.w
					      max r3.x, r0.z, c7.x
					      mul r3, r3.x, c0.xyxy
					      mad r4, r3.zwzw, c3, v0.xyxy
					      mul r5, r4.xyxx, c7.xxyy
					      texldl r6, r5.xyww, s2
					      add r0.z, r1.w, -r6.w
					      add r0.z, r0_abs.z, c8.z
					      rcp r0.z, r0.z
					      texldl r5, r5, s0
					      add r0.w, -r5.y, r6.w
					      mul_sat r0.w, r0.w, c7.z
					      mad r4.y, r0.w, c8.x, c8.y
					      mul r0.w, r0.w, r0.w
					      mul r5.y, r0.w, r4.y
					      mad r5.x, r4.y, -r0.w, c7.x
					      mad r2.yzw, r0.y, -r0.x, c7.x
					      dp2add r0.x, r5, r2.yxzw, c7.y
					      mad r0.x, r0.x, c8.w, r0.z
					      min r5.w, r0.x, c8.w
					      mul r5.xyz, r5.w, r6
					      mad r0, r1.xyzx, c7.xxxy, c7.yyyx
					      add r0, r5, r0
					      mul r4, r4.zwxx, c7.xxyy
					      texldl r5, r4.xyww, s2
					      add r2.y, r1.w, -r5.w
					      add r2.y, r2_abs.y, c8.z
					      rcp r2.y, r2.y
					      texldl r4, r4, s0
					      add r4.x, -r4.y, r5.w
					      mul_sat r4.x, r4.x, c7.z
					      mad r4.y, r4.x, c8.x, c8.y
					      mul r4.x, r4.x, r4.x
					      mul r6.y, r4.x, r4.y
					      mad r6.x, r4.y, -r4.x, c7.x
					      dp2add r2.z, r6, r2.zxzw, c7.y
					      mad r2.y, r2.z, c8.w, r2.y
					      min r4.w, r2.y, c8.w
					      mul r4.xyz, r4.w, r5
					      add r0, r0, r4
					      mad r4, r3.zwzw, c4, v0.xyxy
					      mul r5, r4.xyxx, c7.xxyy
					      texldl r6, r5.xyww, s2
					      add r2.y, r1.w, -r6.w
					      add r2.y, r2_abs.y, c8.z
					      rcp r2.y, r2.y
					      texldl r5, r5, s0
					      add r2.z, -r5.y, r6.w
					      mul_sat r2.z, r2.z, c7.z
					      mad r4.y, r2.z, c8.x, c8.y
					      mul r2.z, r2.z, r2.z
					      mul r5.y, r2.z, r4.y
					      mad r5.x, r4.y, -r2.z, c7.x
					      dp2add r2.z, r5, r2.wxzw, c7.y
					      mad r2.y, r2.z, c8.w, r2.y
					      min r5.w, r2.y, c8.w
					      mul r5.xyz, r5.w, r6
					      add r0, r0, r5
					      mul r4, r4.zwxx, c7.xxyy
					      texldl r5, r4.xyww, s2
					      add r2.y, r1.w, -r5.w
					      add r2.y, r2_abs.y, c8.z
					      rcp r2.y, r2.y
					      texldl r4, r4, s0
					      add r2.z, -r4.y, r5.w
					      mul_sat r2.z, r2.z, c7.z
					      mad r2.w, r2.z, c8.x, c8.y
					      mul r2.z, r2.z, r2.z
					      mul r4.y, r2.z, r2.w
					      mad r4.x, r2.w, -r2.z, c7.x
					      mad r2.xz, r2.x, c9.xyyw, c9.yyzw
					      dp2add r2.w, r4, r2.xzzw, c7.y
					      mad r2.y, r2.w, c8.w, r2.y
					      min r4.w, r2.y, c8.w
					      mul r4.xyz, r4.w, r5
					      add r0, r0, r4
					      mad r4, r3.zwzw, c5, v0.xyxy
					      mul r5, r4.xyxx, c7.xxyy
					      texldl r6, r5.xyww, s2
					      add r2.y, r1.w, -r6.w
					      add r2.y, r2_abs.y, c8.z
					      rcp r2.y, r2.y
					      texldl r5, r5, s0
					      add r2.w, -r5.y, r6.w
					      mul_sat r2.w, r2.w, c7.z
					      mad r4.y, r2.w, c8.x, c8.y
					      mul r2.w, r2.w, r2.w
					      mul r5.y, r2.w, r4.y
					      mad r5.x, r4.y, -r2.w, c7.x
					      dp2add r2.w, r5, r2.xzzw, c7.y
					      mad r2.y, r2.w, c8.w, r2.y
					      min r5.w, r2.y, c8.w
					      mul r5.xyz, r5.w, r6
					      add r0, r0, r5
					      mul r4, r4.zwxx, c7.xxyy
					      texldl r5, r4.xyww, s2
					      add r2.y, r1.w, -r5.w
					      add r2.y, r2_abs.y, c8.z
					      rcp r2.y, r2.y
					      texldl r4, r4, s0
					      add r2.w, -r4.y, r5.w
					      mul_sat r2.w, r2.w, c7.z
					      mad r4.x, r2.w, c8.x, c8.y
					      mul r2.w, r2.w, r2.w
					      mul r6.y, r2.w, r4.x
					      mad r6.x, r4.x, -r2.w, c7.x
					      dp2add r2.w, r6, r2.xzzw, c7.y
					      mad r2.y, r2.w, c8.w, r2.y
					      min r4.w, r2.y, c8.w
					      mul r4.xyz, r4.w, r5
					      add r0, r0, r4
					      mad r3, r3, c6, v0.xyxy
					      mul r4, r3.xyxx, c7.xxyy
					      texldl r5, r4.xyww, s2
					      add r2.y, r1.w, -r5.w
					      add r2.y, r2_abs.y, c8.z
					      rcp r2.y, r2.y
					      texldl r4, r4, s0
					      add r2.w, -r4.y, r5.w
					      mul_sat r2.w, r2.w, c7.z
					      mad r3.y, r2.w, c8.x, c8.y
					      mul r2.w, r2.w, r2.w
					      mul r4.y, r2.w, r3.y
					      mad r4.x, r3.y, -r2.w, c7.x
					      dp2add r2.w, r4, r2.xzzw, c7.y
					      mad r2.y, r2.w, c8.w, r2.y
					      min r4.w, r2.y, c8.w
					      mul r4.xyz, r4.w, r5
					      add r0, r0, r4
					      mul r3, r3.zwxx, c7.xxyy
					      texldl r4, r3.xyww, s2
					      add r2.y, r1.w, -r4.w
					      add r2.y, r2_abs.y, c8.z
					      rcp r2.y, r2.y
					      texldl r3, r3, s0
					      add r2.w, -r3.y, r4.w
					      mul_sat r2.w, r2.w, c7.z
					      mad r3.x, r2.w, c8.x, c8.y
					      mul r2.w, r2.w, r2.w
					      mul r5.y, r2.w, r3.x
					      mad r5.x, r3.x, -r2.w, c7.x
					      dp2add r2.x, r5, r2.xzzw, c7.y
					      mad r2.x, r2.x, c8.w, r2.y
					      min r3.w, r2.x, c8.w
					      mul r3.xyz, r3.w, r4
					      add r0, r0, r3
					      rcp r0.w, r0.w
					      mul r1.xyz, r0.w, r0
					    endif
					    mov oC0, r1
					
					// approximately 193 instruction slots used (38 texture, 155 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" "SC_DOF_MASK_ON" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[3];
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_2[6];
						vec4 _CoCParams1;
						vec4 _CoCParams2;
						vec4 unused_0_5[9];
					};
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _ExclusionMask;
					uniform  sampler2D _TiledNeighbourhoodData;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					bool u_xlatb1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec2 u_xlat7;
					float u_xlat8;
					float u_xlat9;
					float u_xlat14;
					float u_xlat15;
					float u_xlat22;
					void main()
					{
					    u_xlat0 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1 = textureLod(_ExclusionMask, vs_TEXCOORD0.xy, 0.0);
					    u_xlatb1 = u_xlat1.x<0.5;
					    if(u_xlatb1){
					        SV_Target0 = u_xlat0;
					        return;
					    }
					    u_xlat1 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1.x = u_xlat0.w + (-u_xlat1.y);
					    u_xlat1.x = u_xlat1.x * 0.5;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat8 = u_xlat1.x * -2.0 + 3.0;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x;
					    u_xlat2.x = u_xlat1.x * u_xlat8;
					    u_xlat15 = float(1.0) / u_xlat0.w;
					    u_xlat15 = u_xlat15 * _CoCParams1.x + _CoCParams1.y;
					    u_xlat15 = min(abs(u_xlat15), _CoCParams2.x);
					    u_xlat15 = u_xlat15 * 0.349999994;
					    u_xlat15 = max(u_xlat15, 1.0);
					    u_xlat3 = vec4(u_xlat15) * _ScionResolutionParameters2.xyxy;
					    u_xlat4 = u_xlat3.zwzw * vec4(-0.745654106, 0.113139302, 0.0829383731, -0.803609788) + vs_TEXCOORD0.xyxy;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					    u_xlat15 = u_xlat0.w + (-u_xlat5.w);
					    u_xlat15 = abs(u_xlat15) + 0.00999999978;
					    u_xlat15 = float(1.0) / u_xlat15;
					    u_xlat6 = textureLod(_TiledNeighbourhoodData, u_xlat4.xy, 0.0);
					    u_xlat22 = u_xlat5.w + (-u_xlat6.y);
					    u_xlat22 = u_xlat22 * 0.5;
					    u_xlat22 = clamp(u_xlat22, 0.0, 1.0);
					    u_xlat4.x = u_xlat22 * -2.0 + 3.0;
					    u_xlat22 = u_xlat22 * u_xlat22;
					    u_xlat6.y = u_xlat22 * u_xlat4.x;
					    u_xlat6.x = (-u_xlat4.x) * u_xlat22 + 1.0;
					    u_xlat2.yzw = (-vec3(u_xlat8)) * u_xlat1.xxx + vec3(1.0, 1.0, 1.0);
					    u_xlat1.x = dot(u_xlat6.yx, u_xlat2.xy);
					    u_xlat1.x = u_xlat1.x * 10.0 + u_xlat15;
					    u_xlat1.w = min(u_xlat1.x, 10.0);
					    u_xlat1.xyz = u_xlat1.www * u_xlat5.xyz;
					    u_xlat5.xyz = u_xlat0.xyz;
					    u_xlat5.w = 1.0;
					    u_xlat1 = u_xlat1 + u_xlat5;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat4.zw, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat5.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat4.zw, 0.0);
					    u_xlat7.x = (-u_xlat4.y) + u_xlat5.w;
					    u_xlat7.x = u_xlat7.x * 0.5;
					    u_xlat7.x = clamp(u_xlat7.x, 0.0, 1.0);
					    u_xlat14 = u_xlat7.x * -2.0 + 3.0;
					    u_xlat7.x = u_xlat7.x * u_xlat7.x;
					    u_xlat4.y = u_xlat7.x * u_xlat14;
					    u_xlat4.x = (-u_xlat14) * u_xlat7.x + 1.0;
					    u_xlat7.x = dot(u_xlat4.yx, u_xlat2.xz);
					    u_xlat0.x = u_xlat7.x * 10.0 + u_xlat0.x;
					    u_xlat4.w = min(u_xlat0.x, 10.0);
					    u_xlat4.xyz = u_xlat4.www * u_xlat5.xyz;
					    u_xlat1 = u_xlat1 + u_xlat4;
					    u_xlat4 = u_xlat3.zwzw * vec4(0.258436203, 0.186414197, -0.710718393, -0.601000786) + vs_TEXCOORD0.xyxy;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat5.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat6 = textureLod(_TiledNeighbourhoodData, u_xlat4.xy, 0.0);
					    u_xlat7.x = u_xlat5.w + (-u_xlat6.y);
					    u_xlat7.x = u_xlat7.x * 0.5;
					    u_xlat7.x = clamp(u_xlat7.x, 0.0, 1.0);
					    u_xlat14 = u_xlat7.x * -2.0 + 3.0;
					    u_xlat7.x = u_xlat7.x * u_xlat7.x;
					    u_xlat4.y = u_xlat7.x * u_xlat14;
					    u_xlat4.x = (-u_xlat14) * u_xlat7.x + 1.0;
					    u_xlat7.x = dot(u_xlat4.yx, u_xlat2.xw);
					    u_xlat0.x = u_xlat7.x * 10.0 + u_xlat0.x;
					    u_xlat6.w = min(u_xlat0.x, 10.0);
					    u_xlat6.xyz = u_xlat5.xyz * u_xlat6.www;
					    u_xlat1 = u_xlat1 + u_xlat6;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat4.zw, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat5.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat4.zw, 0.0);
					    u_xlat7.x = (-u_xlat4.y) + u_xlat5.w;
					    u_xlat7.x = u_xlat7.x * 0.5;
					    u_xlat7.x = clamp(u_xlat7.x, 0.0, 1.0);
					    u_xlat14 = u_xlat7.x * -2.0 + 3.0;
					    u_xlat7.x = u_xlat7.x * u_xlat7.x;
					    u_xlat4.y = u_xlat7.x * u_xlat14;
					    u_xlat4.x = (-u_xlat14) * u_xlat7.x + 1.0;
					    u_xlat7.xy = u_xlat2.xx * vec2(-1.0, 1.0) + vec2(1.0, 0.0);
					    u_xlat2.x = dot(u_xlat4.xy, u_xlat7.xy);
					    u_xlat0.x = u_xlat2.x * 10.0 + u_xlat0.x;
					    u_xlat2.w = min(u_xlat0.x, 10.0);
					    u_xlat2.xyz = u_xlat2.www * u_xlat5.xyz;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2 = u_xlat3.zwzw * vec4(0.0893398523, 0.90515691, -0.617822409, 0.76241082) + vs_TEXCOORD0.xyxy;
					    u_xlat4 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat4.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat5 = textureLod(_TiledNeighbourhoodData, u_xlat2.xy, 0.0);
					    u_xlat2.x = u_xlat4.w + (-u_xlat5.y);
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat9 = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat5.y = u_xlat2.x * u_xlat9;
					    u_xlat5.x = (-u_xlat9) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat5.xy, u_xlat7.xy);
					    u_xlat0.x = u_xlat2.x * 10.0 + u_xlat0.x;
					    u_xlat5.w = min(u_xlat0.x, 10.0);
					    u_xlat5.xyz = u_xlat4.xyz * u_xlat5.www;
					    u_xlat1 = u_xlat1 + u_xlat5;
					    u_xlat4 = textureLod(_HalfResSourceDepthTexture, u_xlat2.zw, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat4.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat2 = textureLod(_TiledNeighbourhoodData, u_xlat2.zw, 0.0);
					    u_xlat2.x = (-u_xlat2.y) + u_xlat4.w;
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat9 = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat5.y = u_xlat2.x * u_xlat9;
					    u_xlat5.x = (-u_xlat9) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat5.xy, u_xlat7.xy);
					    u_xlat0.x = u_xlat2.x * 10.0 + u_xlat0.x;
					    u_xlat2.w = min(u_xlat0.x, 10.0);
					    u_xlat2.xyz = u_xlat2.www * u_xlat4.xyz;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2 = u_xlat3 * vec4(0.734034419, -0.416939408, 0.922537029, 0.281461209) + vs_TEXCOORD0.xyxy;
					    u_xlat3 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat3.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat2.xy, 0.0);
					    u_xlat2.x = u_xlat3.w + (-u_xlat4.y);
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat9 = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat4.y = u_xlat2.x * u_xlat9;
					    u_xlat4.x = (-u_xlat9) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat4.xy, u_xlat7.xy);
					    u_xlat0.x = u_xlat2.x * 10.0 + u_xlat0.x;
					    u_xlat4.w = min(u_xlat0.x, 10.0);
					    u_xlat4.xyz = u_xlat3.xyz * u_xlat4.www;
					    u_xlat1 = u_xlat1 + u_xlat4;
					    u_xlat3 = textureLod(_HalfResSourceDepthTexture, u_xlat2.zw, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat3.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat2 = textureLod(_TiledNeighbourhoodData, u_xlat2.zw, 0.0);
					    u_xlat2.x = (-u_xlat2.y) + u_xlat3.w;
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat9 = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat4.y = u_xlat2.x * u_xlat9;
					    u_xlat4.x = (-u_xlat9) * u_xlat2.x + 1.0;
					    u_xlat7.x = dot(u_xlat4.xy, u_xlat7.xy);
					    u_xlat0.x = u_xlat7.x * 10.0 + u_xlat0.x;
					    u_xlat2.w = min(u_xlat0.x, 10.0);
					    u_xlat2.xyz = u_xlat2.www * u_xlat3.xyz;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    SV_Target0.xyz = u_xlat1.xyz / u_xlat1.www;
					    SV_Target0.w = u_xlat0.w;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _CoCParams1;
					//   float4 _CoCParams2;
					//   sampler2D _HalfResSourceDepthTexture;
					//   float4 _ScionResolutionParameters2;
					//   sampler2D _TiledNeighbourhoodData;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters2 c0       1
					//   _CoCParams1                 c1       1
					//   _CoCParams2                 c2       1
					//   _TiledNeighbourhoodData     s0       1
					//   _HalfResSourceDepthTexture  s1       1
					//
					
					    ps_3_0
					    def c3, -0.745654106, 0.113139302, 0.0829383731, -0.803609788
					    def c4, 0.258436203, 0.186414197, -0.710718393, -0.601000786
					    def c5, 0.0893398523, 0.90515691, -0.617822409, 0.76241082
					    def c6, 0.734034419, -0.416939408, 0.922537029, 0.281461209
					    def c7, 1, 0, 0.5, 0.349999994
					    def c8, -2, 3, 0.00999999978, 10
					    def c9, -1, 1, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    mul r0, c7.xxyy, v0.xyxx
					    texldl r1, r0, s1
					    texldl r0, r0, s0
					    add r0.x, -r0.y, r1.w
					    add r0.y, -r1.w, c1.z
					    max r2.x, r0.y, -c1.w
					    min r0.y, c1.w, r2.x
					    add r0.y, r0.y, r1.w
					    rcp r0.y, r0.y
					    mad r0.y, r0.y, c1.x, c1.y
					    min r2.x, c2.x, r0_abs.y
					    mul r0.y, r2.x, c7.w
					    max r2.x, r0.y, c7.x
					    mul r2, r2.x, c0.xyxy
					    mad r3, r2.zwzw, c3, v0.xyxy
					    mul r4, r3.xyxx, c7.xxyy
					    mul r3, r3.zwxx, c7.xxyy
					    texldl r5, r4, s0
					    texldl r4, r4.xyww, s1
					    add r0.y, -r5.y, r4.w
					    mul_sat r0.xy, r0, c7.z
					    mad r0.z, r0.y, c8.x, c8.y
					    mul r0.y, r0.y, r0.y
					    mul r5.y, r0.y, r0.z
					    mad r5.x, r0.z, -r0.y, c7.x
					    mad r0.y, r0.x, c8.x, c8.y
					    mul r0.x, r0.x, r0.x
					    mad r6.yzw, r0.y, -r0.x, c7.x
					    mul r6.x, r0.x, r0.y
					    dp2add r0.x, r5, r6.yxzw, c7.y
					    add r0.y, r1.w, -r4.w
					    add r0.y, r0_abs.y, c8.z
					    rcp r0.y, r0.y
					    mad r0.x, r0.x, c8.w, r0.y
					    min r5.w, r0.x, c8.w
					    mul r5.xyz, r4, r5.w
					    mad r0, r1.xyzx, c7.xxxy, c7.yyyx
					    add r0, r5, r0
					    texldl r4, r3, s0
					    texldl r3, r3.xyww, s1
					    add r1.x, -r4.y, r3.w
					    mul_sat r1.x, r1.x, c7.z
					    mad r1.y, r1.x, c8.x, c8.y
					    mul r1.x, r1.x, r1.x
					    mul r4.y, r1.x, r1.y
					    mad r4.x, r1.y, -r1.x, c7.x
					    dp2add r1.x, r4, r6.zxzw, c7.y
					    add r1.y, r1.w, -r3.w
					    add r1.y, r1_abs.y, c8.z
					    rcp r1.y, r1.y
					    mad r1.x, r1.x, c8.w, r1.y
					    min r4.w, r1.x, c8.w
					    mul r4.xyz, r3, r4.w
					    add r0, r0, r4
					    mad r3, r2.zwzw, c4, v0.xyxy
					    mul r4, r3.xyxx, c7.xxyy
					    mul r3, r3.zwxx, c7.xxyy
					    texldl r5, r4, s0
					    texldl r4, r4.xyww, s1
					    add r1.x, -r5.y, r4.w
					    mul_sat r1.x, r1.x, c7.z
					    mad r1.y, r1.x, c8.x, c8.y
					    mul r1.x, r1.x, r1.x
					    mul r5.y, r1.x, r1.y
					    mad r5.x, r1.y, -r1.x, c7.x
					    dp2add r1.x, r5, r6.wxzw, c7.y
					    mad r1.yz, r6.x, c9.xxyw, c9
					    add r4.w, r1.w, -r4.w
					    add r4.w, r4_abs.w, c8.z
					    rcp r4.w, r4.w
					    mad r1.x, r1.x, c8.w, r4.w
					    min r5.w, r1.x, c8.w
					    mul r5.xyz, r4, r5.w
					    add r0, r0, r5
					    texldl r4, r3, s0
					    texldl r3, r3.xyww, s1
					    add r1.x, -r4.y, r3.w
					    mul_sat r1.x, r1.x, c7.z
					    mad r4.x, r1.x, c8.x, c8.y
					    mul r1.x, r1.x, r1.x
					    mul r5.y, r1.x, r4.x
					    mad r5.x, r4.x, -r1.x, c7.x
					    dp2add r1.x, r5, r1.yzzw, c7.y
					    add r3.w, r1.w, -r3.w
					    add r3.w, r3_abs.w, c8.z
					    rcp r3.w, r3.w
					    mad r1.x, r1.x, c8.w, r3.w
					    min r4.w, r1.x, c8.w
					    mul r4.xyz, r3, r4.w
					    add r0, r0, r4
					    mad r3, r2.zwzw, c5, v0.xyxy
					    mad r2, r2, c6, v0.xyxy
					    mul r4, r3.xyxx, c7.xxyy
					    mul r3, r3.zwxx, c7.xxyy
					    texldl r5, r4, s0
					    texldl r4, r4.xyww, s1
					    add r1.x, -r5.y, r4.w
					    mul_sat r1.x, r1.x, c7.z
					    mad r5.x, r1.x, c8.x, c8.y
					    mul r1.x, r1.x, r1.x
					    mul r6.y, r1.x, r5.x
					    mad r6.x, r5.x, -r1.x, c7.x
					    dp2add r1.x, r6, r1.yzzw, c7.y
					    add r4.w, r1.w, -r4.w
					    add r4.w, r4_abs.w, c8.z
					    rcp r4.w, r4.w
					    mad r1.x, r1.x, c8.w, r4.w
					    min r5.w, r1.x, c8.w
					    mul r5.xyz, r4, r5.w
					    add r0, r0, r5
					    texldl r4, r3, s0
					    texldl r3, r3.xyww, s1
					    add r1.x, -r4.y, r3.w
					    mul_sat r1.x, r1.x, c7.z
					    mad r4.x, r1.x, c8.x, c8.y
					    mul r1.x, r1.x, r1.x
					    mul r5.y, r1.x, r4.x
					    mad r5.x, r4.x, -r1.x, c7.x
					    dp2add r1.x, r5, r1.yzzw, c7.y
					    add r3.w, r1.w, -r3.w
					    add r3.w, r3_abs.w, c8.z
					    rcp r3.w, r3.w
					    mad r1.x, r1.x, c8.w, r3.w
					    min r4.w, r1.x, c8.w
					    mul r4.xyz, r3, r4.w
					    add r0, r0, r4
					    mul r3, r2.xyxx, c7.xxyy
					    mul r2, r2.zwxx, c7.xxyy
					    texldl r4, r3, s0
					    texldl r3, r3.xyww, s1
					    add r1.x, -r4.y, r3.w
					    mul_sat r1.x, r1.x, c7.z
					    mad r4.x, r1.x, c8.x, c8.y
					    mul r1.x, r1.x, r1.x
					    mul r5.y, r1.x, r4.x
					    mad r5.x, r4.x, -r1.x, c7.x
					    dp2add r1.x, r5, r1.yzzw, c7.y
					    add r3.w, r1.w, -r3.w
					    add r3.w, r3_abs.w, c8.z
					    rcp r3.w, r3.w
					    mad r1.x, r1.x, c8.w, r3.w
					    min r4.w, r1.x, c8.w
					    mul r4.xyz, r3, r4.w
					    add r0, r0, r4
					    texldl r3, r2, s0
					    texldl r2, r2.xyww, s1
					    add r1.x, -r3.y, r2.w
					    mul_sat r1.x, r1.x, c7.z
					    mad r3.x, r1.x, c8.x, c8.y
					    mul r1.x, r1.x, r1.x
					    mul r4.y, r1.x, r3.x
					    mad r4.x, r3.x, -r1.x, c7.x
					    dp2add r1.x, r4, r1.yzzw, c7.y
					    add r1.y, r1.w, -r2.w
					    mov oC0.w, r1.w
					    add r1.y, r1_abs.y, c8.z
					    rcp r1.y, r1.y
					    mad r1.x, r1.x, c8.w, r1.y
					    min r3.w, r1.x, c8.w
					    mul r3.xyz, r2, r3.w
					    add r0, r0, r3
					    rcp r0.w, r0.w
					    mul oC0.xyz, r0.w, r0
					
					// approximately 189 instruction slots used (36 texture, 153 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[3];
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_2[6];
						vec4 _CoCParams1;
						vec4 _CoCParams2;
						vec4 unused_0_5[9];
					};
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _TiledNeighbourhoodData;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec2 u_xlat8;
					float u_xlat10;
					float u_xlat24;
					void main()
					{
					    u_xlat0.w = 1.0;
					    u_xlat1 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat2.x = (-u_xlat1.w) + _CoCParams1.z;
					    u_xlat2.x = max(u_xlat2.x, (-_CoCParams1.w));
					    u_xlat2.x = min(u_xlat2.x, _CoCParams1.w);
					    u_xlat2.x = u_xlat1.w + u_xlat2.x;
					    u_xlat2.x = float(1.0) / u_xlat2.x;
					    u_xlat2.x = u_xlat2.x * _CoCParams1.x + _CoCParams1.y;
					    u_xlat2.x = min(abs(u_xlat2.x), _CoCParams2.x);
					    u_xlat2.x = u_xlat2.x * 0.349999994;
					    u_xlat2.x = max(u_xlat2.x, 1.0);
					    u_xlat2 = u_xlat2.xxxx * _ScionResolutionParameters2.xyxy;
					    u_xlat3 = u_xlat2.zwzw * vec4(-0.745654106, 0.113139302, 0.0829383731, -0.803609788) + vs_TEXCOORD0.xyxy;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat3.xy, 0.0);
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat3.xy, 0.0);
					    u_xlat3.x = (-u_xlat4.y) + u_xlat5.w;
					    u_xlat3.x = u_xlat3.x * 0.5;
					    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
					    u_xlat10 = u_xlat3.x * -2.0 + 3.0;
					    u_xlat3.x = u_xlat3.x * u_xlat3.x;
					    u_xlat4.y = u_xlat3.x * u_xlat10;
					    u_xlat4.x = (-u_xlat10) * u_xlat3.x + 1.0;
					    u_xlat6 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat3.x = u_xlat1.w + (-u_xlat6.y);
					    u_xlat3.x = u_xlat3.x * 0.5;
					    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
					    u_xlat10 = u_xlat3.x * -2.0 + 3.0;
					    u_xlat3.x = u_xlat3.x * u_xlat3.x;
					    u_xlat6.yzw = (-vec3(u_xlat10)) * u_xlat3.xxx + vec3(1.0, 1.0, 1.0);
					    u_xlat6.x = u_xlat3.x * u_xlat10;
					    u_xlat3.x = dot(u_xlat4.yx, u_xlat6.xy);
					    u_xlat10 = u_xlat1.w + (-u_xlat5.w);
					    u_xlat10 = abs(u_xlat10) + 0.00999999978;
					    u_xlat10 = float(1.0) / u_xlat10;
					    u_xlat3.x = u_xlat3.x * 10.0 + u_xlat10;
					    u_xlat4.w = min(u_xlat3.x, 10.0);
					    u_xlat4.xyz = u_xlat4.www * u_xlat5.xyz;
					    u_xlat0.xyz = u_xlat1.xyz;
					    u_xlat0 = u_xlat0 + u_xlat4;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat3.zw, 0.0);
					    u_xlat3 = textureLod(_HalfResSourceDepthTexture, u_xlat3.zw, 0.0);
					    u_xlat1.x = (-u_xlat4.y) + u_xlat3.w;
					    u_xlat1.x = u_xlat1.x * 0.5;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat8.x = u_xlat1.x * -2.0 + 3.0;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x;
					    u_xlat4.y = u_xlat1.x * u_xlat8.x;
					    u_xlat4.x = (-u_xlat8.x) * u_xlat1.x + 1.0;
					    u_xlat1.x = dot(u_xlat4.yx, u_xlat6.xz);
					    u_xlat8.x = u_xlat1.w + (-u_xlat3.w);
					    u_xlat8.x = abs(u_xlat8.x) + 0.00999999978;
					    u_xlat8.x = float(1.0) / u_xlat8.x;
					    u_xlat1.x = u_xlat1.x * 10.0 + u_xlat8.x;
					    u_xlat4.w = min(u_xlat1.x, 10.0);
					    u_xlat4.xyz = u_xlat3.xyz * u_xlat4.www;
					    u_xlat0 = u_xlat0 + u_xlat4;
					    u_xlat3 = u_xlat2.zwzw * vec4(0.258436203, 0.186414197, -0.710718393, -0.601000786) + vs_TEXCOORD0.xyxy;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat3.xy, 0.0);
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat3.xy, 0.0);
					    u_xlat1.x = (-u_xlat4.y) + u_xlat5.w;
					    u_xlat1.x = u_xlat1.x * 0.5;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat8.x = u_xlat1.x * -2.0 + 3.0;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x;
					    u_xlat3.y = u_xlat1.x * u_xlat8.x;
					    u_xlat3.x = (-u_xlat8.x) * u_xlat1.x + 1.0;
					    u_xlat1.x = dot(u_xlat3.yx, u_xlat6.xw);
					    u_xlat8.xy = u_xlat6.xx * vec2(-1.0, 1.0) + vec2(1.0, 0.0);
					    u_xlat3.x = u_xlat1.w + (-u_xlat5.w);
					    u_xlat3.x = abs(u_xlat3.x) + 0.00999999978;
					    u_xlat3.x = float(1.0) / u_xlat3.x;
					    u_xlat1.x = u_xlat1.x * 10.0 + u_xlat3.x;
					    u_xlat4.w = min(u_xlat1.x, 10.0);
					    u_xlat4.xyz = u_xlat4.www * u_xlat5.xyz;
					    u_xlat0 = u_xlat0 + u_xlat4;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat3.zw, 0.0);
					    u_xlat3 = textureLod(_HalfResSourceDepthTexture, u_xlat3.zw, 0.0);
					    u_xlat1.x = (-u_xlat4.y) + u_xlat3.w;
					    u_xlat1.x = u_xlat1.x * 0.5;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat4.x = u_xlat1.x * -2.0 + 3.0;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x;
					    u_xlat5.y = u_xlat1.x * u_xlat4.x;
					    u_xlat5.x = (-u_xlat4.x) * u_xlat1.x + 1.0;
					    u_xlat1.x = dot(u_xlat5.xy, u_xlat8.xy);
					    u_xlat24 = u_xlat1.w + (-u_xlat3.w);
					    u_xlat24 = abs(u_xlat24) + 0.00999999978;
					    u_xlat24 = float(1.0) / u_xlat24;
					    u_xlat1.x = u_xlat1.x * 10.0 + u_xlat24;
					    u_xlat4.w = min(u_xlat1.x, 10.0);
					    u_xlat4.xyz = u_xlat3.xyz * u_xlat4.www;
					    u_xlat0 = u_xlat0 + u_xlat4;
					    u_xlat3 = u_xlat2.zwzw * vec4(0.0893398523, 0.90515691, -0.617822409, 0.76241082) + vs_TEXCOORD0.xyxy;
					    u_xlat2 = u_xlat2 * vec4(0.734034419, -0.416939408, 0.922537029, 0.281461209) + vs_TEXCOORD0.xyxy;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat3.xy, 0.0);
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat3.xy, 0.0);
					    u_xlat1.x = (-u_xlat4.y) + u_xlat5.w;
					    u_xlat1.x = u_xlat1.x * 0.5;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat3.x = u_xlat1.x * -2.0 + 3.0;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x;
					    u_xlat4.y = u_xlat1.x * u_xlat3.x;
					    u_xlat4.x = (-u_xlat3.x) * u_xlat1.x + 1.0;
					    u_xlat1.x = dot(u_xlat4.xy, u_xlat8.xy);
					    u_xlat3.x = u_xlat1.w + (-u_xlat5.w);
					    u_xlat3.x = abs(u_xlat3.x) + 0.00999999978;
					    u_xlat3.x = float(1.0) / u_xlat3.x;
					    u_xlat1.x = u_xlat1.x * 10.0 + u_xlat3.x;
					    u_xlat4.w = min(u_xlat1.x, 10.0);
					    u_xlat4.xyz = u_xlat4.www * u_xlat5.xyz;
					    u_xlat0 = u_xlat0 + u_xlat4;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat3.zw, 0.0);
					    u_xlat3 = textureLod(_HalfResSourceDepthTexture, u_xlat3.zw, 0.0);
					    u_xlat1.x = (-u_xlat4.y) + u_xlat3.w;
					    u_xlat1.x = u_xlat1.x * 0.5;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat4.x = u_xlat1.x * -2.0 + 3.0;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x;
					    u_xlat5.y = u_xlat1.x * u_xlat4.x;
					    u_xlat5.x = (-u_xlat4.x) * u_xlat1.x + 1.0;
					    u_xlat1.x = dot(u_xlat5.xy, u_xlat8.xy);
					    u_xlat24 = u_xlat1.w + (-u_xlat3.w);
					    u_xlat24 = abs(u_xlat24) + 0.00999999978;
					    u_xlat24 = float(1.0) / u_xlat24;
					    u_xlat1.x = u_xlat1.x * 10.0 + u_xlat24;
					    u_xlat4.w = min(u_xlat1.x, 10.0);
					    u_xlat4.xyz = u_xlat3.xyz * u_xlat4.www;
					    u_xlat0 = u_xlat0 + u_xlat4;
					    u_xlat3 = textureLod(_TiledNeighbourhoodData, u_xlat2.xy, 0.0);
					    u_xlat4 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					    u_xlat1.x = (-u_xlat3.y) + u_xlat4.w;
					    u_xlat1.x = u_xlat1.x * 0.5;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat2.x = u_xlat1.x * -2.0 + 3.0;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x;
					    u_xlat3.y = u_xlat1.x * u_xlat2.x;
					    u_xlat3.x = (-u_xlat2.x) * u_xlat1.x + 1.0;
					    u_xlat1.x = dot(u_xlat3.xy, u_xlat8.xy);
					    u_xlat2.x = u_xlat1.w + (-u_xlat4.w);
					    u_xlat2.x = abs(u_xlat2.x) + 0.00999999978;
					    u_xlat2.x = float(1.0) / u_xlat2.x;
					    u_xlat1.x = u_xlat1.x * 10.0 + u_xlat2.x;
					    u_xlat3.w = min(u_xlat1.x, 10.0);
					    u_xlat3.xyz = u_xlat3.www * u_xlat4.xyz;
					    u_xlat0 = u_xlat0 + u_xlat3;
					    u_xlat3 = textureLod(_TiledNeighbourhoodData, u_xlat2.zw, 0.0);
					    u_xlat2 = textureLod(_HalfResSourceDepthTexture, u_xlat2.zw, 0.0);
					    u_xlat1.x = (-u_xlat3.y) + u_xlat2.w;
					    u_xlat1.x = u_xlat1.x * 0.5;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat3.x = u_xlat1.x * -2.0 + 3.0;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x;
					    u_xlat4.y = u_xlat1.x * u_xlat3.x;
					    u_xlat4.x = (-u_xlat3.x) * u_xlat1.x + 1.0;
					    u_xlat1.x = dot(u_xlat4.xy, u_xlat8.xy);
					    u_xlat8.x = u_xlat1.w + (-u_xlat2.w);
					    SV_Target0.w = u_xlat1.w;
					    u_xlat8.x = abs(u_xlat8.x) + 0.00999999978;
					    u_xlat8.x = float(1.0) / u_xlat8.x;
					    u_xlat1.x = u_xlat1.x * 10.0 + u_xlat8.x;
					    u_xlat1.w = min(u_xlat1.x, 10.0);
					    u_xlat1.xyz = u_xlat1.www * u_xlat2.xyz;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    SV_Target0.xyz = u_xlat0.xyz / u_xlat0.www;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" "SC_DOF_MASK_ON" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _CoCParams1;
					//   float4 _CoCParams2;
					//   sampler2D _ExclusionMask;
					//   sampler2D _HalfResSourceDepthTexture;
					//   float4 _ScionResolutionParameters2;
					//   sampler2D _TiledNeighbourhoodData;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters2 c0       1
					//   _CoCParams1                 c1       1
					//   _CoCParams2                 c2       1
					//   _TiledNeighbourhoodData     s0       1
					//   _ExclusionMask              s1       1
					//   _HalfResSourceDepthTexture  s2       1
					//
					
					    ps_3_0
					    def c3, -0.745654106, 0.113139302, 0.0829383731, -0.803609788
					    def c4, 0.258436203, 0.186414197, -0.710718393, -0.601000786
					    def c5, 0.0893398523, 0.90515691, -0.617822409, 0.76241082
					    def c6, 0.734034419, -0.416939408, 0.922537029, 0.281461209
					    def c7, 1, 0, 0.5, 0.349999994
					    def c8, -2, 3, 0.00999999978, 10
					    def c9, -1, 1, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    mul r0, c7.xxyy, v0.xyxx
					    texldl r1, r0, s2
					    texldl r2, r0, s1
					    if_lt r2.x, c7.z
					    else
					      texldl r0, r0, s0
					      add r0.x, -r0.y, r1.w
					      mul_sat r0.x, r0.x, c7.z
					      mad r0.y, r0.x, c8.x, c8.y
					      mul r0.x, r0.x, r0.x
					      mul r2.x, r0.x, r0.y
					      add r0.z, -r1.w, c1.z
					      max r3.x, r0.z, -c1.w
					      min r0.z, c1.w, r3.x
					      add r0.z, r0.z, r1.w
					      rcp r0.z, r0.z
					      mad r0.z, r0.z, c1.x, c1.y
					      min r3.x, c2.x, r0_abs.z
					      mul r0.z, r3.x, c7.w
					      max r3.x, r0.z, c7.x
					      mul r3, r3.x, c0.xyxy
					      mad r4, r3.zwzw, c3, v0.xyxy
					      mul r5, r4.xyxx, c7.xxyy
					      texldl r6, r5.xyww, s2
					      add r0.z, r1.w, -r6.w
					      add r0.z, r0_abs.z, c8.z
					      rcp r0.z, r0.z
					      texldl r5, r5, s0
					      add r0.w, -r5.y, r6.w
					      mul_sat r0.w, r0.w, c7.z
					      mad r4.y, r0.w, c8.x, c8.y
					      mul r0.w, r0.w, r0.w
					      mul r5.y, r0.w, r4.y
					      mad r5.x, r4.y, -r0.w, c7.x
					      mad r2.yzw, r0.y, -r0.x, c7.x
					      dp2add r0.x, r5, r2.yxzw, c7.y
					      mad r0.x, r0.x, c8.w, r0.z
					      min r5.w, r0.x, c8.w
					      mul r5.xyz, r5.w, r6
					      mad r0, r1.xyzx, c7.xxxy, c7.yyyx
					      add r0, r5, r0
					      mul r4, r4.zwxx, c7.xxyy
					      texldl r5, r4.xyww, s2
					      add r2.y, r1.w, -r5.w
					      add r2.y, r2_abs.y, c8.z
					      rcp r2.y, r2.y
					      texldl r4, r4, s0
					      add r4.x, -r4.y, r5.w
					      mul_sat r4.x, r4.x, c7.z
					      mad r4.y, r4.x, c8.x, c8.y
					      mul r4.x, r4.x, r4.x
					      mul r6.y, r4.x, r4.y
					      mad r6.x, r4.y, -r4.x, c7.x
					      dp2add r2.z, r6, r2.zxzw, c7.y
					      mad r2.y, r2.z, c8.w, r2.y
					      min r4.w, r2.y, c8.w
					      mul r4.xyz, r4.w, r5
					      add r0, r0, r4
					      mad r4, r3.zwzw, c4, v0.xyxy
					      mul r5, r4.xyxx, c7.xxyy
					      texldl r6, r5.xyww, s2
					      add r2.y, r1.w, -r6.w
					      add r2.y, r2_abs.y, c8.z
					      rcp r2.y, r2.y
					      texldl r5, r5, s0
					      add r2.z, -r5.y, r6.w
					      mul_sat r2.z, r2.z, c7.z
					      mad r4.y, r2.z, c8.x, c8.y
					      mul r2.z, r2.z, r2.z
					      mul r5.y, r2.z, r4.y
					      mad r5.x, r4.y, -r2.z, c7.x
					      dp2add r2.z, r5, r2.wxzw, c7.y
					      mad r2.y, r2.z, c8.w, r2.y
					      min r5.w, r2.y, c8.w
					      mul r5.xyz, r5.w, r6
					      add r0, r0, r5
					      mul r4, r4.zwxx, c7.xxyy
					      texldl r5, r4.xyww, s2
					      add r2.y, r1.w, -r5.w
					      add r2.y, r2_abs.y, c8.z
					      rcp r2.y, r2.y
					      texldl r4, r4, s0
					      add r2.z, -r4.y, r5.w
					      mul_sat r2.z, r2.z, c7.z
					      mad r2.w, r2.z, c8.x, c8.y
					      mul r2.z, r2.z, r2.z
					      mul r4.y, r2.z, r2.w
					      mad r4.x, r2.w, -r2.z, c7.x
					      mad r2.xz, r2.x, c9.xyyw, c9.yyzw
					      dp2add r2.w, r4, r2.xzzw, c7.y
					      mad r2.y, r2.w, c8.w, r2.y
					      min r4.w, r2.y, c8.w
					      mul r4.xyz, r4.w, r5
					      add r0, r0, r4
					      mad r4, r3.zwzw, c5, v0.xyxy
					      mul r5, r4.xyxx, c7.xxyy
					      texldl r6, r5.xyww, s2
					      add r2.y, r1.w, -r6.w
					      add r2.y, r2_abs.y, c8.z
					      rcp r2.y, r2.y
					      texldl r5, r5, s0
					      add r2.w, -r5.y, r6.w
					      mul_sat r2.w, r2.w, c7.z
					      mad r4.y, r2.w, c8.x, c8.y
					      mul r2.w, r2.w, r2.w
					      mul r5.y, r2.w, r4.y
					      mad r5.x, r4.y, -r2.w, c7.x
					      dp2add r2.w, r5, r2.xzzw, c7.y
					      mad r2.y, r2.w, c8.w, r2.y
					      min r5.w, r2.y, c8.w
					      mul r5.xyz, r5.w, r6
					      add r0, r0, r5
					      mul r4, r4.zwxx, c7.xxyy
					      texldl r5, r4.xyww, s2
					      add r2.y, r1.w, -r5.w
					      add r2.y, r2_abs.y, c8.z
					      rcp r2.y, r2.y
					      texldl r4, r4, s0
					      add r2.w, -r4.y, r5.w
					      mul_sat r2.w, r2.w, c7.z
					      mad r4.x, r2.w, c8.x, c8.y
					      mul r2.w, r2.w, r2.w
					      mul r6.y, r2.w, r4.x
					      mad r6.x, r4.x, -r2.w, c7.x
					      dp2add r2.w, r6, r2.xzzw, c7.y
					      mad r2.y, r2.w, c8.w, r2.y
					      min r4.w, r2.y, c8.w
					      mul r4.xyz, r4.w, r5
					      add r0, r0, r4
					      mad r3, r3, c6, v0.xyxy
					      mul r4, r3.xyxx, c7.xxyy
					      texldl r5, r4.xyww, s2
					      add r2.y, r1.w, -r5.w
					      add r2.y, r2_abs.y, c8.z
					      rcp r2.y, r2.y
					      texldl r4, r4, s0
					      add r2.w, -r4.y, r5.w
					      mul_sat r2.w, r2.w, c7.z
					      mad r3.y, r2.w, c8.x, c8.y
					      mul r2.w, r2.w, r2.w
					      mul r4.y, r2.w, r3.y
					      mad r4.x, r3.y, -r2.w, c7.x
					      dp2add r2.w, r4, r2.xzzw, c7.y
					      mad r2.y, r2.w, c8.w, r2.y
					      min r4.w, r2.y, c8.w
					      mul r4.xyz, r4.w, r5
					      add r0, r0, r4
					      mul r3, r3.zwxx, c7.xxyy
					      texldl r4, r3.xyww, s2
					      add r2.y, r1.w, -r4.w
					      add r2.y, r2_abs.y, c8.z
					      rcp r2.y, r2.y
					      texldl r3, r3, s0
					      add r2.w, -r3.y, r4.w
					      mul_sat r2.w, r2.w, c7.z
					      mad r3.x, r2.w, c8.x, c8.y
					      mul r2.w, r2.w, r2.w
					      mul r5.y, r2.w, r3.x
					      mad r5.x, r3.x, -r2.w, c7.x
					      dp2add r2.x, r5, r2.xzzw, c7.y
					      mad r2.x, r2.x, c8.w, r2.y
					      min r3.w, r2.x, c8.w
					      mul r3.xyz, r3.w, r4
					      add r0, r0, r3
					      rcp r0.w, r0.w
					      mul r1.xyz, r0.w, r0
					    endif
					    mov oC0, r1
					
					// approximately 197 instruction slots used (38 texture, 159 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" "SC_DOF_MASK_ON" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[3];
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_2[6];
						vec4 _CoCParams1;
						vec4 _CoCParams2;
						vec4 unused_0_5[9];
					};
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _ExclusionMask;
					uniform  sampler2D _TiledNeighbourhoodData;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					bool u_xlatb1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec2 u_xlat7;
					float u_xlat8;
					float u_xlat9;
					float u_xlat14;
					float u_xlat15;
					float u_xlat22;
					void main()
					{
					    u_xlat0 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1 = textureLod(_ExclusionMask, vs_TEXCOORD0.xy, 0.0);
					    u_xlatb1 = u_xlat1.x<0.5;
					    if(u_xlatb1){
					        SV_Target0 = u_xlat0;
					        return;
					    }
					    u_xlat1 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1.x = u_xlat0.w + (-u_xlat1.y);
					    u_xlat1.x = u_xlat1.x * 0.5;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat8 = u_xlat1.x * -2.0 + 3.0;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x;
					    u_xlat2.x = u_xlat1.x * u_xlat8;
					    u_xlat15 = (-u_xlat0.w) + _CoCParams1.z;
					    u_xlat15 = max(u_xlat15, (-_CoCParams1.w));
					    u_xlat15 = min(u_xlat15, _CoCParams1.w);
					    u_xlat15 = u_xlat0.w + u_xlat15;
					    u_xlat15 = float(1.0) / u_xlat15;
					    u_xlat15 = u_xlat15 * _CoCParams1.x + _CoCParams1.y;
					    u_xlat15 = min(abs(u_xlat15), _CoCParams2.x);
					    u_xlat15 = u_xlat15 * 0.349999994;
					    u_xlat15 = max(u_xlat15, 1.0);
					    u_xlat3 = vec4(u_xlat15) * _ScionResolutionParameters2.xyxy;
					    u_xlat4 = u_xlat3.zwzw * vec4(-0.745654106, 0.113139302, 0.0829383731, -0.803609788) + vs_TEXCOORD0.xyxy;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					    u_xlat15 = u_xlat0.w + (-u_xlat5.w);
					    u_xlat15 = abs(u_xlat15) + 0.00999999978;
					    u_xlat15 = float(1.0) / u_xlat15;
					    u_xlat6 = textureLod(_TiledNeighbourhoodData, u_xlat4.xy, 0.0);
					    u_xlat22 = u_xlat5.w + (-u_xlat6.y);
					    u_xlat22 = u_xlat22 * 0.5;
					    u_xlat22 = clamp(u_xlat22, 0.0, 1.0);
					    u_xlat4.x = u_xlat22 * -2.0 + 3.0;
					    u_xlat22 = u_xlat22 * u_xlat22;
					    u_xlat6.y = u_xlat22 * u_xlat4.x;
					    u_xlat6.x = (-u_xlat4.x) * u_xlat22 + 1.0;
					    u_xlat2.yzw = (-vec3(u_xlat8)) * u_xlat1.xxx + vec3(1.0, 1.0, 1.0);
					    u_xlat1.x = dot(u_xlat6.yx, u_xlat2.xy);
					    u_xlat1.x = u_xlat1.x * 10.0 + u_xlat15;
					    u_xlat1.w = min(u_xlat1.x, 10.0);
					    u_xlat1.xyz = u_xlat1.www * u_xlat5.xyz;
					    u_xlat5.xyz = u_xlat0.xyz;
					    u_xlat5.w = 1.0;
					    u_xlat1 = u_xlat1 + u_xlat5;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat4.zw, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat5.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat4.zw, 0.0);
					    u_xlat7.x = (-u_xlat4.y) + u_xlat5.w;
					    u_xlat7.x = u_xlat7.x * 0.5;
					    u_xlat7.x = clamp(u_xlat7.x, 0.0, 1.0);
					    u_xlat14 = u_xlat7.x * -2.0 + 3.0;
					    u_xlat7.x = u_xlat7.x * u_xlat7.x;
					    u_xlat4.y = u_xlat7.x * u_xlat14;
					    u_xlat4.x = (-u_xlat14) * u_xlat7.x + 1.0;
					    u_xlat7.x = dot(u_xlat4.yx, u_xlat2.xz);
					    u_xlat0.x = u_xlat7.x * 10.0 + u_xlat0.x;
					    u_xlat4.w = min(u_xlat0.x, 10.0);
					    u_xlat4.xyz = u_xlat4.www * u_xlat5.xyz;
					    u_xlat1 = u_xlat1 + u_xlat4;
					    u_xlat4 = u_xlat3.zwzw * vec4(0.258436203, 0.186414197, -0.710718393, -0.601000786) + vs_TEXCOORD0.xyxy;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat5.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat6 = textureLod(_TiledNeighbourhoodData, u_xlat4.xy, 0.0);
					    u_xlat7.x = u_xlat5.w + (-u_xlat6.y);
					    u_xlat7.x = u_xlat7.x * 0.5;
					    u_xlat7.x = clamp(u_xlat7.x, 0.0, 1.0);
					    u_xlat14 = u_xlat7.x * -2.0 + 3.0;
					    u_xlat7.x = u_xlat7.x * u_xlat7.x;
					    u_xlat4.y = u_xlat7.x * u_xlat14;
					    u_xlat4.x = (-u_xlat14) * u_xlat7.x + 1.0;
					    u_xlat7.x = dot(u_xlat4.yx, u_xlat2.xw);
					    u_xlat0.x = u_xlat7.x * 10.0 + u_xlat0.x;
					    u_xlat6.w = min(u_xlat0.x, 10.0);
					    u_xlat6.xyz = u_xlat5.xyz * u_xlat6.www;
					    u_xlat1 = u_xlat1 + u_xlat6;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat4.zw, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat5.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat4.zw, 0.0);
					    u_xlat7.x = (-u_xlat4.y) + u_xlat5.w;
					    u_xlat7.x = u_xlat7.x * 0.5;
					    u_xlat7.x = clamp(u_xlat7.x, 0.0, 1.0);
					    u_xlat14 = u_xlat7.x * -2.0 + 3.0;
					    u_xlat7.x = u_xlat7.x * u_xlat7.x;
					    u_xlat4.y = u_xlat7.x * u_xlat14;
					    u_xlat4.x = (-u_xlat14) * u_xlat7.x + 1.0;
					    u_xlat7.xy = u_xlat2.xx * vec2(-1.0, 1.0) + vec2(1.0, 0.0);
					    u_xlat2.x = dot(u_xlat4.xy, u_xlat7.xy);
					    u_xlat0.x = u_xlat2.x * 10.0 + u_xlat0.x;
					    u_xlat2.w = min(u_xlat0.x, 10.0);
					    u_xlat2.xyz = u_xlat2.www * u_xlat5.xyz;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2 = u_xlat3.zwzw * vec4(0.0893398523, 0.90515691, -0.617822409, 0.76241082) + vs_TEXCOORD0.xyxy;
					    u_xlat4 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat4.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat5 = textureLod(_TiledNeighbourhoodData, u_xlat2.xy, 0.0);
					    u_xlat2.x = u_xlat4.w + (-u_xlat5.y);
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat9 = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat5.y = u_xlat2.x * u_xlat9;
					    u_xlat5.x = (-u_xlat9) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat5.xy, u_xlat7.xy);
					    u_xlat0.x = u_xlat2.x * 10.0 + u_xlat0.x;
					    u_xlat5.w = min(u_xlat0.x, 10.0);
					    u_xlat5.xyz = u_xlat4.xyz * u_xlat5.www;
					    u_xlat1 = u_xlat1 + u_xlat5;
					    u_xlat4 = textureLod(_HalfResSourceDepthTexture, u_xlat2.zw, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat4.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat2 = textureLod(_TiledNeighbourhoodData, u_xlat2.zw, 0.0);
					    u_xlat2.x = (-u_xlat2.y) + u_xlat4.w;
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat9 = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat5.y = u_xlat2.x * u_xlat9;
					    u_xlat5.x = (-u_xlat9) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat5.xy, u_xlat7.xy);
					    u_xlat0.x = u_xlat2.x * 10.0 + u_xlat0.x;
					    u_xlat2.w = min(u_xlat0.x, 10.0);
					    u_xlat2.xyz = u_xlat2.www * u_xlat4.xyz;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2 = u_xlat3 * vec4(0.734034419, -0.416939408, 0.922537029, 0.281461209) + vs_TEXCOORD0.xyxy;
					    u_xlat3 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat3.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat2.xy, 0.0);
					    u_xlat2.x = u_xlat3.w + (-u_xlat4.y);
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat9 = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat4.y = u_xlat2.x * u_xlat9;
					    u_xlat4.x = (-u_xlat9) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat4.xy, u_xlat7.xy);
					    u_xlat0.x = u_xlat2.x * 10.0 + u_xlat0.x;
					    u_xlat4.w = min(u_xlat0.x, 10.0);
					    u_xlat4.xyz = u_xlat3.xyz * u_xlat4.www;
					    u_xlat1 = u_xlat1 + u_xlat4;
					    u_xlat3 = textureLod(_HalfResSourceDepthTexture, u_xlat2.zw, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat3.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat2 = textureLod(_TiledNeighbourhoodData, u_xlat2.zw, 0.0);
					    u_xlat2.x = (-u_xlat2.y) + u_xlat3.w;
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat9 = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat4.y = u_xlat2.x * u_xlat9;
					    u_xlat4.x = (-u_xlat9) * u_xlat2.x + 1.0;
					    u_xlat7.x = dot(u_xlat4.xy, u_xlat7.xy);
					    u_xlat0.x = u_xlat7.x * 10.0 + u_xlat0.x;
					    u_xlat2.w = min(u_xlat0.x, 10.0);
					    u_xlat2.xyz = u_xlat2.www * u_xlat3.xyz;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    SV_Target0.xyz = u_xlat1.xyz / u_xlat1.www;
					    SV_Target0.w = u_xlat0.w;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _AvgCenterDepth;
					//   float4 _CoCParams2;
					//   sampler2D _HalfResSourceDepthTexture;
					//   float4 _ScionResolutionParameters2;
					//   sampler2D _TiledNeighbourhoodData;
					//   float4 _VirtualCameraParams1;
					//   float4 _VirtualCameraParams2;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters2 c0       1
					//   _VirtualCameraParams1       c1       1
					//   _VirtualCameraParams2       c2       1
					//   _CoCParams2                 c3       1
					//   _TiledNeighbourhoodData     s0       1
					//   _HalfResSourceDepthTexture  s1       1
					//   _AvgCenterDepth             s2       1
					//
					
					    ps_3_0
					    def c4, -0.745654106, 0.113139302, 0.0829383731, -0.803609788
					    def c5, 0.258436203, 0.186414197, -0.710718393, -0.601000786
					    def c6, 0.0893398523, 0.90515691, -0.617822409, 0.76241082
					    def c7, 0.734034419, -0.416939408, 0.922537029, 0.281461209
					    def c8, 1, 0, 0.5, 0.349999994
					    def c9, -2, 3, 0.00999999978, 10
					    def c10, -1, 1, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    rcp r0.x, c1.y
					    mul r0.y, c2.y, c2.y
					    mul r0.x, r0.x, r0.y
					    texldl r1, c8.zzyy, s2
					    mul r0.y, r0.x, r1.x
					    add r0.z, r1.x, -c2.y
					    rcp r0.z, r0.z
					    mul r1.x, r0.z, r0.y
					    mul r1.y, r0.z, -r0.x
					    mul r0.xy, r1, c2.w
					    mul r1, c8.xxyy, v0.xyxx
					    texldl r2, r1, s1
					    texldl r1, r1, s0
					    add r0.z, -r1.y, r2.w
					    rcp r0.w, r2.w
					    mad r0.x, r0.w, r0.x, r0.y
					    min r1.x, c3.x, r0_abs.x
					    mul r0.x, r1.x, c8.w
					    max r1.x, r0.x, c8.x
					    mul r1, r1.x, c0.xyxy
					    mad r3, r1.zwzw, c4, v0.xyxy
					    mul r4, r3.xyxx, c8.xxyy
					    mul r3, r3.zwxx, c8.xxyy
					    texldl r5, r4, s0
					    texldl r4, r4.xyww, s1
					    add r0.x, -r5.y, r4.w
					    mul_sat r0.xz, r0, c8.z
					    mad r0.y, r0.x, c9.x, c9.y
					    mul r0.x, r0.x, r0.x
					    mul r5.y, r0.x, r0.y
					    mad r5.x, r0.y, -r0.x, c8.x
					    mad r0.x, r0.z, c9.x, c9.y
					    mul r0.y, r0.z, r0.z
					    mad r6.yzw, r0.x, -r0.y, c8.x
					    mul r6.x, r0.y, r0.x
					    dp2add r0.x, r5, r6.yxzw, c8.y
					    add r0.y, r2.w, -r4.w
					    add r0.y, r0_abs.y, c9.z
					    rcp r0.y, r0.y
					    mad r0.x, r0.x, c9.w, r0.y
					    min r5.w, r0.x, c9.w
					    mul r5.xyz, r4, r5.w
					    mad r0, r2.xyzx, c8.xxxy, c8.yyyx
					    add r0, r5, r0
					    texldl r4, r3, s0
					    texldl r3, r3.xyww, s1
					    add r2.x, -r4.y, r3.w
					    mul_sat r2.x, r2.x, c8.z
					    mad r2.y, r2.x, c9.x, c9.y
					    mul r2.x, r2.x, r2.x
					    mul r4.y, r2.x, r2.y
					    mad r4.x, r2.y, -r2.x, c8.x
					    dp2add r2.x, r4, r6.zxzw, c8.y
					    add r2.y, r2.w, -r3.w
					    add r2.y, r2_abs.y, c9.z
					    rcp r2.y, r2.y
					    mad r2.x, r2.x, c9.w, r2.y
					    min r4.w, r2.x, c9.w
					    mul r4.xyz, r3, r4.w
					    add r0, r0, r4
					    mad r3, r1.zwzw, c5, v0.xyxy
					    mul r4, r3.xyxx, c8.xxyy
					    mul r3, r3.zwxx, c8.xxyy
					    texldl r5, r4, s0
					    texldl r4, r4.xyww, s1
					    add r2.x, -r5.y, r4.w
					    mul_sat r2.x, r2.x, c8.z
					    mad r2.y, r2.x, c9.x, c9.y
					    mul r2.x, r2.x, r2.x
					    mul r5.y, r2.x, r2.y
					    mad r5.x, r2.y, -r2.x, c8.x
					    dp2add r2.x, r5, r6.wxzw, c8.y
					    mad r2.yz, r6.x, c10.xxyw, c10
					    add r4.w, r2.w, -r4.w
					    add r4.w, r4_abs.w, c9.z
					    rcp r4.w, r4.w
					    mad r2.x, r2.x, c9.w, r4.w
					    min r5.w, r2.x, c9.w
					    mul r5.xyz, r4, r5.w
					    add r0, r0, r5
					    texldl r4, r3, s0
					    texldl r3, r3.xyww, s1
					    add r2.x, -r4.y, r3.w
					    mul_sat r2.x, r2.x, c8.z
					    mad r4.x, r2.x, c9.x, c9.y
					    mul r2.x, r2.x, r2.x
					    mul r5.y, r2.x, r4.x
					    mad r5.x, r4.x, -r2.x, c8.x
					    dp2add r2.x, r5, r2.yzzw, c8.y
					    add r3.w, r2.w, -r3.w
					    add r3.w, r3_abs.w, c9.z
					    rcp r3.w, r3.w
					    mad r2.x, r2.x, c9.w, r3.w
					    min r4.w, r2.x, c9.w
					    mul r4.xyz, r3, r4.w
					    add r0, r0, r4
					    mad r3, r1.zwzw, c6, v0.xyxy
					    mad r1, r1, c7, v0.xyxy
					    mul r4, r3.xyxx, c8.xxyy
					    mul r3, r3.zwxx, c8.xxyy
					    texldl r5, r4, s0
					    texldl r4, r4.xyww, s1
					    add r2.x, -r5.y, r4.w
					    mul_sat r2.x, r2.x, c8.z
					    mad r5.x, r2.x, c9.x, c9.y
					    mul r2.x, r2.x, r2.x
					    mul r6.y, r2.x, r5.x
					    mad r6.x, r5.x, -r2.x, c8.x
					    dp2add r2.x, r6, r2.yzzw, c8.y
					    add r4.w, r2.w, -r4.w
					    add r4.w, r4_abs.w, c9.z
					    rcp r4.w, r4.w
					    mad r2.x, r2.x, c9.w, r4.w
					    min r5.w, r2.x, c9.w
					    mul r5.xyz, r4, r5.w
					    add r0, r0, r5
					    texldl r4, r3, s0
					    texldl r3, r3.xyww, s1
					    add r2.x, -r4.y, r3.w
					    mul_sat r2.x, r2.x, c8.z
					    mad r4.x, r2.x, c9.x, c9.y
					    mul r2.x, r2.x, r2.x
					    mul r5.y, r2.x, r4.x
					    mad r5.x, r4.x, -r2.x, c8.x
					    dp2add r2.x, r5, r2.yzzw, c8.y
					    add r3.w, r2.w, -r3.w
					    add r3.w, r3_abs.w, c9.z
					    rcp r3.w, r3.w
					    mad r2.x, r2.x, c9.w, r3.w
					    min r4.w, r2.x, c9.w
					    mul r4.xyz, r3, r4.w
					    add r0, r0, r4
					    mul r3, r1.xyxx, c8.xxyy
					    mul r1, r1.zwxx, c8.xxyy
					    texldl r4, r3, s0
					    texldl r3, r3.xyww, s1
					    add r2.x, -r4.y, r3.w
					    mul_sat r2.x, r2.x, c8.z
					    mad r4.x, r2.x, c9.x, c9.y
					    mul r2.x, r2.x, r2.x
					    mul r5.y, r2.x, r4.x
					    mad r5.x, r4.x, -r2.x, c8.x
					    dp2add r2.x, r5, r2.yzzw, c8.y
					    add r3.w, r2.w, -r3.w
					    add r3.w, r3_abs.w, c9.z
					    rcp r3.w, r3.w
					    mad r2.x, r2.x, c9.w, r3.w
					    min r4.w, r2.x, c9.w
					    mul r4.xyz, r3, r4.w
					    add r0, r0, r4
					    texldl r3, r1, s0
					    texldl r1, r1.xyww, s1
					    add r2.x, -r3.y, r1.w
					    mul_sat r2.x, r2.x, c8.z
					    mad r3.x, r2.x, c9.x, c9.y
					    mul r2.x, r2.x, r2.x
					    mul r4.y, r2.x, r3.x
					    mad r4.x, r3.x, -r2.x, c8.x
					    dp2add r2.x, r4, r2.yzzw, c8.y
					    add r1.w, -r1.w, r2.w
					    mov oC0.w, r2.w
					    add r1.w, r1_abs.w, c9.z
					    rcp r1.w, r1.w
					    mad r1.w, r2.x, c9.w, r1.w
					    min r2.w, r1.w, c9.w
					    mul r2.xyz, r1, r2.w
					    add r0, r0, r2
					    rcp r0.w, r0.w
					    mul oC0.xyz, r0.w, r0
					
					// approximately 196 instruction slots used (38 texture, 158 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[3];
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_2[3];
						vec4 _VirtualCameraParams1;
						vec4 _VirtualCameraParams2;
						vec4 unused_0_5[2];
						vec4 _CoCParams2;
						vec4 unused_0_7[9];
					};
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _AvgCenterDepth;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					float u_xlat8;
					vec2 u_xlat9;
					float u_xlat10;
					float u_xlat15;
					float u_xlat22;
					float u_xlat24;
					void main()
					{
					    u_xlat0.w = 1.0;
					    u_xlat1.x = _VirtualCameraParams2.y / _VirtualCameraParams1.y;
					    u_xlat1.x = u_xlat1.x * _VirtualCameraParams2.y;
					    u_xlat2 = textureLod(_AvgCenterDepth, vec2(0.5, 0.5), 0.0);
					    u_xlat8 = u_xlat1.x * u_xlat2.x;
					    u_xlat15 = u_xlat2.x + (-_VirtualCameraParams2.y);
					    u_xlat15 = float(1.0) / u_xlat15;
					    u_xlat2.x = u_xlat15 * u_xlat8;
					    u_xlat2.y = u_xlat15 * (-u_xlat1.x);
					    u_xlat1.xy = u_xlat2.xy * _VirtualCameraParams2.ww;
					    u_xlat2 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat15 = float(1.0) / u_xlat2.w;
					    u_xlat1.x = u_xlat15 * u_xlat1.x + u_xlat1.y;
					    u_xlat1.x = min(abs(u_xlat1.x), _CoCParams2.x);
					    u_xlat1.x = u_xlat1.x * 0.349999994;
					    u_xlat1.x = max(u_xlat1.x, 1.0);
					    u_xlat1 = u_xlat1.xxxx * _ScionResolutionParameters2.xyxy;
					    u_xlat3 = u_xlat1.zwzw * vec4(-0.745654106, 0.113139302, 0.0829383731, -0.803609788) + vs_TEXCOORD0.xyxy;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat3.xy, 0.0);
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat3.xy, 0.0);
					    u_xlat3.x = (-u_xlat4.y) + u_xlat5.w;
					    u_xlat3.x = u_xlat3.x * 0.5;
					    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
					    u_xlat10 = u_xlat3.x * -2.0 + 3.0;
					    u_xlat3.x = u_xlat3.x * u_xlat3.x;
					    u_xlat4.y = u_xlat3.x * u_xlat10;
					    u_xlat4.x = (-u_xlat10) * u_xlat3.x + 1.0;
					    u_xlat6 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat3.x = u_xlat2.w + (-u_xlat6.y);
					    u_xlat3.x = u_xlat3.x * 0.5;
					    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
					    u_xlat10 = u_xlat3.x * -2.0 + 3.0;
					    u_xlat3.x = u_xlat3.x * u_xlat3.x;
					    u_xlat6.yzw = (-vec3(u_xlat10)) * u_xlat3.xxx + vec3(1.0, 1.0, 1.0);
					    u_xlat6.x = u_xlat3.x * u_xlat10;
					    u_xlat3.x = dot(u_xlat4.yx, u_xlat6.xy);
					    u_xlat10 = u_xlat2.w + (-u_xlat5.w);
					    u_xlat10 = abs(u_xlat10) + 0.00999999978;
					    u_xlat10 = float(1.0) / u_xlat10;
					    u_xlat3.x = u_xlat3.x * 10.0 + u_xlat10;
					    u_xlat4.w = min(u_xlat3.x, 10.0);
					    u_xlat4.xyz = u_xlat4.www * u_xlat5.xyz;
					    u_xlat0.xyz = u_xlat2.xyz;
					    u_xlat0 = u_xlat0 + u_xlat4;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat3.zw, 0.0);
					    u_xlat3 = textureLod(_HalfResSourceDepthTexture, u_xlat3.zw, 0.0);
					    u_xlat2.x = (-u_xlat4.y) + u_xlat3.w;
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat9.x = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat4.y = u_xlat2.x * u_xlat9.x;
					    u_xlat4.x = (-u_xlat9.x) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat4.yx, u_xlat6.xz);
					    u_xlat9.x = u_xlat2.w + (-u_xlat3.w);
					    u_xlat9.x = abs(u_xlat9.x) + 0.00999999978;
					    u_xlat9.x = float(1.0) / u_xlat9.x;
					    u_xlat2.x = u_xlat2.x * 10.0 + u_xlat9.x;
					    u_xlat4.w = min(u_xlat2.x, 10.0);
					    u_xlat4.xyz = u_xlat3.xyz * u_xlat4.www;
					    u_xlat0 = u_xlat0 + u_xlat4;
					    u_xlat3 = u_xlat1.zwzw * vec4(0.258436203, 0.186414197, -0.710718393, -0.601000786) + vs_TEXCOORD0.xyxy;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat3.xy, 0.0);
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat3.xy, 0.0);
					    u_xlat2.x = (-u_xlat4.y) + u_xlat5.w;
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat9.x = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat3.y = u_xlat2.x * u_xlat9.x;
					    u_xlat3.x = (-u_xlat9.x) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat3.yx, u_xlat6.xw);
					    u_xlat9.xy = u_xlat6.xx * vec2(-1.0, 1.0) + vec2(1.0, 0.0);
					    u_xlat3.x = u_xlat2.w + (-u_xlat5.w);
					    u_xlat3.x = abs(u_xlat3.x) + 0.00999999978;
					    u_xlat3.x = float(1.0) / u_xlat3.x;
					    u_xlat2.x = u_xlat2.x * 10.0 + u_xlat3.x;
					    u_xlat4.w = min(u_xlat2.x, 10.0);
					    u_xlat4.xyz = u_xlat4.www * u_xlat5.xyz;
					    u_xlat0 = u_xlat0 + u_xlat4;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat3.zw, 0.0);
					    u_xlat3 = textureLod(_HalfResSourceDepthTexture, u_xlat3.zw, 0.0);
					    u_xlat2.x = (-u_xlat4.y) + u_xlat3.w;
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat4.x = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat5.y = u_xlat2.x * u_xlat4.x;
					    u_xlat5.x = (-u_xlat4.x) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat5.xy, u_xlat9.xy);
					    u_xlat24 = u_xlat2.w + (-u_xlat3.w);
					    u_xlat24 = abs(u_xlat24) + 0.00999999978;
					    u_xlat24 = float(1.0) / u_xlat24;
					    u_xlat2.x = u_xlat2.x * 10.0 + u_xlat24;
					    u_xlat4.w = min(u_xlat2.x, 10.0);
					    u_xlat4.xyz = u_xlat3.xyz * u_xlat4.www;
					    u_xlat0 = u_xlat0 + u_xlat4;
					    u_xlat3 = u_xlat1.zwzw * vec4(0.0893398523, 0.90515691, -0.617822409, 0.76241082) + vs_TEXCOORD0.xyxy;
					    u_xlat1 = u_xlat1 * vec4(0.734034419, -0.416939408, 0.922537029, 0.281461209) + vs_TEXCOORD0.xyxy;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat3.xy, 0.0);
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat3.xy, 0.0);
					    u_xlat2.x = (-u_xlat4.y) + u_xlat5.w;
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat3.x = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat4.y = u_xlat2.x * u_xlat3.x;
					    u_xlat4.x = (-u_xlat3.x) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat4.xy, u_xlat9.xy);
					    u_xlat3.x = u_xlat2.w + (-u_xlat5.w);
					    u_xlat3.x = abs(u_xlat3.x) + 0.00999999978;
					    u_xlat3.x = float(1.0) / u_xlat3.x;
					    u_xlat2.x = u_xlat2.x * 10.0 + u_xlat3.x;
					    u_xlat4.w = min(u_xlat2.x, 10.0);
					    u_xlat4.xyz = u_xlat4.www * u_xlat5.xyz;
					    u_xlat0 = u_xlat0 + u_xlat4;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat3.zw, 0.0);
					    u_xlat3 = textureLod(_HalfResSourceDepthTexture, u_xlat3.zw, 0.0);
					    u_xlat2.x = (-u_xlat4.y) + u_xlat3.w;
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat4.x = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat5.y = u_xlat2.x * u_xlat4.x;
					    u_xlat5.x = (-u_xlat4.x) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat5.xy, u_xlat9.xy);
					    u_xlat24 = u_xlat2.w + (-u_xlat3.w);
					    u_xlat24 = abs(u_xlat24) + 0.00999999978;
					    u_xlat24 = float(1.0) / u_xlat24;
					    u_xlat2.x = u_xlat2.x * 10.0 + u_xlat24;
					    u_xlat4.w = min(u_xlat2.x, 10.0);
					    u_xlat4.xyz = u_xlat3.xyz * u_xlat4.www;
					    u_xlat0 = u_xlat0 + u_xlat4;
					    u_xlat3 = textureLod(_TiledNeighbourhoodData, u_xlat1.xy, 0.0);
					    u_xlat4 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat1.x = (-u_xlat3.y) + u_xlat4.w;
					    u_xlat1.x = u_xlat1.x * 0.5;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat8 = u_xlat1.x * -2.0 + 3.0;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x;
					    u_xlat3.y = u_xlat1.x * u_xlat8;
					    u_xlat3.x = (-u_xlat8) * u_xlat1.x + 1.0;
					    u_xlat1.x = dot(u_xlat3.xy, u_xlat9.xy);
					    u_xlat8 = u_xlat2.w + (-u_xlat4.w);
					    u_xlat8 = abs(u_xlat8) + 0.00999999978;
					    u_xlat8 = float(1.0) / u_xlat8;
					    u_xlat1.x = u_xlat1.x * 10.0 + u_xlat8;
					    u_xlat3.w = min(u_xlat1.x, 10.0);
					    u_xlat3.xyz = u_xlat3.www * u_xlat4.xyz;
					    u_xlat0 = u_xlat0 + u_xlat3;
					    u_xlat3 = textureLod(_TiledNeighbourhoodData, u_xlat1.zw, 0.0);
					    u_xlat1 = textureLod(_HalfResSourceDepthTexture, u_xlat1.zw, 0.0);
					    u_xlat2.x = (-u_xlat3.y) + u_xlat1.w;
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat3.x = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat4.y = u_xlat2.x * u_xlat3.x;
					    u_xlat4.x = (-u_xlat3.x) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat4.xy, u_xlat9.xy);
					    u_xlat22 = (-u_xlat1.w) + u_xlat2.w;
					    SV_Target0.w = u_xlat2.w;
					    u_xlat22 = abs(u_xlat22) + 0.00999999978;
					    u_xlat22 = float(1.0) / u_xlat22;
					    u_xlat22 = u_xlat2.x * 10.0 + u_xlat22;
					    u_xlat2.w = min(u_xlat22, 10.0);
					    u_xlat2.xyz = u_xlat1.xyz * u_xlat2.www;
					    u_xlat0 = u_xlat0 + u_xlat2;
					    SV_Target0.xyz = u_xlat0.xyz / u_xlat0.www;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" "SC_DOF_MASK_ON" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _AvgCenterDepth;
					//   float4 _CoCParams2;
					//   sampler2D _ExclusionMask;
					//   sampler2D _HalfResSourceDepthTexture;
					//   float4 _ScionResolutionParameters2;
					//   sampler2D _TiledNeighbourhoodData;
					//   float4 _VirtualCameraParams1;
					//   float4 _VirtualCameraParams2;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters2 c0       1
					//   _VirtualCameraParams1       c1       1
					//   _VirtualCameraParams2       c2       1
					//   _CoCParams2                 c3       1
					//   _TiledNeighbourhoodData     s0       1
					//   _ExclusionMask              s1       1
					//   _HalfResSourceDepthTexture  s2       1
					//   _AvgCenterDepth             s3       1
					//
					
					    ps_3_0
					    def c4, -0.745654106, 0.113139302, 0.0829383731, -0.803609788
					    def c5, 0.258436203, 0.186414197, -0.710718393, -0.601000786
					    def c6, 0.0893398523, 0.90515691, -0.617822409, 0.76241082
					    def c7, 0.734034419, -0.416939408, 0.922537029, 0.281461209
					    def c8, 1, 0, 0.5, 0.349999994
					    def c9, -2, 3, 0.00999999978, 10
					    def c10, -1, 1, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    dcl_2d s3
					    mul r0, c8.xxyy, v0.xyxx
					    texldl r1, r0, s2
					    texldl r2, r0, s1
					    if_lt r2.x, c8.z
					    else
					      texldl r0, r0, s0
					      add r0.x, -r0.y, r1.w
					      mul_sat r0.x, r0.x, c8.z
					      mad r0.y, r0.x, c9.x, c9.y
					      mul r0.x, r0.x, r0.x
					      mul r2.x, r0.x, r0.y
					      texldl r3, c8.zzyy, s3
					      rcp r0.z, c1.y
					      mul r0.w, c2.y, c2.y
					      mul r0.z, r0.z, r0.w
					      add r0.w, r3.x, -c2.y
					      rcp r0.w, r0.w
					      mul r3.x, r3.x, r0.z
					      mul r3.x, r0.w, r3.x
					      mul r3.y, r0.w, -r0.z
					      mul r0.zw, r3.xyxy, c2.w
					      rcp r3.x, r1.w
					      mad r0.z, r3.x, r0.z, r0.w
					      min r3.x, c3.x, r0_abs.z
					      mul r0.z, r3.x, c8.w
					      max r3.x, r0.z, c8.x
					      mul r3, r3.x, c0.xyxy
					      mad r4, r3.zwzw, c4, v0.xyxy
					      mul r5, r4.xyxx, c8.xxyy
					      texldl r6, r5.xyww, s2
					      add r0.z, r1.w, -r6.w
					      add r0.z, r0_abs.z, c9.z
					      rcp r0.z, r0.z
					      texldl r5, r5, s0
					      add r0.w, -r5.y, r6.w
					      mul_sat r0.w, r0.w, c8.z
					      mad r4.y, r0.w, c9.x, c9.y
					      mul r0.w, r0.w, r0.w
					      mul r5.y, r0.w, r4.y
					      mad r5.x, r4.y, -r0.w, c8.x
					      mad r2.yzw, r0.y, -r0.x, c8.x
					      dp2add r0.x, r5, r2.yxzw, c8.y
					      mad r0.x, r0.x, c9.w, r0.z
					      min r5.w, r0.x, c9.w
					      mul r5.xyz, r5.w, r6
					      mad r0, r1.xyzx, c8.xxxy, c8.yyyx
					      add r0, r5, r0
					      mul r4, r4.zwxx, c8.xxyy
					      texldl r5, r4.xyww, s2
					      add r2.y, r1.w, -r5.w
					      add r2.y, r2_abs.y, c9.z
					      rcp r2.y, r2.y
					      texldl r4, r4, s0
					      add r4.x, -r4.y, r5.w
					      mul_sat r4.x, r4.x, c8.z
					      mad r4.y, r4.x, c9.x, c9.y
					      mul r4.x, r4.x, r4.x
					      mul r6.y, r4.x, r4.y
					      mad r6.x, r4.y, -r4.x, c8.x
					      dp2add r2.z, r6, r2.zxzw, c8.y
					      mad r2.y, r2.z, c9.w, r2.y
					      min r4.w, r2.y, c9.w
					      mul r4.xyz, r4.w, r5
					      add r0, r0, r4
					      mad r4, r3.zwzw, c5, v0.xyxy
					      mul r5, r4.xyxx, c8.xxyy
					      texldl r6, r5.xyww, s2
					      add r2.y, r1.w, -r6.w
					      add r2.y, r2_abs.y, c9.z
					      rcp r2.y, r2.y
					      texldl r5, r5, s0
					      add r2.z, -r5.y, r6.w
					      mul_sat r2.z, r2.z, c8.z
					      mad r4.y, r2.z, c9.x, c9.y
					      mul r2.z, r2.z, r2.z
					      mul r5.y, r2.z, r4.y
					      mad r5.x, r4.y, -r2.z, c8.x
					      dp2add r2.z, r5, r2.wxzw, c8.y
					      mad r2.y, r2.z, c9.w, r2.y
					      min r5.w, r2.y, c9.w
					      mul r5.xyz, r5.w, r6
					      add r0, r0, r5
					      mul r4, r4.zwxx, c8.xxyy
					      texldl r5, r4.xyww, s2
					      add r2.y, r1.w, -r5.w
					      add r2.y, r2_abs.y, c9.z
					      rcp r2.y, r2.y
					      texldl r4, r4, s0
					      add r2.z, -r4.y, r5.w
					      mul_sat r2.z, r2.z, c8.z
					      mad r2.w, r2.z, c9.x, c9.y
					      mul r2.z, r2.z, r2.z
					      mul r4.y, r2.z, r2.w
					      mad r4.x, r2.w, -r2.z, c8.x
					      mad r2.xz, r2.x, c10.xyyw, c10.yyzw
					      dp2add r2.w, r4, r2.xzzw, c8.y
					      mad r2.y, r2.w, c9.w, r2.y
					      min r4.w, r2.y, c9.w
					      mul r4.xyz, r4.w, r5
					      add r0, r0, r4
					      mad r4, r3.zwzw, c6, v0.xyxy
					      mul r5, r4.xyxx, c8.xxyy
					      texldl r6, r5.xyww, s2
					      add r2.y, r1.w, -r6.w
					      add r2.y, r2_abs.y, c9.z
					      rcp r2.y, r2.y
					      texldl r5, r5, s0
					      add r2.w, -r5.y, r6.w
					      mul_sat r2.w, r2.w, c8.z
					      mad r4.y, r2.w, c9.x, c9.y
					      mul r2.w, r2.w, r2.w
					      mul r5.y, r2.w, r4.y
					      mad r5.x, r4.y, -r2.w, c8.x
					      dp2add r2.w, r5, r2.xzzw, c8.y
					      mad r2.y, r2.w, c9.w, r2.y
					      min r5.w, r2.y, c9.w
					      mul r5.xyz, r5.w, r6
					      add r0, r0, r5
					      mul r4, r4.zwxx, c8.xxyy
					      texldl r5, r4.xyww, s2
					      add r2.y, r1.w, -r5.w
					      add r2.y, r2_abs.y, c9.z
					      rcp r2.y, r2.y
					      texldl r4, r4, s0
					      add r2.w, -r4.y, r5.w
					      mul_sat r2.w, r2.w, c8.z
					      mad r4.x, r2.w, c9.x, c9.y
					      mul r2.w, r2.w, r2.w
					      mul r6.y, r2.w, r4.x
					      mad r6.x, r4.x, -r2.w, c8.x
					      dp2add r2.w, r6, r2.xzzw, c8.y
					      mad r2.y, r2.w, c9.w, r2.y
					      min r4.w, r2.y, c9.w
					      mul r4.xyz, r4.w, r5
					      add r0, r0, r4
					      mad r3, r3, c7, v0.xyxy
					      mul r4, r3.xyxx, c8.xxyy
					      texldl r5, r4.xyww, s2
					      add r2.y, r1.w, -r5.w
					      add r2.y, r2_abs.y, c9.z
					      rcp r2.y, r2.y
					      texldl r4, r4, s0
					      add r2.w, -r4.y, r5.w
					      mul_sat r2.w, r2.w, c8.z
					      mad r3.y, r2.w, c9.x, c9.y
					      mul r2.w, r2.w, r2.w
					      mul r4.y, r2.w, r3.y
					      mad r4.x, r3.y, -r2.w, c8.x
					      dp2add r2.w, r4, r2.xzzw, c8.y
					      mad r2.y, r2.w, c9.w, r2.y
					      min r4.w, r2.y, c9.w
					      mul r4.xyz, r4.w, r5
					      add r0, r0, r4
					      mul r3, r3.zwxx, c8.xxyy
					      texldl r4, r3.xyww, s2
					      add r2.y, r1.w, -r4.w
					      add r2.y, r2_abs.y, c9.z
					      rcp r2.y, r2.y
					      texldl r3, r3, s0
					      add r2.w, -r3.y, r4.w
					      mul_sat r2.w, r2.w, c8.z
					      mad r3.x, r2.w, c9.x, c9.y
					      mul r2.w, r2.w, r2.w
					      mul r5.y, r2.w, r3.x
					      mad r5.x, r3.x, -r2.w, c8.x
					      dp2add r2.x, r5, r2.xzzw, c8.y
					      mad r2.x, r2.x, c9.w, r2.y
					      min r3.w, r2.x, c9.w
					      mul r3.xyz, r3.w, r4
					      add r0, r0, r3
					      rcp r0.w, r0.w
					      mul r1.xyz, r0.w, r0
					    endif
					    mov oC0, r1
					
					// approximately 204 instruction slots used (40 texture, 164 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" "SC_DOF_MASK_ON" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[3];
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_2[3];
						vec4 _VirtualCameraParams1;
						vec4 _VirtualCameraParams2;
						vec4 unused_0_5[2];
						vec4 _CoCParams2;
						vec4 unused_0_7[9];
					};
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _ExclusionMask;
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _AvgCenterDepth;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					bool u_xlatb1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec2 u_xlat7;
					float u_xlat8;
					float u_xlat9;
					float u_xlat14;
					vec2 u_xlat15;
					float u_xlat22;
					void main()
					{
					    u_xlat0 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1 = textureLod(_ExclusionMask, vs_TEXCOORD0.xy, 0.0);
					    u_xlatb1 = u_xlat1.x<0.5;
					    if(u_xlatb1){
					        SV_Target0 = u_xlat0;
					        return;
					    }
					    u_xlat1 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1.x = u_xlat0.w + (-u_xlat1.y);
					    u_xlat1.x = u_xlat1.x * 0.5;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat8 = u_xlat1.x * -2.0 + 3.0;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x;
					    u_xlat2.x = u_xlat1.x * u_xlat8;
					    u_xlat3 = textureLod(_AvgCenterDepth, vec2(0.5, 0.5), 0.0);
					    u_xlat15.x = _VirtualCameraParams2.y / _VirtualCameraParams1.y;
					    u_xlat15.x = u_xlat15.x * _VirtualCameraParams2.y;
					    u_xlat22 = u_xlat3.x + (-_VirtualCameraParams2.y);
					    u_xlat22 = float(1.0) / u_xlat22;
					    u_xlat3.x = u_xlat3.x * u_xlat15.x;
					    u_xlat3.x = u_xlat22 * u_xlat3.x;
					    u_xlat3.y = u_xlat22 * (-u_xlat15.x);
					    u_xlat15.xy = u_xlat3.xy * _VirtualCameraParams2.ww;
					    u_xlat3.x = float(1.0) / u_xlat0.w;
					    u_xlat15.x = u_xlat3.x * u_xlat15.x + u_xlat15.y;
					    u_xlat15.x = min(abs(u_xlat15.x), _CoCParams2.x);
					    u_xlat15.x = u_xlat15.x * 0.349999994;
					    u_xlat15.x = max(u_xlat15.x, 1.0);
					    u_xlat3 = u_xlat15.xxxx * _ScionResolutionParameters2.xyxy;
					    u_xlat4 = u_xlat3.zwzw * vec4(-0.745654106, 0.113139302, 0.0829383731, -0.803609788) + vs_TEXCOORD0.xyxy;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					    u_xlat15.x = u_xlat0.w + (-u_xlat5.w);
					    u_xlat15.x = abs(u_xlat15.x) + 0.00999999978;
					    u_xlat15.x = float(1.0) / u_xlat15.x;
					    u_xlat6 = textureLod(_TiledNeighbourhoodData, u_xlat4.xy, 0.0);
					    u_xlat22 = u_xlat5.w + (-u_xlat6.y);
					    u_xlat22 = u_xlat22 * 0.5;
					    u_xlat22 = clamp(u_xlat22, 0.0, 1.0);
					    u_xlat4.x = u_xlat22 * -2.0 + 3.0;
					    u_xlat22 = u_xlat22 * u_xlat22;
					    u_xlat6.y = u_xlat22 * u_xlat4.x;
					    u_xlat6.x = (-u_xlat4.x) * u_xlat22 + 1.0;
					    u_xlat2.yzw = (-vec3(u_xlat8)) * u_xlat1.xxx + vec3(1.0, 1.0, 1.0);
					    u_xlat1.x = dot(u_xlat6.yx, u_xlat2.xy);
					    u_xlat1.x = u_xlat1.x * 10.0 + u_xlat15.x;
					    u_xlat1.w = min(u_xlat1.x, 10.0);
					    u_xlat1.xyz = u_xlat1.www * u_xlat5.xyz;
					    u_xlat5.xyz = u_xlat0.xyz;
					    u_xlat5.w = 1.0;
					    u_xlat1 = u_xlat1 + u_xlat5;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat4.zw, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat5.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat4.zw, 0.0);
					    u_xlat7.x = (-u_xlat4.y) + u_xlat5.w;
					    u_xlat7.x = u_xlat7.x * 0.5;
					    u_xlat7.x = clamp(u_xlat7.x, 0.0, 1.0);
					    u_xlat14 = u_xlat7.x * -2.0 + 3.0;
					    u_xlat7.x = u_xlat7.x * u_xlat7.x;
					    u_xlat4.y = u_xlat7.x * u_xlat14;
					    u_xlat4.x = (-u_xlat14) * u_xlat7.x + 1.0;
					    u_xlat7.x = dot(u_xlat4.yx, u_xlat2.xz);
					    u_xlat0.x = u_xlat7.x * 10.0 + u_xlat0.x;
					    u_xlat4.w = min(u_xlat0.x, 10.0);
					    u_xlat4.xyz = u_xlat4.www * u_xlat5.xyz;
					    u_xlat1 = u_xlat1 + u_xlat4;
					    u_xlat4 = u_xlat3.zwzw * vec4(0.258436203, 0.186414197, -0.710718393, -0.601000786) + vs_TEXCOORD0.xyxy;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat5.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat6 = textureLod(_TiledNeighbourhoodData, u_xlat4.xy, 0.0);
					    u_xlat7.x = u_xlat5.w + (-u_xlat6.y);
					    u_xlat7.x = u_xlat7.x * 0.5;
					    u_xlat7.x = clamp(u_xlat7.x, 0.0, 1.0);
					    u_xlat14 = u_xlat7.x * -2.0 + 3.0;
					    u_xlat7.x = u_xlat7.x * u_xlat7.x;
					    u_xlat4.y = u_xlat7.x * u_xlat14;
					    u_xlat4.x = (-u_xlat14) * u_xlat7.x + 1.0;
					    u_xlat7.x = dot(u_xlat4.yx, u_xlat2.xw);
					    u_xlat0.x = u_xlat7.x * 10.0 + u_xlat0.x;
					    u_xlat6.w = min(u_xlat0.x, 10.0);
					    u_xlat6.xyz = u_xlat5.xyz * u_xlat6.www;
					    u_xlat1 = u_xlat1 + u_xlat6;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat4.zw, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat5.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat4.zw, 0.0);
					    u_xlat7.x = (-u_xlat4.y) + u_xlat5.w;
					    u_xlat7.x = u_xlat7.x * 0.5;
					    u_xlat7.x = clamp(u_xlat7.x, 0.0, 1.0);
					    u_xlat14 = u_xlat7.x * -2.0 + 3.0;
					    u_xlat7.x = u_xlat7.x * u_xlat7.x;
					    u_xlat4.y = u_xlat7.x * u_xlat14;
					    u_xlat4.x = (-u_xlat14) * u_xlat7.x + 1.0;
					    u_xlat7.xy = u_xlat2.xx * vec2(-1.0, 1.0) + vec2(1.0, 0.0);
					    u_xlat2.x = dot(u_xlat4.xy, u_xlat7.xy);
					    u_xlat0.x = u_xlat2.x * 10.0 + u_xlat0.x;
					    u_xlat2.w = min(u_xlat0.x, 10.0);
					    u_xlat2.xyz = u_xlat2.www * u_xlat5.xyz;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2 = u_xlat3.zwzw * vec4(0.0893398523, 0.90515691, -0.617822409, 0.76241082) + vs_TEXCOORD0.xyxy;
					    u_xlat4 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat4.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat5 = textureLod(_TiledNeighbourhoodData, u_xlat2.xy, 0.0);
					    u_xlat2.x = u_xlat4.w + (-u_xlat5.y);
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat9 = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat5.y = u_xlat2.x * u_xlat9;
					    u_xlat5.x = (-u_xlat9) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat5.xy, u_xlat7.xy);
					    u_xlat0.x = u_xlat2.x * 10.0 + u_xlat0.x;
					    u_xlat5.w = min(u_xlat0.x, 10.0);
					    u_xlat5.xyz = u_xlat4.xyz * u_xlat5.www;
					    u_xlat1 = u_xlat1 + u_xlat5;
					    u_xlat4 = textureLod(_HalfResSourceDepthTexture, u_xlat2.zw, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat4.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat2 = textureLod(_TiledNeighbourhoodData, u_xlat2.zw, 0.0);
					    u_xlat2.x = (-u_xlat2.y) + u_xlat4.w;
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat9 = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat5.y = u_xlat2.x * u_xlat9;
					    u_xlat5.x = (-u_xlat9) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat5.xy, u_xlat7.xy);
					    u_xlat0.x = u_xlat2.x * 10.0 + u_xlat0.x;
					    u_xlat2.w = min(u_xlat0.x, 10.0);
					    u_xlat2.xyz = u_xlat2.www * u_xlat4.xyz;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2 = u_xlat3 * vec4(0.734034419, -0.416939408, 0.922537029, 0.281461209) + vs_TEXCOORD0.xyxy;
					    u_xlat3 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat3.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, u_xlat2.xy, 0.0);
					    u_xlat2.x = u_xlat3.w + (-u_xlat4.y);
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat9 = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat4.y = u_xlat2.x * u_xlat9;
					    u_xlat4.x = (-u_xlat9) * u_xlat2.x + 1.0;
					    u_xlat2.x = dot(u_xlat4.xy, u_xlat7.xy);
					    u_xlat0.x = u_xlat2.x * 10.0 + u_xlat0.x;
					    u_xlat4.w = min(u_xlat0.x, 10.0);
					    u_xlat4.xyz = u_xlat3.xyz * u_xlat4.www;
					    u_xlat1 = u_xlat1 + u_xlat4;
					    u_xlat3 = textureLod(_HalfResSourceDepthTexture, u_xlat2.zw, 0.0);
					    u_xlat0.x = u_xlat0.w + (-u_xlat3.w);
					    u_xlat0.x = abs(u_xlat0.x) + 0.00999999978;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat2 = textureLod(_TiledNeighbourhoodData, u_xlat2.zw, 0.0);
					    u_xlat2.x = (-u_xlat2.y) + u_xlat3.w;
					    u_xlat2.x = u_xlat2.x * 0.5;
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat9 = u_xlat2.x * -2.0 + 3.0;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat4.y = u_xlat2.x * u_xlat9;
					    u_xlat4.x = (-u_xlat9) * u_xlat2.x + 1.0;
					    u_xlat7.x = dot(u_xlat4.xy, u_xlat7.xy);
					    u_xlat0.x = u_xlat7.x * 10.0 + u_xlat0.x;
					    u_xlat2.w = min(u_xlat0.x, 10.0);
					    u_xlat2.xyz = u_xlat2.www * u_xlat3.xyz;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    SV_Target0.xyz = u_xlat1.xyz / u_xlat1.www;
					    SV_Target0.w = u_xlat0.w;
					    return;
					}"
				}
			}
		}
		Pass {
			Name "BLURTAPPASS49"
			ZClip Off
			ZWrite Off
			Cull Off
			Fog {
				Mode Off
			}
			GpuProgramID 356318
			Program "vp" {
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" "SC_DOF_MASK_ON" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" "SC_DOF_MASK_ON" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" "SC_DOF_MASK_ON" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" "SC_DOF_MASK_ON" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" "SC_DOF_MASK_ON" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" "SC_DOF_MASK_ON" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" "SC_DOF_MASK_ON" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" "SC_DOF_MASK_ON" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" "SC_DOF_MASK_ON" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" "SC_DOF_MASK_ON" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" "SC_DOF_MASK_ON" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" "SC_DOF_MASK_ON" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _CoCParams1;
					//   sampler2D _HalfResSourceDepthTexture;
					//   sampler2D _PresortTexture;
					//   float4 _ScionResolutionParameters1;
					//   float4 _ScionResolutionParameters2;
					//   float _TemporalUVOffset;
					//   sampler2D _TiledNeighbourhoodData;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters1 c0       1
					//   _ScionResolutionParameters2 c1       1
					//   _CoCParams1                 c2       1
					//   _TemporalUVOffset           c3       1
					//   _TiledNeighbourhoodData     s0       1
					//   _HalfResSourceDepthTexture  s1       1
					//   _PresortTexture             s2       1
					//
					
					    ps_3_0
					    def c4, 0.707106829, -0.707106829, 0, 10
					    def c5, 1, 0, 9.99999975e-005, 0.285714298
					    def c6, 0.000231481477, 0.25, 0, -1
					    def c7, 0, 1.37, 3571, 0
					    def c8, -5, -6, -7, -8
					    def c9, 0.00100000005, 0.571428478, 0, 9
					    def c10, 2, -1, -3, -4
					    def c11, -9, -10, -11, -12
					    def c12, -13, -14, -15, -16
					    def c13, -17, -18, -19, -20
					    def c14, -21, -22, -23, -24
					    def c15, 0.857142925, 25, -0.866025388, -0.499999911
					    def c16, -25, -26, -27, -28
					    def c17, -29, -30, -31, -32
					    def c18, -33, -34, -35, -36
					    def c19, -37, -38, -39, -40
					    def c20, -41, -42, -43, -44
					    def c21, -45, -46, -47, -48
					    def c22, 0.5, 0.866025388, 0.258819103, 0.965925813
					    def c23, 0.866025388, -0.5, 0.0641141385, 9.99999994e-009
					    def c24, -0.923879385, -0.382683486, 0.382683486, -0.382683396
					    def c25, -0.965925872, -0.258819014, 0.258819014, -0.965925813
					    def c26, -0.866025388, 0.499999911, 0.500000119, -0.866025329
					    def c27, -0.258818895, -0.965925813, -0.258819193, 0.965925813
					    defi i0, 8, 0, 0, 0
					    defi i1, 16, 0, 0, 0
					    defi i2, 24, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    mul r0, c5.xxyy, v0.xyxx
					    texldl r1, r0, s0
					    texldl r2, r0, s1
					    if_lt r1.x, c5.x
					      mov oC1, c5.y
					    else
					      texldl r0, r0, s2
					      add_sat r0.x, -r2.w, c2.z
					      add r0.x, r0.x, c5.x
					      mad r0.x, r0.y, r0.x, c5.z
					      add r0.y, r0.z, c5.z
					      mul r1.yzw, r0.x, r2.xxyz
					      mul r3.xyz, r0.y, r2
					      mul r0.z, r1.x, c5.w
					      mul r4.xy, c0, v0
					      mov r5.zw, c5.y
					      mov r6.xyz, r3
					      mov r6.w, r0.y
					      mov r7.xyz, r1.yzww
					      mov r7.w, r0.x
					      mov r0.w, c5.x
					      rep i0
					        mov r8.y, c7.y
					        mad r3.w, r0.w, r8.y, c3.x
					        mul r4.zw, r3.w, r4.xyxy
					        mad r4.zw, r4, c6.x, c6.xyyz
					        dp2add r3.w, r4.zwzw, c7.z, c7.w
					        mul r4.zw, r4, r3.w
					        frc r4.zw, r4
					        mad r4.zw, r4, c10.x, c10.y
					        add r8, r0.w, -c10_abs.yxzw
					        add r9, r0.w, c8
					        cmp r10.xy, -r8_abs.x, c4, c4.z
					        cmp r8.xy, -r8_abs.y, c6.wzzw, r10
					        cmp r8.xy, -r8_abs.z, c4.x, r8
					        cmp r8.xy, -r8_abs.w, c6.zwzw, r8
					        cmp r8.xy, -r9_abs.x, c5.yxzw, r8
					        cmp r8.xy, -r9_abs.y, c4.y, r8
					        cmp r8.xy, -r9_abs.z, c5, r8
					        cmp r8.xy, -r9_abs.w, c4.yxzw, r8
					        mad r4.zw, r4, c6.y, r8.xyxy
					        mul r4.zw, r0.z, r4
					        mad r5.xy, r4.zwzw, c1, v0
					        texldl r8, r5.xyww, s1
					        texldl r9, r5, s2
					        dp2add r3.w, r4.zwzw, r4.zwzw, c5.y
					        rsq r3.w, r3.w
					        rcp r3.w, r3.w
					        mad r3.w, r9.x, c4.w, -r3.w
					        add r3.w, r3.w, c6.y
					        mul_sat r3.w, r3.w, -c10.w
					        add_sat r4.z, -r8.w, c2.z
					        mul r4.w, r9.y, r3.w
					        add r4.z, r4.z, c5.x
					        mad r10.w, r4.w, r4.z, c9.x
					        mad r9.w, r3.w, r9.z, c9.x
					        mul r10.xyz, r8, r10.w
					        mul r9.xyz, r8, r9.w
					        add r7, r7, r10
					        add r6, r6, r9
					        add r0.w, r0.w, c5.x
					      endrep
					      if_lt c10.x, r1.x
					        add_sat r0.x, r1.x, -c10.x
					        mul r0.y, r1.x, c9.y
					        mov r3.zw, c5.y
					        mov r5, r6
					        mov r8, r7
					        mov r0.z, c9.w
					        rep i1
					          mov r1.y, c7.y
					          mad r0.w, r0.z, r1.y, c3.x
					          mul r1.yz, r0.w, r4.xxyw
					          mad r1.yz, r1, c6.x, c6
					          dp2add r0.w, r1.yzzw, c7.z, c7.w
					          mul r1.yz, r1, r0.w
					          frc r1.yz, r1
					          mad r1.yz, r1, c10.x, c10.y
					          add r9, r0.z, c11
					          add r10, r0.z, c12
					          add r11, r0.z, c13
					          add r12, r0.z, c14
					          cmp r4.zw, -r9_abs.x, c4.xyxy, c4.z
					          cmp r4.zw, -r9_abs.y, c24.xyxy, r4
					          cmp r4.zw, -r9_abs.z, c6.xywz, r4
					          cmp r4.zw, -r9_abs.w, c24.xyxz, r4
					          cmp r4.zw, -r10_abs.x, c4.x, r4
					          cmp r4.zw, -r10_abs.y, c24.xyzx, r4
					          cmp r4.zw, -r10_abs.z, -c24.xywx, r4
					          cmp r4.zw, -r10_abs.w, c6, r4
					          cmp r4.zw, -r11_abs.x, c5.xyyx, r4
					          cmp r4.zw, -r11_abs.y, c24.xywx, r4
					          cmp r4.zw, -r11_abs.z, -c24.xyzx, r4
					          cmp r4.zw, -r11_abs.w, c4.y, r4
					          cmp r4.zw, -r12_abs.x, -c24.xyxz, r4
					          cmp r4.zw, -r12_abs.y, c5.xyxy, r4
					          cmp r4.zw, -r12_abs.z, -c24.xyxy, r4
					          cmp r4.zw, -r12_abs.w, c4.xyyx, r4
					          mad r1.yz, r1, c6.y, r4.xzww
					          mul r1.yz, r0.y, r1
					          mad r3.xy, r1.yzzw, c1, v0
					          texldl r9, r3.xyww, s1
					          texldl r10, r3, s2
					          dp2add r0.w, r1.yzzw, r1.yzzw, c5.y
					          rsq r0.w, r0.w
					          rcp r0.w, r0.w
					          mad r0.w, r10.x, c4.w, -r0.w
					          add r0.w, r0.w, c6.y
					          mul_sat r0.w, r0.w, -c10.w
					          mul r0.w, r0.x, r0.w
					          add_sat r1.y, -r9.w, c2.z
					          mul r1.z, r10.y, r0.w
					          add r1.y, r1.y, c5.x
					          mad r11.w, r1.z, r1.y, c9.x
					          mad r10.w, r0.w, r10.z, c9.x
					          mul r11.xyz, r9, r11.w
					          mul r10.xyz, r9, r10.w
					          add r8, r8, r11
					          add r5, r5, r10
					          add r0.z, r0.z, c5.x
					        endrep
					        mov r6, r5
					        mov r7, r8
					        if_lt -c10.w, r1.x
					          add_sat r0.x, r1.x, c10.w
					          mul r0.y, r1.x, c15.x
					          mov r3.zw, c5.y
					          mov r5, r6
					          mov r8, r7
					          mov r0.z, c15.y
					          rep i2
					            mov r1.y, c7.y
					            mad r0.w, r0.z, r1.y, c3.x
					            mul r1.yz, r0.w, r4.xxyw
					            mad r1.yz, r1, c6.x, c6
					            dp2add r0.w, r1.yzzw, c7.z, c7.w
					            mul r1.yz, r1, r0.w
					            frc r1.yz, r1
					            mad r1.yz, r1, c10.x, c10.y
					            add r9, r0.z, c16
					            add r10, r0.z, c17
					            add r11, r0.z, c18
					            add r12, r0.z, c19
					            add r13, r0.z, c20
					            add r14, r0.z, c21
					            cmp r4.zw, -r9_abs.x, c4.xyxy, c4.z
					            cmp r4.zw, -r9_abs.y, c15, r4
					            cmp r4.zw, -r9_abs.z, c25.xyxy, r4
					            cmp r4.zw, -r9_abs.w, c6.xywz, r4
					            cmp r4.zw, -r10_abs.x, c25.xyxz, r4
					            cmp r4.zw, -r10_abs.y, c26.xyxy, r4
					            cmp r4.zw, -r10_abs.z, c4.xyyx, r4
					            cmp r4.zw, -r10_abs.w, c26, r4
					            cmp r4.zw, -r11_abs.x, c22.xyxy, r4
					            cmp r4.zw, -r11_abs.y, c25, r4
					            cmp r4.zw, -r11_abs.z, c22, r4
					            cmp r4.zw, -r11_abs.w, c6, r4
					            cmp r4.zw, -r12_abs.x, c5.xyyx, r4
					            cmp r4.zw, -r12_abs.y, c27.xyxy, r4
					            cmp r4.zw, -r12_abs.z, c27, r4
					            cmp r4.zw, -r12_abs.w, c15.xywz, r4
					            cmp r4.zw, -r13_abs.x, -c26.xyzx, r4
					            cmp r4.zw, -r13_abs.y, c4.y, r4
					            cmp r4.zw, -r13_abs.z, c23.xyxy, r4
					            cmp r4.zw, -r13_abs.w, -c25.xywz, r4
					            cmp r4.zw, -r14_abs.x, c5.xyxy, r4
					            cmp r4.zw, -r14_abs.y, -c25.xywy, r4
					            cmp r4.zw, -r14_abs.z, c22.xyyx, r4
					            cmp r4.zw, -r14_abs.w, c4.xyyx, r4
					            mad r1.yz, r1, c6.y, r4.xzww
					            mul r1.yz, r0.y, r1
					            mad r3.xy, r1.yzzw, c1, v0
					            texldl r9, r3.xyww, s1
					            texldl r10, r3, s2
					            dp2add r0.w, r1.yzzw, r1.yzzw, c5.y
					            rsq r0.w, r0.w
					            rcp r0.w, r0.w
					            mad r0.w, r10.x, c4.w, -r0.w
					            add r0.w, r0.w, c6.y
					            mul_sat r0.w, r0.w, -c10.w
					            mul r0.w, r0.x, r0.w
					            add_sat r1.y, -r9.w, c2.z
					            mul r1.z, r10.y, r0.w
					            add r1.y, r1.y, c5.x
					            mad r11.w, r1.z, r1.y, c9.x
					            mad r10.w, r0.w, r10.z, c9.x
					            mul r11.xyz, r9, r11.w
					            mul r10.xyz, r9, r10.w
					            add r8, r8, r11
					            add r5, r5, r10
					            add r0.z, r0.z, c5.x
					          endrep
					          mov r6, r5
					          mov r7, r8
					        endif
					      endif
					      max r0.x, r1.x, c22.x
					      mul r0.x, r0.x, r0.x
					      mul r0.x, r0.x, r7.w
					      mul r0.x, r0.x, c23.z
					      mov_sat r0, r0.x
					      add r1.x, r6.w, c23.w
					      rcp r1.x, r1.x
					      mul r1.xyz, r1.x, r6
					      add r1.w, r7.w, c23.w
					      rcp r1.w, r1.w
					      mad r3.xyz, r7, r1.w, -r1
					      mad r2.xyz, r0.w, r3, r1
					      mov oC1, r0
					    endif
					    mov oC0, r2
					
					// approximately 241 instruction slots used (18 texture, 223 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _ScionResolutionParameters1;
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_3[6];
						vec4 _CoCParams1;
						vec4 unused_0_5[9];
						float _TemporalUVOffset;
					};
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _PresortTexture;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					layout(location = 1) out vec4 SV_Target1;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec2 u_xlat12;
					bool u_xlatb12;
					float u_xlat13;
					vec2 u_xlat24;
					float u_xlat36;
					void main()
					{
					    u_xlat0 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlatb12 = u_xlat0.x<1.0;
					    if(u_xlatb12){
					        SV_Target0 = u_xlat1;
					        SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
					        return;
					    }
					    u_xlat2 = textureLod(_PresortTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat12.x = (-u_xlat1.w) + _CoCParams1.z;
					    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
					    u_xlat12.x = u_xlat12.x + 1.0;
					    u_xlat3.w = u_xlat2.y * u_xlat12.x + 9.99999975e-05;
					    u_xlat2.w = u_xlat2.z + 9.99999975e-05;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat3.www;
					    u_xlat2.xyz = u_xlat1.xyz * u_xlat2.www;
					    u_xlat12.x = u_xlat0.x * 0.285714298;
					    u_xlat4 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(1.37, 2.74000001, 4.11000013, 5.48000002);
					    u_xlat5 = vs_TEXCOORD0.xyxy * _ScionResolutionParameters1.xyxy;
					    u_xlat6 = u_xlat4.xxyy * u_xlat5.zwzw;
					    u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat24.x = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat6.xy * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.25, 0.25) + vec2(0.707106829, -0.707106829);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat8.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat8.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat9.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat8.w = u_xlat24.x * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat3 = u_xlat3 + u_xlat9;
					    u_xlat2 = u_xlat2 + u_xlat8;
					    u_xlat24.x = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat6.zw * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.25, 0.25) + vec2(-1.0, 0.0);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat6.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat7.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat8.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat7.w = u_xlat24.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat6.xyz * u_xlat7.www;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat2 = u_xlat2 + u_xlat7;
					    u_xlat4 = u_xlat4.zzww * u_xlat5.zwzw;
					    u_xlat4 = u_xlat4 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat24.x = dot(u_xlat4.xy, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat4.xy * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.25, 0.25) + vec2(0.707106829, 0.707106829);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat6.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat7.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat8.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat7.w = u_xlat24.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat6.xyz * u_xlat7.www;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat2 = u_xlat2 + u_xlat7;
					    u_xlat24.x = dot(u_xlat4.zw, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat4.zw * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.25, 0.25) + vec2(0.0, -1.0);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat4 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat6 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat6.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat4.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat6.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat7.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat6.w = u_xlat24.x * u_xlat6.z + 0.00100000005;
					    u_xlat7.xyz = u_xlat4.xyz * u_xlat7.www;
					    u_xlat6.xyz = u_xlat4.xyz * u_xlat6.www;
					    u_xlat3 = u_xlat3 + u_xlat7;
					    u_xlat2 = u_xlat2 + u_xlat6;
					    u_xlat4 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(6.8499999, 8.22000027, 9.59000015, 10.96);
					    u_xlat6 = u_xlat4.xxyy * u_xlat5.zwzw;
					    u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat24.x = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat6.xy * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.25, 0.25) + vec2(0.0, 1.0);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat8.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat8.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat9.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat8.w = u_xlat24.x * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat3 = u_xlat3 + u_xlat9;
					    u_xlat2 = u_xlat2 + u_xlat8;
					    u_xlat24.x = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat6.zw * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.25, 0.25) + vec2(-0.707106829, -0.707106829);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat6.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat7.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat8.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat7.w = u_xlat24.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat6.xyz * u_xlat7.www;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat2 = u_xlat2 + u_xlat7;
					    u_xlat4 = u_xlat4.zzww * u_xlat5.zwzw;
					    u_xlat4 = u_xlat4 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat24.x = dot(u_xlat4.xy, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat4.xy * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.25, 0.25) + vec2(1.0, 0.0);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat6.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat7.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat8.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat7.w = u_xlat24.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat6.xyz * u_xlat7.www;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat2 = u_xlat2 + u_xlat7;
					    u_xlat24.x = dot(u_xlat4.zw, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat4.zw * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					    u_xlat12.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat12.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat4 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat6 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat12.x = dot(u_xlat12.xy, u_xlat12.xy);
					    u_xlat12.x = sqrt(u_xlat12.x);
					    u_xlat12.x = u_xlat6.x * 10.0 + (-u_xlat12.x);
					    u_xlat12.x = u_xlat12.x + 0.25;
					    u_xlat12.x = u_xlat12.x * 4.0;
					    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
					    u_xlat24.x = (-u_xlat4.w) + _CoCParams1.z;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = u_xlat6.y * u_xlat12.x;
					    u_xlat24.x = u_xlat24.x + 1.0;
					    u_xlat7.w = u_xlat36 * u_xlat24.x + 0.00100000005;
					    u_xlat6.w = u_xlat12.x * u_xlat6.z + 0.00100000005;
					    u_xlat7.xyz = u_xlat4.xyz * u_xlat7.www;
					    u_xlat6.xyz = u_xlat4.xyz * u_xlat6.www;
					    u_xlat3 = u_xlat3 + u_xlat7;
					    u_xlat2 = u_xlat2 + u_xlat6;
					    u_xlatb12 = 2.0<u_xlat0.x;
					    if(u_xlatb12){
					        u_xlat12.x = u_xlat0.x + -2.0;
					        u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
					        u_xlat24.x = u_xlat0.x * 0.571428478;
					        u_xlat4 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(12.3299999, 13.6999998, 15.0699997, 16.4400005);
					        u_xlat6 = u_xlat4.xxyy * u_xlat5.zwzw;
					        u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, -0.707106829);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat8.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat7 = u_xlat3 + u_xlat9;
					        u_xlat8 = u_xlat2 + u_xlat8;
					        u_xlat36 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.923879385, -0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat6.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat6.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat7 + u_xlat10;
					        u_xlat7 = u_xlat8 + u_xlat9;
					        u_xlat4 = u_xlat4.zzww * u_xlat5.zwzw;
					        u_xlat4 = u_xlat4 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat4.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat4.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-1.0, 0.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat7 = u_xlat7 + u_xlat9;
					        u_xlat36 = dot(u_xlat4.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat4.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.923879385, 0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					        u_xlat4 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat4.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat4.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat4.w = u_xlat36 * u_xlat4.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat4.xyz = u_xlat4.www * u_xlat8.xyz;
					        u_xlat6 = u_xlat6 + u_xlat9;
					        u_xlat4 = u_xlat4 + u_xlat7;
					        u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(17.8099995, 19.1800003, 20.5499992, 21.9200001);
					        u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, 0.707106829);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat10.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat6 = u_xlat6 + u_xlat11;
					        u_xlat4 = u_xlat4 + u_xlat10;
					        u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.382683486, -0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat7 = u_xlat5.zwzw * u_xlat7.zzww;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.382683396, 0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, -1.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat7 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat7.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat7.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat7.w = u_xlat36 * u_xlat7.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat7.xyz = u_xlat7.www * u_xlat8.xyz;
					        u_xlat6 = u_xlat6 + u_xlat9;
					        u_xlat4 = u_xlat4 + u_xlat7;
					        u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(23.2900009, 24.6599998, 26.0300007, 27.3999996);
					        u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, 1.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat10.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat6 = u_xlat6 + u_xlat11;
					        u_xlat4 = u_xlat4 + u_xlat10;
					        u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.382683396, -0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat7 = u_xlat5.zwzw * u_xlat7.zzww;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.382683486, 0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, -0.707106829);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat7 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat7.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat7.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat7.w = u_xlat36 * u_xlat7.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat7.xyz = u_xlat7.www * u_xlat8.xyz;
					        u_xlat6 = u_xlat6 + u_xlat9;
					        u_xlat4 = u_xlat4 + u_xlat7;
					        u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(28.7700005, 30.1399994, 31.5100002, 32.8800011);
					        u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.923879385, -0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat10.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat6 = u_xlat6 + u_xlat11;
					        u_xlat4 = u_xlat4 + u_xlat10;
					        u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(1.0, 0.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat7 = u_xlat5.zwzw * u_xlat7.zzww;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.923879385, 0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					        u_xlat24.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					        u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					        u_xlat24.x = sqrt(u_xlat24.x);
					        u_xlat24.x = u_xlat8.x * 10.0 + (-u_xlat24.x);
					        u_xlat24.x = u_xlat24.x + 0.25;
					        u_xlat24.x = u_xlat24.x * 4.0;
					        u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					        u_xlat12.x = u_xlat12.x * u_xlat24.x;
					        u_xlat24.x = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					        u_xlat36 = u_xlat8.y * u_xlat12.x;
					        u_xlat24.x = u_xlat24.x + 1.0;
					        u_xlat9.w = u_xlat36 * u_xlat24.x + 0.00100000005;
					        u_xlat8.w = u_xlat12.x * u_xlat8.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat3 = u_xlat6 + u_xlat9;
					        u_xlat2 = u_xlat4 + u_xlat8;
					        u_xlatb12 = 4.0<u_xlat0.x;
					        if(u_xlatb12){
					            u_xlat12.x = u_xlat0.x + -4.0;
					            u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
					            u_xlat24.x = u_xlat0.x * 0.857142925;
					            u_xlat4 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(34.25, 35.6199989, 36.9900017, 38.3600006);
					            u_xlat6 = u_xlat4.xxyy * u_xlat5.zwzw;
					            u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat6.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, -0.707106829);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					            u_xlat8 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat8.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					            u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					            u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					            u_xlat7 = u_xlat3 + u_xlat9;
					            u_xlat8 = u_xlat2 + u_xlat8;
					            u_xlat36 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat6.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.866025388, -0.499999911);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat6.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat6.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat7 + u_xlat10;
					            u_xlat7 = u_xlat8 + u_xlat9;
					            u_xlat4 = u_xlat4.zzww * u_xlat5.zwzw;
					            u_xlat4 = u_xlat4 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat4.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat4.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.965925872, -0.258819014);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat7 = u_xlat7 + u_xlat9;
					            u_xlat36 = dot(u_xlat4.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat4.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-1.0, 0.0);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					            u_xlat4 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat4.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat4.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat4.w = u_xlat36 * u_xlat4.z + 0.00100000005;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat4.xyz = u_xlat4.www * u_xlat8.xyz;
					            u_xlat6 = u_xlat6 + u_xlat9;
					            u_xlat4 = u_xlat4 + u_xlat7;
					            u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(39.7299995, 41.0999985, 42.4700012, 43.8400002);
					            u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.965925872, 0.258819014);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat10.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat6 = u_xlat6 + u_xlat11;
					            u_xlat4 = u_xlat4 + u_xlat10;
					            u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.866025388, 0.499999911);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat4 = u_xlat4 + u_xlat9;
					            u_xlat7 = u_xlat5.zwzw * u_xlat7.zzww;
					            u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat4 = u_xlat4 + u_xlat9;
					            u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.500000119, -0.866025329);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat7 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat7.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat7.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat7.w = u_xlat36 * u_xlat7.z + 0.00100000005;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat7.xyz = u_xlat7.www * u_xlat8.xyz;
					            u_xlat6 = u_xlat6 + u_xlat9;
					            u_xlat4 = u_xlat4 + u_xlat7;
					            u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(45.2099991, 46.5800018, 47.9500008, 49.3199997);
					            u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.5, 0.866025388);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat10.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat6 = u_xlat6 + u_xlat11;
					            u_xlat4 = u_xlat4 + u_xlat10;
					            u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.258819014, -0.965925813);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat4 = u_xlat4 + u_xlat9;
					            u_xlat7 = u_xlat5.zwzw * u_xlat7.zzww;
					            u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.258819103, 0.965925813);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat4 = u_xlat4 + u_xlat9;
					            u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, -1.0);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat7 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat7.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat7.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat7.w = u_xlat36 * u_xlat7.z + 0.00100000005;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat7.xyz = u_xlat7.www * u_xlat8.xyz;
					            u_xlat6 = u_xlat6 + u_xlat9;
					            u_xlat4 = u_xlat4 + u_xlat7;
					            u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(50.6899986, 52.0600014, 53.4300003, 54.7999992);
					            u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, 1.0);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat10.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat6 = u_xlat6 + u_xlat11;
					            u_xlat4 = u_xlat4 + u_xlat10;
					            u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.258818895, -0.965925813);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat4 = u_xlat4 + u_xlat9;
					            u_xlat7 = u_xlat5.zwzw * u_xlat7.zzww;
					            u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.258819193, 0.965925813);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat4 = u_xlat4 + u_xlat9;
					            u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.499999911, -0.866025388);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat7 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat7.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat7.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat7.w = u_xlat36 * u_xlat7.z + 0.00100000005;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat7.xyz = u_xlat7.www * u_xlat8.xyz;
					            u_xlat6 = u_xlat6 + u_xlat9;
					            u_xlat4 = u_xlat4 + u_xlat7;
					            u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(56.170002, 57.5400009, 58.9099998, 60.2799988);
					            u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.500000119, 0.866025388);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat10.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat6 = u_xlat6 + u_xlat11;
					            u_xlat4 = u_xlat4 + u_xlat10;
					            u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, -0.707106829);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat4 = u_xlat4 + u_xlat9;
					            u_xlat7 = u_xlat5.zwzw * u_xlat7.zzww;
					            u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.866025388, -0.5);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat4 = u_xlat4 + u_xlat9;
					            u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.965925813, -0.258819014);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat7 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat7.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat7.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat7.w = u_xlat36 * u_xlat7.z + 0.00100000005;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat7.xyz = u_xlat7.www * u_xlat8.xyz;
					            u_xlat6 = u_xlat6 + u_xlat9;
					            u_xlat4 = u_xlat4 + u_xlat7;
					            u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(61.6500015, 63.0200005, 64.3899994, 65.7600021);
					            u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(1.0, 0.0);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat10.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat6 = u_xlat6 + u_xlat11;
					            u_xlat4 = u_xlat4 + u_xlat10;
					            u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.965925813, 0.258819014);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat4 = u_xlat4 + u_xlat9;
					            u_xlat5 = u_xlat5 * u_xlat7.zzww;
					            u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.866025388, 0.5);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat8 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat8.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					            u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					            u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					            u_xlat6 = u_xlat6 + u_xlat9;
					            u_xlat4 = u_xlat4 + u_xlat8;
					            u_xlat36 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					            u_xlat24.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					            u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					            u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					            u_xlat24.x = sqrt(u_xlat24.x);
					            u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					            u_xlat24.x = u_xlat24.x + 0.25;
					            u_xlat24.x = u_xlat24.x * 4.0;
					            u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					            u_xlat12.x = u_xlat12.x * u_xlat24.x;
					            u_xlat24.x = (-u_xlat5.w) + _CoCParams1.z;
					            u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					            u_xlat36 = u_xlat7.y * u_xlat12.x;
					            u_xlat24.x = u_xlat24.x + 1.0;
					            u_xlat8.w = u_xlat36 * u_xlat24.x + 0.00100000005;
					            u_xlat7.w = u_xlat12.x * u_xlat7.z + 0.00100000005;
					            u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					            u_xlat7.xyz = u_xlat5.xyz * u_xlat7.www;
					            u_xlat3 = u_xlat6 + u_xlat8;
					            u_xlat2 = u_xlat4 + u_xlat7;
					        }
					    }
					    u_xlat0.x = max(u_xlat0.x, 0.5);
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat3.w;
					    u_xlat0.x = u_xlat0.x * 0.0641141385;
					    u_xlat0 = u_xlat0.xxxx;
					    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
					    u_xlat1.x = u_xlat2.w + 9.99999994e-09;
					    u_xlat1.xyz = u_xlat2.xyz / u_xlat1.xxx;
					    u_xlat2.x = u_xlat3.w + 9.99999994e-09;
					    u_xlat2.xyz = u_xlat3.xyz / u_xlat2.xxx;
					    u_xlat2.xyz = (-u_xlat1.xyz) + u_xlat2.xyz;
					    SV_Target0.xyz = u_xlat0.www * u_xlat2.xyz + u_xlat1.xyz;
					    SV_Target0.w = u_xlat1.w;
					    SV_Target1 = u_xlat0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" "SC_DOF_MASK_ON" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _CoCParams1;
					//   sampler2D _ExclusionMask;
					//   sampler2D _HalfResSourceDepthTexture;
					//   sampler2D _PresortTexture;
					//   float4 _ScionResolutionParameters1;
					//   float4 _ScionResolutionParameters2;
					//   float _TemporalUVOffset;
					//   sampler2D _TiledNeighbourhoodData;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters1 c0       1
					//   _ScionResolutionParameters2 c1       1
					//   _CoCParams1                 c2       1
					//   _TemporalUVOffset           c3       1
					//   _TiledNeighbourhoodData     s0       1
					//   _ExclusionMask              s1       1
					//   _HalfResSourceDepthTexture  s2       1
					//   _PresortTexture             s3       1
					//
					
					    ps_3_0
					    def c4, 0.707106829, -0.707106829, 0, 10
					    def c5, 1, 0, 9.99999975e-005, 0.285714298
					    def c6, 0, 1.37, 3571, 0
					    def c7, -5, -6, -7, -8
					    def c8, 0.00100000005, 0.571428478, 0, 9
					    def c9, 2, -1, -3, -4
					    def c10, -9, -10, -11, -12
					    def c11, -13, -14, -15, -16
					    def c12, -17, -18, -19, -20
					    def c13, -21, -22, -23, -24
					    def c14, 0.857142925, 25, -0.866025388, -0.499999911
					    def c15, -25, -26, -27, -28
					    def c16, -29, -30, -31, -32
					    def c17, -33, -34, -35, -36
					    def c18, -37, -38, -39, -40
					    def c19, -41, -42, -43, -44
					    def c20, -45, -46, -47, -48
					    def c21, 0.000231481477, 0.25, 0, -1
					    def c22, 0.5, 0.866025388, 0.258819103, 0.965925813
					    def c23, 0.866025388, -0.5, 0.0641141385, 9.99999994e-009
					    def c24, -0.923879385, -0.382683486, 0.382683486, -0.382683396
					    def c25, -0.965925872, -0.258819014, 0.258819014, -0.965925813
					    def c26, -0.866025388, 0.499999911, 0.500000119, -0.866025329
					    def c27, -0.258818895, -0.965925813, -0.258819193, 0.965925813
					    defi i0, 8, 0, 0, 0
					    defi i1, 16, 0, 0, 0
					    defi i2, 24, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    dcl_2d s3
					    mul r0, c5.xxyy, v0.xyxx
					    texldl r1, r0, s0
					    texldl r2, r0, s2
					    texldl r3, r0, s1
					    mul r1.y, r1.x, r3.x
					    if_lt r1.y, c5.x
					      mov oC1, c5.y
					    else
					      texldl r0, r0, s3
					      add_sat r0.x, -r2.w, c2.z
					      add r0.x, r0.x, c5.x
					      mad r0.x, r0.y, r0.x, c5.z
					      add r0.y, r0.z, c5.z
					      mul r3.yzw, r0.x, r2.xxyz
					      mul r4.xyz, r0.y, r2
					      mul r0.z, r1.y, c5.w
					      mul r1.zw, c0.xyxy, v0.xyxy
					      mov r5.zw, c5.y
					      mov r6.xyz, r4
					      mov r6.w, r0.y
					      mov r7.xyz, r3.yzww
					      mov r7.w, r0.x
					      mov r0.w, c5.x
					      rep i0
					        mov r8.y, c6.y
					        mad r4.w, r0.w, r8.y, c3.x
					        mul r8.xy, r1.zwzw, r4.w
					        mad r8.xy, r8, c21.x, c21.yzzw
					        dp2add r4.w, r8, c6.z, c6.w
					        mul r8.xy, r8, r4.w
					        frc r8.xy, r8
					        mad r8.xy, r8, c9.x, c9.y
					        add r9, r0.w, -c9_abs.yxzw
					        add r10, r0.w, c7
					        cmp r8.zw, -r9_abs.x, c4.xyxy, c4.z
					        cmp r8.zw, -r9_abs.y, c21.xywz, r8
					        cmp r8.zw, -r9_abs.z, c4.x, r8
					        cmp r8.zw, -r9_abs.w, c21, r8
					        cmp r8.zw, -r10_abs.x, c5.xyyx, r8
					        cmp r8.zw, -r10_abs.y, c4.y, r8
					        cmp r8.zw, -r10_abs.z, c5.xyxy, r8
					        cmp r8.zw, -r10_abs.w, c4.xyyx, r8
					        mad r8.xy, r8, c21.y, r8.zwzw
					        mul r8.xy, r0.z, r8
					        mad r5.xy, r8, c1, v0
					        texldl r9, r5.xyww, s2
					        texldl r10, r5.xyww, s3
					        dp2add r4.w, r8, r8, c5.y
					        rsq r4.w, r4.w
					        rcp r4.w, r4.w
					        mad r4.w, r10.x, c4.w, -r4.w
					        add r4.w, r4.w, c21.y
					        mul_sat r4.w, r4.w, -c9.w
					        add_sat r8.x, -r9.w, c2.z
					        mul r8.y, r10.y, r4.w
					        add r8.x, r8.x, c5.x
					        mad r8.w, r8.y, r8.x, c8.x
					        mad r10.w, r4.w, r10.z, c8.x
					        mul r8.xyz, r8.w, r9
					        mul r10.xyz, r9, r10.w
					        texldl r9, r5, s1
					        mad r7, r8, r9.x, r7
					        mad r6, r10, r9.x, r6
					        add r0.w, r0.w, c5.x
					      endrep
					      if_lt c9.x, r1.y
					        mad_sat r0.x, r1.x, r3.x, -c9.x
					        mul r0.y, r1.y, c8.y
					        mov r4.zw, c5.y
					        mov r5, r6
					        mov r8, r7
					        mov r0.z, c8.w
					        rep i1
					          mov r3.y, c6.y
					          mad r0.w, r0.z, r3.y, c3.x
					          mul r3.yz, r0.w, r1.xzww
					          mad r3.yz, r3, c21.x, c21
					          dp2add r0.w, r3.yzzw, c6.z, c6.w
					          mul r3.yz, r3, r0.w
					          frc r3.yz, r3
					          mad r3.yz, r3, c9.x, c9.y
					          add r9, r0.z, c10
					          add r10, r0.z, c11
					          add r11, r0.z, c12
					          add r12, r0.z, c13
					          cmp r13.xy, -r9_abs.x, c4, c4.z
					          cmp r9.xy, -r9_abs.y, c24, r13
					          cmp r9.xy, -r9_abs.z, c21.wzzw, r9
					          cmp r9.xy, -r9_abs.w, c24.xzzw, r9
					          cmp r9.xy, -r10_abs.x, c4.x, r9
					          cmp r9.xy, -r10_abs.y, c24.zxzw, r9
					          cmp r9.xy, -r10_abs.z, -c24.wxzw, r9
					          cmp r9.xy, -r10_abs.w, c21.zwzw, r9
					          cmp r9.xy, -r11_abs.x, c5.yxzw, r9
					          cmp r9.xy, -r11_abs.y, c24.wxzw, r9
					          cmp r9.xy, -r11_abs.z, -c24.zxzw, r9
					          cmp r9.xy, -r11_abs.w, c4.y, r9
					          cmp r9.xy, -r12_abs.x, -c24.xzzw, r9
					          cmp r9.xy, -r12_abs.y, c5, r9
					          cmp r9.xy, -r12_abs.z, -c24, r9
					          cmp r9.xy, -r12_abs.w, c4.yxzw, r9
					          mad r3.yz, r3, c21.y, r9.xxyw
					          mul r3.yz, r0.y, r3
					          mad r4.xy, r3.yzzw, c1, v0
					          texldl r9, r4.xyww, s2
					          texldl r10, r4.xyww, s3
					          dp2add r0.w, r3.yzzw, r3.yzzw, c5.y
					          rsq r0.w, r0.w
					          rcp r0.w, r0.w
					          mad r0.w, r10.x, c4.w, -r0.w
					          add r0.w, r0.w, c21.y
					          mul_sat r0.w, r0.w, -c9.w
					          mul r0.w, r0.x, r0.w
					          add_sat r3.y, -r9.w, c2.z
					          mul r3.z, r10.y, r0.w
					          add r3.y, r3.y, c5.x
					          mad r11.w, r3.z, r3.y, c8.x
					          mad r10.w, r0.w, r10.z, c8.x
					          mul r11.xyz, r9, r11.w
					          mul r10.xyz, r9, r10.w
					          texldl r9, r4, s1
					          mad r8, r11, r9.x, r8
					          mad r5, r10, r9.x, r5
					          add r0.z, r0.z, c5.x
					        endrep
					        mov r6, r5
					        mov r7, r8
					        if_lt -c9.w, r1.y
					          mad_sat r0.x, r1.x, r3.x, c9.w
					          mul r0.y, r1.y, c14.x
					          mov r3.zw, c5.y
					          mov r4, r6
					          mov r5, r7
					          mov r0.z, c14.y
					          rep i2
					            mov r8.y, c6.y
					            mad r0.w, r0.z, r8.y, c3.x
					            mul r8.xy, r0.w, r1.zwzw
					            mad r8.xy, r8, c21.x, c21.yzzw
					            dp2add r0.w, r8, c6.z, c6.w
					            mul r8.xy, r8, r0.w
					            frc r8.xy, r8
					            mad r8.xy, r8, c9.x, c9.y
					            add r9, r0.z, c15
					            add r10, r0.z, c16
					            add r11, r0.z, c17
					            add r12, r0.z, c18
					            add r13, r0.z, c19
					            add r14, r0.z, c20
					            cmp r8.zw, -r9_abs.x, c4.xyxy, c4.z
					            cmp r8.zw, -r9_abs.y, c14, r8
					            cmp r8.zw, -r9_abs.z, c25.xyxy, r8
					            cmp r8.zw, -r9_abs.w, c21.xywz, r8
					            cmp r8.zw, -r10_abs.x, c25.xyxz, r8
					            cmp r8.zw, -r10_abs.y, c26.xyxy, r8
					            cmp r8.zw, -r10_abs.z, c4.xyyx, r8
					            cmp r8.zw, -r10_abs.w, c26, r8
					            cmp r8.zw, -r11_abs.x, c22.xyxy, r8
					            cmp r8.zw, -r11_abs.y, c25, r8
					            cmp r8.zw, -r11_abs.z, c22, r8
					            cmp r8.zw, -r11_abs.w, c21, r8
					            cmp r8.zw, -r12_abs.x, c5.xyyx, r8
					            cmp r8.zw, -r12_abs.y, c27.xyxy, r8
					            cmp r8.zw, -r12_abs.z, c27, r8
					            cmp r8.zw, -r12_abs.w, c14.xywz, r8
					            cmp r8.zw, -r13_abs.x, -c26.xyzx, r8
					            cmp r8.zw, -r13_abs.y, c4.y, r8
					            cmp r8.zw, -r13_abs.z, c23.xyxy, r8
					            cmp r8.zw, -r13_abs.w, -c25.xywz, r8
					            cmp r8.zw, -r14_abs.x, c5.xyxy, r8
					            cmp r8.zw, -r14_abs.y, -c25.xywy, r8
					            cmp r8.zw, -r14_abs.z, c22.xyyx, r8
					            cmp r8.zw, -r14_abs.w, c4.xyyx, r8
					            mad r8.xy, r8, c21.y, r8.zwzw
					            mul r8.xy, r0.y, r8
					            mad r3.xy, r8, c1, v0
					            texldl r9, r3.xyww, s2
					            texldl r10, r3.xyww, s3
					            dp2add r0.w, r8, r8, c5.y
					            rsq r0.w, r0.w
					            rcp r0.w, r0.w
					            mad r0.w, r10.x, c4.w, -r0.w
					            add r0.w, r0.w, c21.y
					            mul_sat r0.w, r0.w, -c9.w
					            mul r0.w, r0.x, r0.w
					            add_sat r1.x, -r9.w, c2.z
					            mul r8.x, r10.y, r0.w
					            add r1.x, r1.x, c5.x
					            mad r8.w, r8.x, r1.x, c8.x
					            mad r10.w, r0.w, r10.z, c8.x
					            mul r8.xyz, r8.w, r9
					            mul r10.xyz, r9, r10.w
					            texldl r9, r3, s1
					            mad r5, r8, r9.x, r5
					            mad r4, r10, r9.x, r4
					            add r0.z, r0.z, c5.x
					          endrep
					          mov r6, r4
					          mov r7, r5
					        endif
					      endif
					      max r0.x, r1.y, c22.x
					      mul r0.x, r0.x, r0.x
					      mul r0.x, r0.x, r7.w
					      mul r0.x, r0.x, c23.z
					      mov_sat r0, r0.x
					      add r1.x, r6.w, c23.w
					      rcp r1.x, r1.x
					      mul r1.xyz, r1.x, r6
					      add r1.w, r7.w, c23.w
					      rcp r1.w, r1.w
					      mad r3.xyz, r7, r1.w, -r1
					      mad r2.xyz, r0.w, r3, r1
					      mov oC1, r0
					    endif
					    mov oC0, r2
					
					// approximately 250 instruction slots used (26 texture, 224 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" "SC_DOF_MASK_ON" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _ScionResolutionParameters1;
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_3[6];
						vec4 _CoCParams1;
						vec4 unused_0_5[9];
						float _TemporalUVOffset;
					};
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _ExclusionMask;
					uniform  sampler2D _PresortTexture;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					layout(location = 1) out vec4 SV_Target1;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec4 u_xlat12;
					float u_xlat13;
					float u_xlat14;
					vec2 u_xlat15;
					vec2 u_xlat26;
					bool u_xlatb26;
					float u_xlat27;
					float u_xlat39;
					void main()
					{
					    u_xlat0 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat2 = textureLod(_ExclusionMask, vs_TEXCOORD0.xy, 0.0);
					    u_xlat13 = u_xlat0.x * u_xlat2.x;
					    u_xlatb26 = u_xlat13<1.0;
					    if(u_xlatb26){
					        SV_Target0 = u_xlat1;
					        SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
					        return;
					    }
					    u_xlat3 = textureLod(_PresortTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat26.x = (-u_xlat1.w) + _CoCParams1.z;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat26.x = u_xlat26.x + 1.0;
					    u_xlat4.w = u_xlat3.y * u_xlat26.x + 9.99999975e-05;
					    u_xlat3.w = u_xlat3.z + 9.99999975e-05;
					    u_xlat4.xyz = u_xlat1.xyz * u_xlat4.www;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat3.www;
					    u_xlat26.x = u_xlat13 * 0.285714298;
					    u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(1.37, 2.74000001, 4.11000013, 5.48000002);
					    u_xlat6 = vs_TEXCOORD0.xyxy * _ScionResolutionParameters1.xyxy;
					    u_xlat7 = u_xlat5.xxyy * u_xlat6.zwzw;
					    u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat39 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat7.xy * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, -0.707106829);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat9.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat4 = u_xlat10 * u_xlat8.xxxx + u_xlat4;
					    u_xlat3 = u_xlat9 * u_xlat8.xxxx + u_xlat3;
					    u_xlat39 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat7.zw * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-1.0, 0.0);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat8.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat9.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat8.w = u_xlat39 * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat7 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat4 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					    u_xlat3 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					    u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					    u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat39 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat5.xy * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, 0.707106829);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat8.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat9.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat8.w = u_xlat39 * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat7 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat4 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					    u_xlat3 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					    u_xlat39 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat5.zw * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, -1.0);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat7.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat5.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat7.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat8.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat7.w = u_xlat39 * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat5.xyz * u_xlat7.www;
					    u_xlat5 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat4 = u_xlat8 * u_xlat5.xxxx + u_xlat4;
					    u_xlat3 = u_xlat7 * u_xlat5.xxxx + u_xlat3;
					    u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(6.8499999, 8.22000027, 9.59000015, 10.96);
					    u_xlat7 = u_xlat5.xxyy * u_xlat6.zwzw;
					    u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat39 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat7.xy * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, 1.0);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat9.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat4 = u_xlat10 * u_xlat8.xxxx + u_xlat4;
					    u_xlat3 = u_xlat9 * u_xlat8.xxxx + u_xlat3;
					    u_xlat39 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat7.zw * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, -0.707106829);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat8.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat9.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat8.w = u_xlat39 * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat7 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat4 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					    u_xlat3 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					    u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					    u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat39 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat5.xy * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(1.0, 0.0);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat8.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat9.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat8.w = u_xlat39 * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat7 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat4 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					    u_xlat3 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					    u_xlat39 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat5.zw * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					    u_xlat26.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					    u_xlat26.x = sqrt(u_xlat26.x);
					    u_xlat26.x = u_xlat7.x * 10.0 + (-u_xlat26.x);
					    u_xlat26.x = u_xlat26.x + 0.25;
					    u_xlat26.x = u_xlat26.x * 4.0;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat39 = (-u_xlat5.w) + _CoCParams1.z;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat27 = u_xlat7.y * u_xlat26.x;
					    u_xlat39 = u_xlat39 + 1.0;
					    u_xlat8.w = u_xlat27 * u_xlat39 + 0.00100000005;
					    u_xlat7.w = u_xlat26.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat5.xyz * u_xlat7.www;
					    u_xlat5 = textureLod(_ExclusionMask, u_xlat1.xy, 0.0);
					    u_xlat4 = u_xlat8 * u_xlat5.xxxx + u_xlat4;
					    u_xlat3 = u_xlat7 * u_xlat5.xxxx + u_xlat3;
					    u_xlatb26 = 2.0<u_xlat13;
					    if(u_xlatb26){
					        u_xlat26.x = u_xlat0.x * u_xlat2.x + -2.0;
					        u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					        u_xlat39 = u_xlat13 * 0.571428478;
					        u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(12.3299999, 13.6999998, 15.0699997, 16.4400005);
					        u_xlat7 = u_xlat5.xxyy * u_xlat6.zwzw;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, -0.707106829);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat9.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat9.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat10.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat9.w = u_xlat1.x * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat10 = u_xlat10 * u_xlat8.xxxx + u_xlat4;
					        u_xlat8 = u_xlat9 * u_xlat8.xxxx + u_xlat3;
					        u_xlat1.x = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.923879385, -0.382683486);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat9.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat9.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat11.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat9.w = u_xlat1.x * u_xlat9.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat7.xyz * u_xlat11.www;
					        u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					        u_xlat7 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat10 = u_xlat11 * u_xlat7.xxxx + u_xlat10;
					        u_xlat7 = u_xlat9 * u_xlat7.xxxx + u_xlat8;
					        u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					        u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-1.0, 0.0);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat9.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat9.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat11.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat9.w = u_xlat1.x * u_xlat9.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat10 = u_xlat11 * u_xlat8.xxxx + u_xlat10;
					        u_xlat7 = u_xlat9 * u_xlat8.xxxx + u_xlat7;
					        u_xlat1.x = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.923879385, 0.382683486);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat8.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat5.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat8.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat9.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat8.w = u_xlat1.x * u_xlat8.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat5.xyz * u_xlat9.www;
					        u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					        u_xlat5 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat9 * u_xlat5.xxxx + u_xlat10;
					        u_xlat5 = u_xlat8 * u_xlat5.xxxx + u_xlat7;
					        u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(17.8099995, 19.1800003, 20.5499992, 21.9200001);
					        u_xlat8 = u_xlat6.zwzw * u_xlat7.xxyy;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, 0.707106829);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat11.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat10.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat11.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat12.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat11.w = u_xlat1.x * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					        u_xlat10 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat12 * u_xlat10.xxxx + u_xlat9;
					        u_xlat5 = u_xlat11 * u_xlat10.xxxx + u_xlat5;
					        u_xlat1.x = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.382683486, -0.923879385);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat10.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat10.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat11.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat10.w = u_xlat1.x * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat11 * u_xlat8.xxxx + u_xlat9;
					        u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					        u_xlat7 = u_xlat6.zwzw * u_xlat7.zzww;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.382683396, 0.923879385);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat10.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat10.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat11.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat10.w = u_xlat1.x * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat11 * u_xlat8.xxxx + u_xlat9;
					        u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					        u_xlat1.x = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, -1.0);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat8.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat8.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat10.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat8.w = u_xlat1.x * u_xlat8.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat7.xyz * u_xlat10.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat7 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat10 * u_xlat7.xxxx + u_xlat9;
					        u_xlat5 = u_xlat8 * u_xlat7.xxxx + u_xlat5;
					        u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(23.2900009, 24.6599998, 26.0300007, 27.3999996);
					        u_xlat8 = u_xlat6.zwzw * u_xlat7.xxyy;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, 1.0);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat11.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat10.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat11.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat12.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat11.w = u_xlat1.x * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					        u_xlat10 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat12 * u_xlat10.xxxx + u_xlat9;
					        u_xlat5 = u_xlat11 * u_xlat10.xxxx + u_xlat5;
					        u_xlat1.x = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.382683396, -0.923879385);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat10.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat10.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat11.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat10.w = u_xlat1.x * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat11 * u_xlat8.xxxx + u_xlat9;
					        u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					        u_xlat7 = u_xlat6.zwzw * u_xlat7.zzww;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.382683486, 0.923879385);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat10.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat10.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat11.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat10.w = u_xlat1.x * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat11 * u_xlat8.xxxx + u_xlat9;
					        u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					        u_xlat1.x = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, -0.707106829);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat8.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat8.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat10.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat8.w = u_xlat1.x * u_xlat8.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat7.xyz * u_xlat10.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat7 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat10 * u_xlat7.xxxx + u_xlat9;
					        u_xlat5 = u_xlat8 * u_xlat7.xxxx + u_xlat5;
					        u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(28.7700005, 30.1399994, 31.5100002, 32.8800011);
					        u_xlat8 = u_xlat6.zwzw * u_xlat7.xxyy;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.923879385, -0.382683486);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat11.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat10.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat11.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat12.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat11.w = u_xlat1.x * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					        u_xlat10 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat12 * u_xlat10.xxxx + u_xlat9;
					        u_xlat5 = u_xlat11 * u_xlat10.xxxx + u_xlat5;
					        u_xlat1.x = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(1.0, 0.0);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat10.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat10.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat11.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat10.w = u_xlat1.x * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat11 * u_xlat8.xxxx + u_xlat9;
					        u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					        u_xlat7 = u_xlat6.zwzw * u_xlat7.zzww;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.923879385, 0.382683486);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat10.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat10.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat11.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat10.w = u_xlat1.x * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat11 * u_xlat8.xxxx + u_xlat9;
					        u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					        u_xlat1.x = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat26.x = u_xlat26.x * u_xlat39;
					        u_xlat39 = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat1.x = u_xlat8.y * u_xlat26.x;
					        u_xlat39 = u_xlat39 + 1.0;
					        u_xlat10.w = u_xlat1.x * u_xlat39 + 0.00100000005;
					        u_xlat8.w = u_xlat26.x * u_xlat8.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat7.xyz * u_xlat10.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat7 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat4 = u_xlat10 * u_xlat7.xxxx + u_xlat9;
					        u_xlat3 = u_xlat8 * u_xlat7.xxxx + u_xlat5;
					        u_xlatb26 = 4.0<u_xlat13;
					        if(u_xlatb26){
					            u_xlat0.x = u_xlat0.x * u_xlat2.x + -4.0;
					            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					            u_xlat26.x = u_xlat13 * 0.857142925;
					            u_xlat2 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(34.25, 35.6199989, 36.9900017, 38.3600006);
					            u_xlat5 = u_xlat2.xxyy * u_xlat6.zwzw;
					            u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, -0.707106829);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					            u_xlat8 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat8.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat9.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat8.w = u_xlat39 * u_xlat8.z + 0.00100000005;
					            u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					            u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					            u_xlat7 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					            u_xlat9 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					            u_xlat7 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					            u_xlat39 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.866025388, -0.499999911);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					            u_xlat8 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat5.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat8.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat8.w = u_xlat39 * u_xlat8.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat5.xyz * u_xlat10.www;
					            u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					            u_xlat5 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					            u_xlat9 = u_xlat10 * u_xlat5.xxxx + u_xlat9;
					            u_xlat5 = u_xlat8 * u_xlat5.xxxx + u_xlat7;
					            u_xlat2 = u_xlat2.zzww * u_xlat6.zwzw;
					            u_xlat2 = u_xlat2 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat2.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat2.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.965925872, -0.258819014);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					            u_xlat8 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat8.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat8.w = u_xlat39 * u_xlat8.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat7.xyz * u_xlat10.www;
					            u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					            u_xlat7 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					            u_xlat9 = u_xlat10 * u_xlat7.xxxx + u_xlat9;
					            u_xlat5 = u_xlat8 * u_xlat7.xxxx + u_xlat5;
					            u_xlat39 = dot(u_xlat2.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat2.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-1.0, 0.0);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					            u_xlat8 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat8.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat8.w = u_xlat39 * u_xlat8.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat7.xyz * u_xlat10.www;
					            u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					            u_xlat2 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat2.xxxx + u_xlat9;
					            u_xlat2 = u_xlat8 * u_xlat2.xxxx + u_xlat5;
					            u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(39.7299995, 41.0999985, 42.4700012, 43.8400002);
					            u_xlat8 = u_xlat5.xxyy * u_xlat6.zwzw;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.965925872, 0.258819014);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat9 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat11 * u_xlat9.xxxx + u_xlat7;
					            u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.866025388, 0.499999911);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					            u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					            u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.500000119, -0.866025329);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat5 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat5.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat5.xxxx + u_xlat2;
					            u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(45.2099991, 46.5800018, 47.9500008, 49.3199997);
					            u_xlat8 = u_xlat5.xxyy * u_xlat6.zwzw;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.5, 0.866025388);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat9 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat11 * u_xlat9.xxxx + u_xlat7;
					            u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.258819014, -0.965925813);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					            u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					            u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.258819103, 0.965925813);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, -1.0);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat5 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat5.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat5.xxxx + u_xlat2;
					            u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(50.6899986, 52.0600014, 53.4300003, 54.7999992);
					            u_xlat8 = u_xlat5.xxyy * u_xlat6.zwzw;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, 1.0);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat9 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat11 * u_xlat9.xxxx + u_xlat7;
					            u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.258818895, -0.965925813);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					            u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					            u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.258819193, 0.965925813);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.499999911, -0.866025388);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat5 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat5.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat5.xxxx + u_xlat2;
					            u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(56.170002, 57.5400009, 58.9099998, 60.2799988);
					            u_xlat8 = u_xlat5.xxyy * u_xlat6.zwzw;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.500000119, 0.866025388);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat9 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat11 * u_xlat9.xxxx + u_xlat7;
					            u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, -0.707106829);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					            u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					            u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.866025388, -0.5);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.965925813, -0.258819014);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat5 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat5.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat5.xxxx + u_xlat2;
					            u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(61.6500015, 63.0200005, 64.3899994, 65.7600021);
					            u_xlat8 = u_xlat5.xxyy * u_xlat6.zwzw;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(1.0, 0.0);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat9 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat11 * u_xlat9.xxxx + u_xlat7;
					            u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.965925813, 0.258819014);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					            u_xlat5 = u_xlat5.zzww * u_xlat6;
					            u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.866025388, 0.5);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat8 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat6.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat8.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat9.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat8.w = u_xlat39 * u_xlat8.z + 0.00100000005;
					            u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					            u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					            u_xlat6 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat9 * u_xlat6.xxxx + u_xlat7;
					            u_xlat2 = u_xlat8 * u_xlat6.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					            u_xlat26.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					            u_xlat6 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					            u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					            u_xlat26.x = sqrt(u_xlat26.x);
					            u_xlat26.x = u_xlat6.x * 10.0 + (-u_xlat26.x);
					            u_xlat26.x = u_xlat26.x + 0.25;
					            u_xlat26.x = u_xlat26.x * 4.0;
					            u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					            u_xlat0.x = u_xlat0.x * u_xlat26.x;
					            u_xlat26.x = (-u_xlat5.w) + _CoCParams1.z;
					            u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					            u_xlat39 = u_xlat6.y * u_xlat0.x;
					            u_xlat26.x = u_xlat26.x + 1.0;
					            u_xlat8.w = u_xlat39 * u_xlat26.x + 0.00100000005;
					            u_xlat6.w = u_xlat0.x * u_xlat6.z + 0.00100000005;
					            u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					            u_xlat6.xyz = u_xlat5.xyz * u_xlat6.www;
					            u_xlat5 = textureLod(_ExclusionMask, u_xlat1.xy, 0.0);
					            u_xlat4 = u_xlat8 * u_xlat5.xxxx + u_xlat7;
					            u_xlat3 = u_xlat6 * u_xlat5.xxxx + u_xlat2;
					        }
					    }
					    u_xlat0.x = max(u_xlat13, 0.5);
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat4.w;
					    u_xlat0.x = u_xlat0.x * 0.0641141385;
					    u_xlat0 = u_xlat0.xxxx;
					    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.w + 9.99999994e-09;
					    u_xlat1.xyz = u_xlat3.xyz / u_xlat1.xxx;
					    u_xlat2.x = u_xlat4.w + 9.99999994e-09;
					    u_xlat2.xyz = u_xlat4.xyz / u_xlat2.xxx;
					    u_xlat2.xyz = (-u_xlat1.xyz) + u_xlat2.xyz;
					    SV_Target0.xyz = u_xlat0.www * u_xlat2.xyz + u_xlat1.xyz;
					    SV_Target0.w = u_xlat1.w;
					    SV_Target1 = u_xlat0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _CoCParams1;
					//   sampler2D _HalfResSourceDepthTexture;
					//   sampler2D _PresortTexture;
					//   float4 _ScionResolutionParameters1;
					//   float4 _ScionResolutionParameters2;
					//   float _TemporalUVOffset;
					//   sampler2D _TiledNeighbourhoodData;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters1 c0       1
					//   _ScionResolutionParameters2 c1       1
					//   _CoCParams1                 c2       1
					//   _TemporalUVOffset           c3       1
					//   _TiledNeighbourhoodData     s0       1
					//   _HalfResSourceDepthTexture  s1       1
					//   _PresortTexture             s2       1
					//
					
					    ps_3_0
					    def c4, 0.707106829, -0.707106829, 0, 10
					    def c5, 1, 0, 9.99999975e-005, 0.285714298
					    def c6, 0.000231481477, 0.25, 0, -1
					    def c7, 0, 1.37, 3571, 0
					    def c8, -5, -6, -7, -8
					    def c9, 0.00100000005, 0.571428478, 0, 9
					    def c10, 2, -1, -3, -4
					    def c11, -9, -10, -11, -12
					    def c12, -13, -14, -15, -16
					    def c13, -17, -18, -19, -20
					    def c14, -21, -22, -23, -24
					    def c15, 0.857142925, 25, -0.866025388, -0.499999911
					    def c16, -25, -26, -27, -28
					    def c17, -29, -30, -31, -32
					    def c18, -33, -34, -35, -36
					    def c19, -37, -38, -39, -40
					    def c20, -41, -42, -43, -44
					    def c21, -45, -46, -47, -48
					    def c22, 0.5, 0.866025388, 0.258819103, 0.965925813
					    def c23, 0.866025388, -0.5, 0.0641141385, 9.99999994e-009
					    def c24, -0.923879385, -0.382683486, 0.382683486, -0.382683396
					    def c25, -0.965925872, -0.258819014, 0.258819014, -0.965925813
					    def c26, -0.866025388, 0.499999911, 0.500000119, -0.866025329
					    def c27, -0.258818895, -0.965925813, -0.258819193, 0.965925813
					    defi i0, 8, 0, 0, 0
					    defi i1, 16, 0, 0, 0
					    defi i2, 24, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    mul r0, c5.xxyy, v0.xyxx
					    texldl r1, r0, s0
					    texldl r2, r0, s1
					    if_lt r1.x, c5.x
					      mov oC1, c5.y
					    else
					      texldl r0, r0, s2
					      add_sat r0.x, -r2.w, c2.z
					      add r0.x, r0.x, c5.x
					      mad r0.x, r0.y, r0.x, c5.z
					      add r0.y, r0.z, c5.z
					      mul r1.yzw, r0.x, r2.xxyz
					      mul r3.xyz, r0.y, r2
					      mul r0.z, r1.x, c5.w
					      mul r4.xy, c0, v0
					      mov r5.zw, c5.y
					      mov r6.xyz, r3
					      mov r6.w, r0.y
					      mov r7.xyz, r1.yzww
					      mov r7.w, r0.x
					      mov r0.w, c5.x
					      rep i0
					        mov r8.y, c7.y
					        mad r3.w, r0.w, r8.y, c3.x
					        mul r4.zw, r3.w, r4.xyxy
					        mad r4.zw, r4, c6.x, c6.xyyz
					        dp2add r3.w, r4.zwzw, c7.z, c7.w
					        mul r4.zw, r4, r3.w
					        frc r4.zw, r4
					        mad r4.zw, r4, c10.x, c10.y
					        add r8, r0.w, -c10_abs.yxzw
					        add r9, r0.w, c8
					        cmp r10.xy, -r8_abs.x, c4, c4.z
					        cmp r8.xy, -r8_abs.y, c6.wzzw, r10
					        cmp r8.xy, -r8_abs.z, c4.x, r8
					        cmp r8.xy, -r8_abs.w, c6.zwzw, r8
					        cmp r8.xy, -r9_abs.x, c5.yxzw, r8
					        cmp r8.xy, -r9_abs.y, c4.y, r8
					        cmp r8.xy, -r9_abs.z, c5, r8
					        cmp r8.xy, -r9_abs.w, c4.yxzw, r8
					        mad r4.zw, r4, c6.y, r8.xyxy
					        mul r4.zw, r0.z, r4
					        mad r5.xy, r4.zwzw, c1, v0
					        texldl r8, r5.xyww, s1
					        texldl r9, r5, s2
					        dp2add r3.w, r4.zwzw, r4.zwzw, c5.y
					        rsq r3.w, r3.w
					        rcp r3.w, r3.w
					        mad r3.w, r9.x, c4.w, -r3.w
					        add r3.w, r3.w, c6.y
					        mul_sat r3.w, r3.w, -c10.w
					        add_sat r4.z, -r8.w, c2.z
					        mul r4.w, r9.y, r3.w
					        add r4.z, r4.z, c5.x
					        mad r10.w, r4.w, r4.z, c9.x
					        mad r9.w, r3.w, r9.z, c9.x
					        mul r10.xyz, r8, r10.w
					        mul r9.xyz, r8, r9.w
					        add r7, r7, r10
					        add r6, r6, r9
					        add r0.w, r0.w, c5.x
					      endrep
					      if_lt c10.x, r1.x
					        add_sat r0.x, r1.x, -c10.x
					        mul r0.y, r1.x, c9.y
					        mov r3.zw, c5.y
					        mov r5, r6
					        mov r8, r7
					        mov r0.z, c9.w
					        rep i1
					          mov r1.y, c7.y
					          mad r0.w, r0.z, r1.y, c3.x
					          mul r1.yz, r0.w, r4.xxyw
					          mad r1.yz, r1, c6.x, c6
					          dp2add r0.w, r1.yzzw, c7.z, c7.w
					          mul r1.yz, r1, r0.w
					          frc r1.yz, r1
					          mad r1.yz, r1, c10.x, c10.y
					          add r9, r0.z, c11
					          add r10, r0.z, c12
					          add r11, r0.z, c13
					          add r12, r0.z, c14
					          cmp r4.zw, -r9_abs.x, c4.xyxy, c4.z
					          cmp r4.zw, -r9_abs.y, c24.xyxy, r4
					          cmp r4.zw, -r9_abs.z, c6.xywz, r4
					          cmp r4.zw, -r9_abs.w, c24.xyxz, r4
					          cmp r4.zw, -r10_abs.x, c4.x, r4
					          cmp r4.zw, -r10_abs.y, c24.xyzx, r4
					          cmp r4.zw, -r10_abs.z, -c24.xywx, r4
					          cmp r4.zw, -r10_abs.w, c6, r4
					          cmp r4.zw, -r11_abs.x, c5.xyyx, r4
					          cmp r4.zw, -r11_abs.y, c24.xywx, r4
					          cmp r4.zw, -r11_abs.z, -c24.xyzx, r4
					          cmp r4.zw, -r11_abs.w, c4.y, r4
					          cmp r4.zw, -r12_abs.x, -c24.xyxz, r4
					          cmp r4.zw, -r12_abs.y, c5.xyxy, r4
					          cmp r4.zw, -r12_abs.z, -c24.xyxy, r4
					          cmp r4.zw, -r12_abs.w, c4.xyyx, r4
					          mad r1.yz, r1, c6.y, r4.xzww
					          mul r1.yz, r0.y, r1
					          mad r3.xy, r1.yzzw, c1, v0
					          texldl r9, r3.xyww, s1
					          texldl r10, r3, s2
					          dp2add r0.w, r1.yzzw, r1.yzzw, c5.y
					          rsq r0.w, r0.w
					          rcp r0.w, r0.w
					          mad r0.w, r10.x, c4.w, -r0.w
					          add r0.w, r0.w, c6.y
					          mul_sat r0.w, r0.w, -c10.w
					          mul r0.w, r0.x, r0.w
					          add_sat r1.y, -r9.w, c2.z
					          mul r1.z, r10.y, r0.w
					          add r1.y, r1.y, c5.x
					          mad r11.w, r1.z, r1.y, c9.x
					          mad r10.w, r0.w, r10.z, c9.x
					          mul r11.xyz, r9, r11.w
					          mul r10.xyz, r9, r10.w
					          add r8, r8, r11
					          add r5, r5, r10
					          add r0.z, r0.z, c5.x
					        endrep
					        mov r6, r5
					        mov r7, r8
					        if_lt -c10.w, r1.x
					          add_sat r0.x, r1.x, c10.w
					          mul r0.y, r1.x, c15.x
					          mov r3.zw, c5.y
					          mov r5, r6
					          mov r8, r7
					          mov r0.z, c15.y
					          rep i2
					            mov r1.y, c7.y
					            mad r0.w, r0.z, r1.y, c3.x
					            mul r1.yz, r0.w, r4.xxyw
					            mad r1.yz, r1, c6.x, c6
					            dp2add r0.w, r1.yzzw, c7.z, c7.w
					            mul r1.yz, r1, r0.w
					            frc r1.yz, r1
					            mad r1.yz, r1, c10.x, c10.y
					            add r9, r0.z, c16
					            add r10, r0.z, c17
					            add r11, r0.z, c18
					            add r12, r0.z, c19
					            add r13, r0.z, c20
					            add r14, r0.z, c21
					            cmp r4.zw, -r9_abs.x, c4.xyxy, c4.z
					            cmp r4.zw, -r9_abs.y, c15, r4
					            cmp r4.zw, -r9_abs.z, c25.xyxy, r4
					            cmp r4.zw, -r9_abs.w, c6.xywz, r4
					            cmp r4.zw, -r10_abs.x, c25.xyxz, r4
					            cmp r4.zw, -r10_abs.y, c26.xyxy, r4
					            cmp r4.zw, -r10_abs.z, c4.xyyx, r4
					            cmp r4.zw, -r10_abs.w, c26, r4
					            cmp r4.zw, -r11_abs.x, c22.xyxy, r4
					            cmp r4.zw, -r11_abs.y, c25, r4
					            cmp r4.zw, -r11_abs.z, c22, r4
					            cmp r4.zw, -r11_abs.w, c6, r4
					            cmp r4.zw, -r12_abs.x, c5.xyyx, r4
					            cmp r4.zw, -r12_abs.y, c27.xyxy, r4
					            cmp r4.zw, -r12_abs.z, c27, r4
					            cmp r4.zw, -r12_abs.w, c15.xywz, r4
					            cmp r4.zw, -r13_abs.x, -c26.xyzx, r4
					            cmp r4.zw, -r13_abs.y, c4.y, r4
					            cmp r4.zw, -r13_abs.z, c23.xyxy, r4
					            cmp r4.zw, -r13_abs.w, -c25.xywz, r4
					            cmp r4.zw, -r14_abs.x, c5.xyxy, r4
					            cmp r4.zw, -r14_abs.y, -c25.xywy, r4
					            cmp r4.zw, -r14_abs.z, c22.xyyx, r4
					            cmp r4.zw, -r14_abs.w, c4.xyyx, r4
					            mad r1.yz, r1, c6.y, r4.xzww
					            mul r1.yz, r0.y, r1
					            mad r3.xy, r1.yzzw, c1, v0
					            texldl r9, r3.xyww, s1
					            texldl r10, r3, s2
					            dp2add r0.w, r1.yzzw, r1.yzzw, c5.y
					            rsq r0.w, r0.w
					            rcp r0.w, r0.w
					            mad r0.w, r10.x, c4.w, -r0.w
					            add r0.w, r0.w, c6.y
					            mul_sat r0.w, r0.w, -c10.w
					            mul r0.w, r0.x, r0.w
					            add_sat r1.y, -r9.w, c2.z
					            mul r1.z, r10.y, r0.w
					            add r1.y, r1.y, c5.x
					            mad r11.w, r1.z, r1.y, c9.x
					            mad r10.w, r0.w, r10.z, c9.x
					            mul r11.xyz, r9, r11.w
					            mul r10.xyz, r9, r10.w
					            add r8, r8, r11
					            add r5, r5, r10
					            add r0.z, r0.z, c5.x
					          endrep
					          mov r6, r5
					          mov r7, r8
					        endif
					      endif
					      max r0.x, r1.x, c22.x
					      mul r0.x, r0.x, r0.x
					      mul r0.x, r0.x, r7.w
					      mul r0.x, r0.x, c23.z
					      mov_sat r0, r0.x
					      add r1.x, r6.w, c23.w
					      rcp r1.x, r1.x
					      mul r1.xyz, r1.x, r6
					      add r1.w, r7.w, c23.w
					      rcp r1.w, r1.w
					      mad r3.xyz, r7, r1.w, -r1
					      mad r2.xyz, r0.w, r3, r1
					      mov oC1, r0
					    endif
					    mov oC0, r2
					
					// approximately 241 instruction slots used (18 texture, 223 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _ScionResolutionParameters1;
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_3[6];
						vec4 _CoCParams1;
						vec4 unused_0_5[9];
						float _TemporalUVOffset;
					};
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _PresortTexture;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					layout(location = 1) out vec4 SV_Target1;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec2 u_xlat12;
					bool u_xlatb12;
					float u_xlat13;
					vec2 u_xlat24;
					float u_xlat36;
					void main()
					{
					    u_xlat0 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlatb12 = u_xlat0.x<1.0;
					    if(u_xlatb12){
					        SV_Target0 = u_xlat1;
					        SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
					        return;
					    }
					    u_xlat2 = textureLod(_PresortTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat12.x = (-u_xlat1.w) + _CoCParams1.z;
					    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
					    u_xlat12.x = u_xlat12.x + 1.0;
					    u_xlat3.w = u_xlat2.y * u_xlat12.x + 9.99999975e-05;
					    u_xlat2.w = u_xlat2.z + 9.99999975e-05;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat3.www;
					    u_xlat2.xyz = u_xlat1.xyz * u_xlat2.www;
					    u_xlat12.x = u_xlat0.x * 0.285714298;
					    u_xlat4 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(1.37, 2.74000001, 4.11000013, 5.48000002);
					    u_xlat5 = vs_TEXCOORD0.xyxy * _ScionResolutionParameters1.xyxy;
					    u_xlat6 = u_xlat4.xxyy * u_xlat5.zwzw;
					    u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat24.x = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat6.xy * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.25, 0.25) + vec2(0.707106829, -0.707106829);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat8.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat8.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat9.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat8.w = u_xlat24.x * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat3 = u_xlat3 + u_xlat9;
					    u_xlat2 = u_xlat2 + u_xlat8;
					    u_xlat24.x = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat6.zw * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.25, 0.25) + vec2(-1.0, 0.0);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat6.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat7.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat8.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat7.w = u_xlat24.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat6.xyz * u_xlat7.www;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat2 = u_xlat2 + u_xlat7;
					    u_xlat4 = u_xlat4.zzww * u_xlat5.zwzw;
					    u_xlat4 = u_xlat4 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat24.x = dot(u_xlat4.xy, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat4.xy * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.25, 0.25) + vec2(0.707106829, 0.707106829);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat6.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat7.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat8.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat7.w = u_xlat24.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat6.xyz * u_xlat7.www;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat2 = u_xlat2 + u_xlat7;
					    u_xlat24.x = dot(u_xlat4.zw, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat4.zw * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.25, 0.25) + vec2(0.0, -1.0);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat4 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat6 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat6.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat4.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat6.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat7.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat6.w = u_xlat24.x * u_xlat6.z + 0.00100000005;
					    u_xlat7.xyz = u_xlat4.xyz * u_xlat7.www;
					    u_xlat6.xyz = u_xlat4.xyz * u_xlat6.www;
					    u_xlat3 = u_xlat3 + u_xlat7;
					    u_xlat2 = u_xlat2 + u_xlat6;
					    u_xlat4 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(6.8499999, 8.22000027, 9.59000015, 10.96);
					    u_xlat6 = u_xlat4.xxyy * u_xlat5.zwzw;
					    u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat24.x = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat6.xy * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.25, 0.25) + vec2(0.0, 1.0);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat8.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat8.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat9.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat8.w = u_xlat24.x * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat3 = u_xlat3 + u_xlat9;
					    u_xlat2 = u_xlat2 + u_xlat8;
					    u_xlat24.x = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat6.zw * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.25, 0.25) + vec2(-0.707106829, -0.707106829);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat6.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat7.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat8.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat7.w = u_xlat24.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat6.xyz * u_xlat7.www;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat2 = u_xlat2 + u_xlat7;
					    u_xlat4 = u_xlat4.zzww * u_xlat5.zwzw;
					    u_xlat4 = u_xlat4 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat24.x = dot(u_xlat4.xy, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat4.xy * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.25, 0.25) + vec2(1.0, 0.0);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat6.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat7.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat8.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat7.w = u_xlat24.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat6.xyz * u_xlat7.www;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat2 = u_xlat2 + u_xlat7;
					    u_xlat24.x = dot(u_xlat4.zw, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat4.zw * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					    u_xlat12.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat12.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat4 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat6 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat12.x = dot(u_xlat12.xy, u_xlat12.xy);
					    u_xlat12.x = sqrt(u_xlat12.x);
					    u_xlat12.x = u_xlat6.x * 10.0 + (-u_xlat12.x);
					    u_xlat12.x = u_xlat12.x + 0.25;
					    u_xlat12.x = u_xlat12.x * 4.0;
					    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
					    u_xlat24.x = (-u_xlat4.w) + _CoCParams1.z;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = u_xlat6.y * u_xlat12.x;
					    u_xlat24.x = u_xlat24.x + 1.0;
					    u_xlat7.w = u_xlat36 * u_xlat24.x + 0.00100000005;
					    u_xlat6.w = u_xlat12.x * u_xlat6.z + 0.00100000005;
					    u_xlat7.xyz = u_xlat4.xyz * u_xlat7.www;
					    u_xlat6.xyz = u_xlat4.xyz * u_xlat6.www;
					    u_xlat3 = u_xlat3 + u_xlat7;
					    u_xlat2 = u_xlat2 + u_xlat6;
					    u_xlatb12 = 2.0<u_xlat0.x;
					    if(u_xlatb12){
					        u_xlat12.x = u_xlat0.x + -2.0;
					        u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
					        u_xlat24.x = u_xlat0.x * 0.571428478;
					        u_xlat4 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(12.3299999, 13.6999998, 15.0699997, 16.4400005);
					        u_xlat6 = u_xlat4.xxyy * u_xlat5.zwzw;
					        u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, -0.707106829);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat8.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat7 = u_xlat3 + u_xlat9;
					        u_xlat8 = u_xlat2 + u_xlat8;
					        u_xlat36 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.923879385, -0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat6.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat6.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat7 + u_xlat10;
					        u_xlat7 = u_xlat8 + u_xlat9;
					        u_xlat4 = u_xlat4.zzww * u_xlat5.zwzw;
					        u_xlat4 = u_xlat4 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat4.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat4.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-1.0, 0.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat7 = u_xlat7 + u_xlat9;
					        u_xlat36 = dot(u_xlat4.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat4.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.923879385, 0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					        u_xlat4 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat4.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat4.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat4.w = u_xlat36 * u_xlat4.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat4.xyz = u_xlat4.www * u_xlat8.xyz;
					        u_xlat6 = u_xlat6 + u_xlat9;
					        u_xlat4 = u_xlat4 + u_xlat7;
					        u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(17.8099995, 19.1800003, 20.5499992, 21.9200001);
					        u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, 0.707106829);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat10.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat6 = u_xlat6 + u_xlat11;
					        u_xlat4 = u_xlat4 + u_xlat10;
					        u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.382683486, -0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat7 = u_xlat5.zwzw * u_xlat7.zzww;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.382683396, 0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, -1.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat7 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat7.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat7.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat7.w = u_xlat36 * u_xlat7.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat7.xyz = u_xlat7.www * u_xlat8.xyz;
					        u_xlat6 = u_xlat6 + u_xlat9;
					        u_xlat4 = u_xlat4 + u_xlat7;
					        u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(23.2900009, 24.6599998, 26.0300007, 27.3999996);
					        u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, 1.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat10.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat6 = u_xlat6 + u_xlat11;
					        u_xlat4 = u_xlat4 + u_xlat10;
					        u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.382683396, -0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat7 = u_xlat5.zwzw * u_xlat7.zzww;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.382683486, 0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, -0.707106829);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat7 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat7.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat7.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat7.w = u_xlat36 * u_xlat7.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat7.xyz = u_xlat7.www * u_xlat8.xyz;
					        u_xlat6 = u_xlat6 + u_xlat9;
					        u_xlat4 = u_xlat4 + u_xlat7;
					        u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(28.7700005, 30.1399994, 31.5100002, 32.8800011);
					        u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.923879385, -0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat10.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat6 = u_xlat6 + u_xlat11;
					        u_xlat4 = u_xlat4 + u_xlat10;
					        u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(1.0, 0.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat7 = u_xlat5.zwzw * u_xlat7.zzww;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.923879385, 0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					        u_xlat24.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					        u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					        u_xlat24.x = sqrt(u_xlat24.x);
					        u_xlat24.x = u_xlat8.x * 10.0 + (-u_xlat24.x);
					        u_xlat24.x = u_xlat24.x + 0.25;
					        u_xlat24.x = u_xlat24.x * 4.0;
					        u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					        u_xlat12.x = u_xlat12.x * u_xlat24.x;
					        u_xlat24.x = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					        u_xlat36 = u_xlat8.y * u_xlat12.x;
					        u_xlat24.x = u_xlat24.x + 1.0;
					        u_xlat9.w = u_xlat36 * u_xlat24.x + 0.00100000005;
					        u_xlat8.w = u_xlat12.x * u_xlat8.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat3 = u_xlat6 + u_xlat9;
					        u_xlat2 = u_xlat4 + u_xlat8;
					        u_xlatb12 = 4.0<u_xlat0.x;
					        if(u_xlatb12){
					            u_xlat12.x = u_xlat0.x + -4.0;
					            u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
					            u_xlat24.x = u_xlat0.x * 0.857142925;
					            u_xlat4 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(34.25, 35.6199989, 36.9900017, 38.3600006);
					            u_xlat6 = u_xlat4.xxyy * u_xlat5.zwzw;
					            u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat6.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, -0.707106829);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					            u_xlat8 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat8.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					            u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					            u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					            u_xlat7 = u_xlat3 + u_xlat9;
					            u_xlat8 = u_xlat2 + u_xlat8;
					            u_xlat36 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat6.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.866025388, -0.499999911);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat6.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat6.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat7 + u_xlat10;
					            u_xlat7 = u_xlat8 + u_xlat9;
					            u_xlat4 = u_xlat4.zzww * u_xlat5.zwzw;
					            u_xlat4 = u_xlat4 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat4.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat4.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.965925872, -0.258819014);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat7 = u_xlat7 + u_xlat9;
					            u_xlat36 = dot(u_xlat4.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat4.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-1.0, 0.0);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					            u_xlat4 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat4.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat4.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat4.w = u_xlat36 * u_xlat4.z + 0.00100000005;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat4.xyz = u_xlat4.www * u_xlat8.xyz;
					            u_xlat6 = u_xlat6 + u_xlat9;
					            u_xlat4 = u_xlat4 + u_xlat7;
					            u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(39.7299995, 41.0999985, 42.4700012, 43.8400002);
					            u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.965925872, 0.258819014);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat10.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat6 = u_xlat6 + u_xlat11;
					            u_xlat4 = u_xlat4 + u_xlat10;
					            u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.866025388, 0.499999911);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat4 = u_xlat4 + u_xlat9;
					            u_xlat7 = u_xlat5.zwzw * u_xlat7.zzww;
					            u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat4 = u_xlat4 + u_xlat9;
					            u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.500000119, -0.866025329);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat7 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat7.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat7.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat7.w = u_xlat36 * u_xlat7.z + 0.00100000005;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat7.xyz = u_xlat7.www * u_xlat8.xyz;
					            u_xlat6 = u_xlat6 + u_xlat9;
					            u_xlat4 = u_xlat4 + u_xlat7;
					            u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(45.2099991, 46.5800018, 47.9500008, 49.3199997);
					            u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.5, 0.866025388);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat10.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat6 = u_xlat6 + u_xlat11;
					            u_xlat4 = u_xlat4 + u_xlat10;
					            u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.258819014, -0.965925813);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat4 = u_xlat4 + u_xlat9;
					            u_xlat7 = u_xlat5.zwzw * u_xlat7.zzww;
					            u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.258819103, 0.965925813);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat4 = u_xlat4 + u_xlat9;
					            u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, -1.0);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat7 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat7.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat7.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat7.w = u_xlat36 * u_xlat7.z + 0.00100000005;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat7.xyz = u_xlat7.www * u_xlat8.xyz;
					            u_xlat6 = u_xlat6 + u_xlat9;
					            u_xlat4 = u_xlat4 + u_xlat7;
					            u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(50.6899986, 52.0600014, 53.4300003, 54.7999992);
					            u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, 1.0);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat10.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat6 = u_xlat6 + u_xlat11;
					            u_xlat4 = u_xlat4 + u_xlat10;
					            u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.258818895, -0.965925813);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat4 = u_xlat4 + u_xlat9;
					            u_xlat7 = u_xlat5.zwzw * u_xlat7.zzww;
					            u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.258819193, 0.965925813);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat4 = u_xlat4 + u_xlat9;
					            u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.499999911, -0.866025388);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat7 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat7.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat7.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat7.w = u_xlat36 * u_xlat7.z + 0.00100000005;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat7.xyz = u_xlat7.www * u_xlat8.xyz;
					            u_xlat6 = u_xlat6 + u_xlat9;
					            u_xlat4 = u_xlat4 + u_xlat7;
					            u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(56.170002, 57.5400009, 58.9099998, 60.2799988);
					            u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.500000119, 0.866025388);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat10.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat6 = u_xlat6 + u_xlat11;
					            u_xlat4 = u_xlat4 + u_xlat10;
					            u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, -0.707106829);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat4 = u_xlat4 + u_xlat9;
					            u_xlat7 = u_xlat5.zwzw * u_xlat7.zzww;
					            u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.866025388, -0.5);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat4 = u_xlat4 + u_xlat9;
					            u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.965925813, -0.258819014);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat7 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat7.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat7.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat7.w = u_xlat36 * u_xlat7.z + 0.00100000005;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat7.xyz = u_xlat7.www * u_xlat8.xyz;
					            u_xlat6 = u_xlat6 + u_xlat9;
					            u_xlat4 = u_xlat4 + u_xlat7;
					            u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(61.6500015, 63.0200005, 64.3899994, 65.7600021);
					            u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(1.0, 0.0);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat10.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat6 = u_xlat6 + u_xlat11;
					            u_xlat4 = u_xlat4 + u_xlat10;
					            u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.965925813, 0.258819014);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat4 = u_xlat4 + u_xlat9;
					            u_xlat5 = u_xlat5 * u_xlat7.zzww;
					            u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.866025388, 0.5);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat8 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat8.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					            u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					            u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					            u_xlat6 = u_xlat6 + u_xlat9;
					            u_xlat4 = u_xlat4 + u_xlat8;
					            u_xlat36 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					            u_xlat24.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					            u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					            u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					            u_xlat24.x = sqrt(u_xlat24.x);
					            u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					            u_xlat24.x = u_xlat24.x + 0.25;
					            u_xlat24.x = u_xlat24.x * 4.0;
					            u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					            u_xlat12.x = u_xlat12.x * u_xlat24.x;
					            u_xlat24.x = (-u_xlat5.w) + _CoCParams1.z;
					            u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					            u_xlat36 = u_xlat7.y * u_xlat12.x;
					            u_xlat24.x = u_xlat24.x + 1.0;
					            u_xlat8.w = u_xlat36 * u_xlat24.x + 0.00100000005;
					            u_xlat7.w = u_xlat12.x * u_xlat7.z + 0.00100000005;
					            u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					            u_xlat7.xyz = u_xlat5.xyz * u_xlat7.www;
					            u_xlat3 = u_xlat6 + u_xlat8;
					            u_xlat2 = u_xlat4 + u_xlat7;
					        }
					    }
					    u_xlat0.x = max(u_xlat0.x, 0.5);
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat3.w;
					    u_xlat0.x = u_xlat0.x * 0.0641141385;
					    u_xlat0 = u_xlat0.xxxx;
					    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
					    u_xlat1.x = u_xlat2.w + 9.99999994e-09;
					    u_xlat1.xyz = u_xlat2.xyz / u_xlat1.xxx;
					    u_xlat2.x = u_xlat3.w + 9.99999994e-09;
					    u_xlat2.xyz = u_xlat3.xyz / u_xlat2.xxx;
					    u_xlat2.xyz = (-u_xlat1.xyz) + u_xlat2.xyz;
					    SV_Target0.xyz = u_xlat0.www * u_xlat2.xyz + u_xlat1.xyz;
					    SV_Target0.w = u_xlat1.w;
					    SV_Target1 = u_xlat0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" "SC_DOF_MASK_ON" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _CoCParams1;
					//   sampler2D _ExclusionMask;
					//   sampler2D _HalfResSourceDepthTexture;
					//   sampler2D _PresortTexture;
					//   float4 _ScionResolutionParameters1;
					//   float4 _ScionResolutionParameters2;
					//   float _TemporalUVOffset;
					//   sampler2D _TiledNeighbourhoodData;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters1 c0       1
					//   _ScionResolutionParameters2 c1       1
					//   _CoCParams1                 c2       1
					//   _TemporalUVOffset           c3       1
					//   _TiledNeighbourhoodData     s0       1
					//   _ExclusionMask              s1       1
					//   _HalfResSourceDepthTexture  s2       1
					//   _PresortTexture             s3       1
					//
					
					    ps_3_0
					    def c4, 0.707106829, -0.707106829, 0, 10
					    def c5, 1, 0, 9.99999975e-005, 0.285714298
					    def c6, 0, 1.37, 3571, 0
					    def c7, -5, -6, -7, -8
					    def c8, 0.00100000005, 0.571428478, 0, 9
					    def c9, 2, -1, -3, -4
					    def c10, -9, -10, -11, -12
					    def c11, -13, -14, -15, -16
					    def c12, -17, -18, -19, -20
					    def c13, -21, -22, -23, -24
					    def c14, 0.857142925, 25, -0.866025388, -0.499999911
					    def c15, -25, -26, -27, -28
					    def c16, -29, -30, -31, -32
					    def c17, -33, -34, -35, -36
					    def c18, -37, -38, -39, -40
					    def c19, -41, -42, -43, -44
					    def c20, -45, -46, -47, -48
					    def c21, 0.000231481477, 0.25, 0, -1
					    def c22, 0.5, 0.866025388, 0.258819103, 0.965925813
					    def c23, 0.866025388, -0.5, 0.0641141385, 9.99999994e-009
					    def c24, -0.923879385, -0.382683486, 0.382683486, -0.382683396
					    def c25, -0.965925872, -0.258819014, 0.258819014, -0.965925813
					    def c26, -0.866025388, 0.499999911, 0.500000119, -0.866025329
					    def c27, -0.258818895, -0.965925813, -0.258819193, 0.965925813
					    defi i0, 8, 0, 0, 0
					    defi i1, 16, 0, 0, 0
					    defi i2, 24, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    dcl_2d s3
					    mul r0, c5.xxyy, v0.xyxx
					    texldl r1, r0, s0
					    texldl r2, r0, s2
					    texldl r3, r0, s1
					    mul r1.y, r1.x, r3.x
					    if_lt r1.y, c5.x
					      mov oC1, c5.y
					    else
					      texldl r0, r0, s3
					      add_sat r0.x, -r2.w, c2.z
					      add r0.x, r0.x, c5.x
					      mad r0.x, r0.y, r0.x, c5.z
					      add r0.y, r0.z, c5.z
					      mul r3.yzw, r0.x, r2.xxyz
					      mul r4.xyz, r0.y, r2
					      mul r0.z, r1.y, c5.w
					      mul r1.zw, c0.xyxy, v0.xyxy
					      mov r5.zw, c5.y
					      mov r6.xyz, r4
					      mov r6.w, r0.y
					      mov r7.xyz, r3.yzww
					      mov r7.w, r0.x
					      mov r0.w, c5.x
					      rep i0
					        mov r8.y, c6.y
					        mad r4.w, r0.w, r8.y, c3.x
					        mul r8.xy, r1.zwzw, r4.w
					        mad r8.xy, r8, c21.x, c21.yzzw
					        dp2add r4.w, r8, c6.z, c6.w
					        mul r8.xy, r8, r4.w
					        frc r8.xy, r8
					        mad r8.xy, r8, c9.x, c9.y
					        add r9, r0.w, -c9_abs.yxzw
					        add r10, r0.w, c7
					        cmp r8.zw, -r9_abs.x, c4.xyxy, c4.z
					        cmp r8.zw, -r9_abs.y, c21.xywz, r8
					        cmp r8.zw, -r9_abs.z, c4.x, r8
					        cmp r8.zw, -r9_abs.w, c21, r8
					        cmp r8.zw, -r10_abs.x, c5.xyyx, r8
					        cmp r8.zw, -r10_abs.y, c4.y, r8
					        cmp r8.zw, -r10_abs.z, c5.xyxy, r8
					        cmp r8.zw, -r10_abs.w, c4.xyyx, r8
					        mad r8.xy, r8, c21.y, r8.zwzw
					        mul r8.xy, r0.z, r8
					        mad r5.xy, r8, c1, v0
					        texldl r9, r5.xyww, s2
					        texldl r10, r5.xyww, s3
					        dp2add r4.w, r8, r8, c5.y
					        rsq r4.w, r4.w
					        rcp r4.w, r4.w
					        mad r4.w, r10.x, c4.w, -r4.w
					        add r4.w, r4.w, c21.y
					        mul_sat r4.w, r4.w, -c9.w
					        add_sat r8.x, -r9.w, c2.z
					        mul r8.y, r10.y, r4.w
					        add r8.x, r8.x, c5.x
					        mad r8.w, r8.y, r8.x, c8.x
					        mad r10.w, r4.w, r10.z, c8.x
					        mul r8.xyz, r8.w, r9
					        mul r10.xyz, r9, r10.w
					        texldl r9, r5, s1
					        mad r7, r8, r9.x, r7
					        mad r6, r10, r9.x, r6
					        add r0.w, r0.w, c5.x
					      endrep
					      if_lt c9.x, r1.y
					        mad_sat r0.x, r1.x, r3.x, -c9.x
					        mul r0.y, r1.y, c8.y
					        mov r4.zw, c5.y
					        mov r5, r6
					        mov r8, r7
					        mov r0.z, c8.w
					        rep i1
					          mov r3.y, c6.y
					          mad r0.w, r0.z, r3.y, c3.x
					          mul r3.yz, r0.w, r1.xzww
					          mad r3.yz, r3, c21.x, c21
					          dp2add r0.w, r3.yzzw, c6.z, c6.w
					          mul r3.yz, r3, r0.w
					          frc r3.yz, r3
					          mad r3.yz, r3, c9.x, c9.y
					          add r9, r0.z, c10
					          add r10, r0.z, c11
					          add r11, r0.z, c12
					          add r12, r0.z, c13
					          cmp r13.xy, -r9_abs.x, c4, c4.z
					          cmp r9.xy, -r9_abs.y, c24, r13
					          cmp r9.xy, -r9_abs.z, c21.wzzw, r9
					          cmp r9.xy, -r9_abs.w, c24.xzzw, r9
					          cmp r9.xy, -r10_abs.x, c4.x, r9
					          cmp r9.xy, -r10_abs.y, c24.zxzw, r9
					          cmp r9.xy, -r10_abs.z, -c24.wxzw, r9
					          cmp r9.xy, -r10_abs.w, c21.zwzw, r9
					          cmp r9.xy, -r11_abs.x, c5.yxzw, r9
					          cmp r9.xy, -r11_abs.y, c24.wxzw, r9
					          cmp r9.xy, -r11_abs.z, -c24.zxzw, r9
					          cmp r9.xy, -r11_abs.w, c4.y, r9
					          cmp r9.xy, -r12_abs.x, -c24.xzzw, r9
					          cmp r9.xy, -r12_abs.y, c5, r9
					          cmp r9.xy, -r12_abs.z, -c24, r9
					          cmp r9.xy, -r12_abs.w, c4.yxzw, r9
					          mad r3.yz, r3, c21.y, r9.xxyw
					          mul r3.yz, r0.y, r3
					          mad r4.xy, r3.yzzw, c1, v0
					          texldl r9, r4.xyww, s2
					          texldl r10, r4.xyww, s3
					          dp2add r0.w, r3.yzzw, r3.yzzw, c5.y
					          rsq r0.w, r0.w
					          rcp r0.w, r0.w
					          mad r0.w, r10.x, c4.w, -r0.w
					          add r0.w, r0.w, c21.y
					          mul_sat r0.w, r0.w, -c9.w
					          mul r0.w, r0.x, r0.w
					          add_sat r3.y, -r9.w, c2.z
					          mul r3.z, r10.y, r0.w
					          add r3.y, r3.y, c5.x
					          mad r11.w, r3.z, r3.y, c8.x
					          mad r10.w, r0.w, r10.z, c8.x
					          mul r11.xyz, r9, r11.w
					          mul r10.xyz, r9, r10.w
					          texldl r9, r4, s1
					          mad r8, r11, r9.x, r8
					          mad r5, r10, r9.x, r5
					          add r0.z, r0.z, c5.x
					        endrep
					        mov r6, r5
					        mov r7, r8
					        if_lt -c9.w, r1.y
					          mad_sat r0.x, r1.x, r3.x, c9.w
					          mul r0.y, r1.y, c14.x
					          mov r3.zw, c5.y
					          mov r4, r6
					          mov r5, r7
					          mov r0.z, c14.y
					          rep i2
					            mov r8.y, c6.y
					            mad r0.w, r0.z, r8.y, c3.x
					            mul r8.xy, r0.w, r1.zwzw
					            mad r8.xy, r8, c21.x, c21.yzzw
					            dp2add r0.w, r8, c6.z, c6.w
					            mul r8.xy, r8, r0.w
					            frc r8.xy, r8
					            mad r8.xy, r8, c9.x, c9.y
					            add r9, r0.z, c15
					            add r10, r0.z, c16
					            add r11, r0.z, c17
					            add r12, r0.z, c18
					            add r13, r0.z, c19
					            add r14, r0.z, c20
					            cmp r8.zw, -r9_abs.x, c4.xyxy, c4.z
					            cmp r8.zw, -r9_abs.y, c14, r8
					            cmp r8.zw, -r9_abs.z, c25.xyxy, r8
					            cmp r8.zw, -r9_abs.w, c21.xywz, r8
					            cmp r8.zw, -r10_abs.x, c25.xyxz, r8
					            cmp r8.zw, -r10_abs.y, c26.xyxy, r8
					            cmp r8.zw, -r10_abs.z, c4.xyyx, r8
					            cmp r8.zw, -r10_abs.w, c26, r8
					            cmp r8.zw, -r11_abs.x, c22.xyxy, r8
					            cmp r8.zw, -r11_abs.y, c25, r8
					            cmp r8.zw, -r11_abs.z, c22, r8
					            cmp r8.zw, -r11_abs.w, c21, r8
					            cmp r8.zw, -r12_abs.x, c5.xyyx, r8
					            cmp r8.zw, -r12_abs.y, c27.xyxy, r8
					            cmp r8.zw, -r12_abs.z, c27, r8
					            cmp r8.zw, -r12_abs.w, c14.xywz, r8
					            cmp r8.zw, -r13_abs.x, -c26.xyzx, r8
					            cmp r8.zw, -r13_abs.y, c4.y, r8
					            cmp r8.zw, -r13_abs.z, c23.xyxy, r8
					            cmp r8.zw, -r13_abs.w, -c25.xywz, r8
					            cmp r8.zw, -r14_abs.x, c5.xyxy, r8
					            cmp r8.zw, -r14_abs.y, -c25.xywy, r8
					            cmp r8.zw, -r14_abs.z, c22.xyyx, r8
					            cmp r8.zw, -r14_abs.w, c4.xyyx, r8
					            mad r8.xy, r8, c21.y, r8.zwzw
					            mul r8.xy, r0.y, r8
					            mad r3.xy, r8, c1, v0
					            texldl r9, r3.xyww, s2
					            texldl r10, r3.xyww, s3
					            dp2add r0.w, r8, r8, c5.y
					            rsq r0.w, r0.w
					            rcp r0.w, r0.w
					            mad r0.w, r10.x, c4.w, -r0.w
					            add r0.w, r0.w, c21.y
					            mul_sat r0.w, r0.w, -c9.w
					            mul r0.w, r0.x, r0.w
					            add_sat r1.x, -r9.w, c2.z
					            mul r8.x, r10.y, r0.w
					            add r1.x, r1.x, c5.x
					            mad r8.w, r8.x, r1.x, c8.x
					            mad r10.w, r0.w, r10.z, c8.x
					            mul r8.xyz, r8.w, r9
					            mul r10.xyz, r9, r10.w
					            texldl r9, r3, s1
					            mad r5, r8, r9.x, r5
					            mad r4, r10, r9.x, r4
					            add r0.z, r0.z, c5.x
					          endrep
					          mov r6, r4
					          mov r7, r5
					        endif
					      endif
					      max r0.x, r1.y, c22.x
					      mul r0.x, r0.x, r0.x
					      mul r0.x, r0.x, r7.w
					      mul r0.x, r0.x, c23.z
					      mov_sat r0, r0.x
					      add r1.x, r6.w, c23.w
					      rcp r1.x, r1.x
					      mul r1.xyz, r1.x, r6
					      add r1.w, r7.w, c23.w
					      rcp r1.w, r1.w
					      mad r3.xyz, r7, r1.w, -r1
					      mad r2.xyz, r0.w, r3, r1
					      mov oC1, r0
					    endif
					    mov oC0, r2
					
					// approximately 250 instruction slots used (26 texture, 224 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" "SC_DOF_MASK_ON" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _ScionResolutionParameters1;
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_3[6];
						vec4 _CoCParams1;
						vec4 unused_0_5[9];
						float _TemporalUVOffset;
					};
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _ExclusionMask;
					uniform  sampler2D _PresortTexture;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					layout(location = 1) out vec4 SV_Target1;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec4 u_xlat12;
					float u_xlat13;
					float u_xlat14;
					vec2 u_xlat15;
					vec2 u_xlat26;
					bool u_xlatb26;
					float u_xlat27;
					float u_xlat39;
					void main()
					{
					    u_xlat0 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat2 = textureLod(_ExclusionMask, vs_TEXCOORD0.xy, 0.0);
					    u_xlat13 = u_xlat0.x * u_xlat2.x;
					    u_xlatb26 = u_xlat13<1.0;
					    if(u_xlatb26){
					        SV_Target0 = u_xlat1;
					        SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
					        return;
					    }
					    u_xlat3 = textureLod(_PresortTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat26.x = (-u_xlat1.w) + _CoCParams1.z;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat26.x = u_xlat26.x + 1.0;
					    u_xlat4.w = u_xlat3.y * u_xlat26.x + 9.99999975e-05;
					    u_xlat3.w = u_xlat3.z + 9.99999975e-05;
					    u_xlat4.xyz = u_xlat1.xyz * u_xlat4.www;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat3.www;
					    u_xlat26.x = u_xlat13 * 0.285714298;
					    u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(1.37, 2.74000001, 4.11000013, 5.48000002);
					    u_xlat6 = vs_TEXCOORD0.xyxy * _ScionResolutionParameters1.xyxy;
					    u_xlat7 = u_xlat5.xxyy * u_xlat6.zwzw;
					    u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat39 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat7.xy * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, -0.707106829);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat9.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat4 = u_xlat10 * u_xlat8.xxxx + u_xlat4;
					    u_xlat3 = u_xlat9 * u_xlat8.xxxx + u_xlat3;
					    u_xlat39 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat7.zw * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-1.0, 0.0);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat8.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat9.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat8.w = u_xlat39 * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat7 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat4 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					    u_xlat3 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					    u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					    u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat39 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat5.xy * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, 0.707106829);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat8.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat9.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat8.w = u_xlat39 * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat7 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat4 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					    u_xlat3 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					    u_xlat39 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat5.zw * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, -1.0);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat7.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat5.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat7.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat8.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat7.w = u_xlat39 * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat5.xyz * u_xlat7.www;
					    u_xlat5 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat4 = u_xlat8 * u_xlat5.xxxx + u_xlat4;
					    u_xlat3 = u_xlat7 * u_xlat5.xxxx + u_xlat3;
					    u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(6.8499999, 8.22000027, 9.59000015, 10.96);
					    u_xlat7 = u_xlat5.xxyy * u_xlat6.zwzw;
					    u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat39 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat7.xy * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, 1.0);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat9.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat4 = u_xlat10 * u_xlat8.xxxx + u_xlat4;
					    u_xlat3 = u_xlat9 * u_xlat8.xxxx + u_xlat3;
					    u_xlat39 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat7.zw * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, -0.707106829);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat8.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat9.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat8.w = u_xlat39 * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat7 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat4 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					    u_xlat3 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					    u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					    u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat39 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat5.xy * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(1.0, 0.0);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat8.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat9.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat8.w = u_xlat39 * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat7 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat4 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					    u_xlat3 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					    u_xlat39 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat5.zw * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					    u_xlat26.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					    u_xlat26.x = sqrt(u_xlat26.x);
					    u_xlat26.x = u_xlat7.x * 10.0 + (-u_xlat26.x);
					    u_xlat26.x = u_xlat26.x + 0.25;
					    u_xlat26.x = u_xlat26.x * 4.0;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat39 = (-u_xlat5.w) + _CoCParams1.z;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat27 = u_xlat7.y * u_xlat26.x;
					    u_xlat39 = u_xlat39 + 1.0;
					    u_xlat8.w = u_xlat27 * u_xlat39 + 0.00100000005;
					    u_xlat7.w = u_xlat26.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat5.xyz * u_xlat7.www;
					    u_xlat5 = textureLod(_ExclusionMask, u_xlat1.xy, 0.0);
					    u_xlat4 = u_xlat8 * u_xlat5.xxxx + u_xlat4;
					    u_xlat3 = u_xlat7 * u_xlat5.xxxx + u_xlat3;
					    u_xlatb26 = 2.0<u_xlat13;
					    if(u_xlatb26){
					        u_xlat26.x = u_xlat0.x * u_xlat2.x + -2.0;
					        u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					        u_xlat39 = u_xlat13 * 0.571428478;
					        u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(12.3299999, 13.6999998, 15.0699997, 16.4400005);
					        u_xlat7 = u_xlat5.xxyy * u_xlat6.zwzw;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, -0.707106829);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat9.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat9.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat10.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat9.w = u_xlat1.x * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat10 = u_xlat10 * u_xlat8.xxxx + u_xlat4;
					        u_xlat8 = u_xlat9 * u_xlat8.xxxx + u_xlat3;
					        u_xlat1.x = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.923879385, -0.382683486);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat9.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat9.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat11.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat9.w = u_xlat1.x * u_xlat9.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat7.xyz * u_xlat11.www;
					        u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					        u_xlat7 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat10 = u_xlat11 * u_xlat7.xxxx + u_xlat10;
					        u_xlat7 = u_xlat9 * u_xlat7.xxxx + u_xlat8;
					        u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					        u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-1.0, 0.0);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat9.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat9.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat11.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat9.w = u_xlat1.x * u_xlat9.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat10 = u_xlat11 * u_xlat8.xxxx + u_xlat10;
					        u_xlat7 = u_xlat9 * u_xlat8.xxxx + u_xlat7;
					        u_xlat1.x = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.923879385, 0.382683486);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat8.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat5.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat8.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat9.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat8.w = u_xlat1.x * u_xlat8.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat5.xyz * u_xlat9.www;
					        u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					        u_xlat5 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat9 * u_xlat5.xxxx + u_xlat10;
					        u_xlat5 = u_xlat8 * u_xlat5.xxxx + u_xlat7;
					        u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(17.8099995, 19.1800003, 20.5499992, 21.9200001);
					        u_xlat8 = u_xlat6.zwzw * u_xlat7.xxyy;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, 0.707106829);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat11.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat10.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat11.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat12.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat11.w = u_xlat1.x * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					        u_xlat10 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat12 * u_xlat10.xxxx + u_xlat9;
					        u_xlat5 = u_xlat11 * u_xlat10.xxxx + u_xlat5;
					        u_xlat1.x = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.382683486, -0.923879385);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat10.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat10.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat11.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat10.w = u_xlat1.x * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat11 * u_xlat8.xxxx + u_xlat9;
					        u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					        u_xlat7 = u_xlat6.zwzw * u_xlat7.zzww;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.382683396, 0.923879385);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat10.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat10.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat11.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat10.w = u_xlat1.x * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat11 * u_xlat8.xxxx + u_xlat9;
					        u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					        u_xlat1.x = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, -1.0);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat8.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat8.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat10.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat8.w = u_xlat1.x * u_xlat8.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat7.xyz * u_xlat10.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat7 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat10 * u_xlat7.xxxx + u_xlat9;
					        u_xlat5 = u_xlat8 * u_xlat7.xxxx + u_xlat5;
					        u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(23.2900009, 24.6599998, 26.0300007, 27.3999996);
					        u_xlat8 = u_xlat6.zwzw * u_xlat7.xxyy;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, 1.0);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat11.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat10.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat11.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat12.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat11.w = u_xlat1.x * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					        u_xlat10 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat12 * u_xlat10.xxxx + u_xlat9;
					        u_xlat5 = u_xlat11 * u_xlat10.xxxx + u_xlat5;
					        u_xlat1.x = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.382683396, -0.923879385);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat10.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat10.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat11.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat10.w = u_xlat1.x * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat11 * u_xlat8.xxxx + u_xlat9;
					        u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					        u_xlat7 = u_xlat6.zwzw * u_xlat7.zzww;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.382683486, 0.923879385);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat10.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat10.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat11.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat10.w = u_xlat1.x * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat11 * u_xlat8.xxxx + u_xlat9;
					        u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					        u_xlat1.x = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, -0.707106829);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat8.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat8.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat10.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat8.w = u_xlat1.x * u_xlat8.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat7.xyz * u_xlat10.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat7 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat10 * u_xlat7.xxxx + u_xlat9;
					        u_xlat5 = u_xlat8 * u_xlat7.xxxx + u_xlat5;
					        u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(28.7700005, 30.1399994, 31.5100002, 32.8800011);
					        u_xlat8 = u_xlat6.zwzw * u_xlat7.xxyy;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.923879385, -0.382683486);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat11.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat10.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat11.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat12.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat11.w = u_xlat1.x * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					        u_xlat10 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat12 * u_xlat10.xxxx + u_xlat9;
					        u_xlat5 = u_xlat11 * u_xlat10.xxxx + u_xlat5;
					        u_xlat1.x = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(1.0, 0.0);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat10.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat10.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat11.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat10.w = u_xlat1.x * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat11 * u_xlat8.xxxx + u_xlat9;
					        u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					        u_xlat7 = u_xlat6.zwzw * u_xlat7.zzww;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.923879385, 0.382683486);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat10.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat10.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat11.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat10.w = u_xlat1.x * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat11 * u_xlat8.xxxx + u_xlat9;
					        u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					        u_xlat1.x = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat26.x = u_xlat26.x * u_xlat39;
					        u_xlat39 = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat1.x = u_xlat8.y * u_xlat26.x;
					        u_xlat39 = u_xlat39 + 1.0;
					        u_xlat10.w = u_xlat1.x * u_xlat39 + 0.00100000005;
					        u_xlat8.w = u_xlat26.x * u_xlat8.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat7.xyz * u_xlat10.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat7 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat4 = u_xlat10 * u_xlat7.xxxx + u_xlat9;
					        u_xlat3 = u_xlat8 * u_xlat7.xxxx + u_xlat5;
					        u_xlatb26 = 4.0<u_xlat13;
					        if(u_xlatb26){
					            u_xlat0.x = u_xlat0.x * u_xlat2.x + -4.0;
					            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					            u_xlat26.x = u_xlat13 * 0.857142925;
					            u_xlat2 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(34.25, 35.6199989, 36.9900017, 38.3600006);
					            u_xlat5 = u_xlat2.xxyy * u_xlat6.zwzw;
					            u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, -0.707106829);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					            u_xlat8 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat8.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat9.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat8.w = u_xlat39 * u_xlat8.z + 0.00100000005;
					            u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					            u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					            u_xlat7 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					            u_xlat9 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					            u_xlat7 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					            u_xlat39 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.866025388, -0.499999911);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					            u_xlat8 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat5.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat8.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat8.w = u_xlat39 * u_xlat8.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat5.xyz * u_xlat10.www;
					            u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					            u_xlat5 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					            u_xlat9 = u_xlat10 * u_xlat5.xxxx + u_xlat9;
					            u_xlat5 = u_xlat8 * u_xlat5.xxxx + u_xlat7;
					            u_xlat2 = u_xlat2.zzww * u_xlat6.zwzw;
					            u_xlat2 = u_xlat2 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat2.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat2.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.965925872, -0.258819014);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					            u_xlat8 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat8.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat8.w = u_xlat39 * u_xlat8.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat7.xyz * u_xlat10.www;
					            u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					            u_xlat7 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					            u_xlat9 = u_xlat10 * u_xlat7.xxxx + u_xlat9;
					            u_xlat5 = u_xlat8 * u_xlat7.xxxx + u_xlat5;
					            u_xlat39 = dot(u_xlat2.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat2.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-1.0, 0.0);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					            u_xlat8 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat8.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat8.w = u_xlat39 * u_xlat8.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat7.xyz * u_xlat10.www;
					            u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					            u_xlat2 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat2.xxxx + u_xlat9;
					            u_xlat2 = u_xlat8 * u_xlat2.xxxx + u_xlat5;
					            u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(39.7299995, 41.0999985, 42.4700012, 43.8400002);
					            u_xlat8 = u_xlat5.xxyy * u_xlat6.zwzw;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.965925872, 0.258819014);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat9 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat11 * u_xlat9.xxxx + u_xlat7;
					            u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.866025388, 0.499999911);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					            u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					            u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.500000119, -0.866025329);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat5 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat5.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat5.xxxx + u_xlat2;
					            u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(45.2099991, 46.5800018, 47.9500008, 49.3199997);
					            u_xlat8 = u_xlat5.xxyy * u_xlat6.zwzw;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.5, 0.866025388);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat9 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat11 * u_xlat9.xxxx + u_xlat7;
					            u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.258819014, -0.965925813);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					            u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					            u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.258819103, 0.965925813);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, -1.0);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat5 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat5.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat5.xxxx + u_xlat2;
					            u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(50.6899986, 52.0600014, 53.4300003, 54.7999992);
					            u_xlat8 = u_xlat5.xxyy * u_xlat6.zwzw;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, 1.0);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat9 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat11 * u_xlat9.xxxx + u_xlat7;
					            u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.258818895, -0.965925813);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					            u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					            u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.258819193, 0.965925813);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.499999911, -0.866025388);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat5 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat5.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat5.xxxx + u_xlat2;
					            u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(56.170002, 57.5400009, 58.9099998, 60.2799988);
					            u_xlat8 = u_xlat5.xxyy * u_xlat6.zwzw;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.500000119, 0.866025388);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat9 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat11 * u_xlat9.xxxx + u_xlat7;
					            u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, -0.707106829);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					            u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					            u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.866025388, -0.5);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.965925813, -0.258819014);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat5 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat5.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat5.xxxx + u_xlat2;
					            u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(61.6500015, 63.0200005, 64.3899994, 65.7600021);
					            u_xlat8 = u_xlat5.xxyy * u_xlat6.zwzw;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(1.0, 0.0);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat9 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat11 * u_xlat9.xxxx + u_xlat7;
					            u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.965925813, 0.258819014);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					            u_xlat5 = u_xlat5.zzww * u_xlat6;
					            u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.866025388, 0.5);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat8 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat6.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat8.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat9.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat8.w = u_xlat39 * u_xlat8.z + 0.00100000005;
					            u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					            u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					            u_xlat6 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat9 * u_xlat6.xxxx + u_xlat7;
					            u_xlat2 = u_xlat8 * u_xlat6.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					            u_xlat26.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					            u_xlat6 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					            u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					            u_xlat26.x = sqrt(u_xlat26.x);
					            u_xlat26.x = u_xlat6.x * 10.0 + (-u_xlat26.x);
					            u_xlat26.x = u_xlat26.x + 0.25;
					            u_xlat26.x = u_xlat26.x * 4.0;
					            u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					            u_xlat0.x = u_xlat0.x * u_xlat26.x;
					            u_xlat26.x = (-u_xlat5.w) + _CoCParams1.z;
					            u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					            u_xlat39 = u_xlat6.y * u_xlat0.x;
					            u_xlat26.x = u_xlat26.x + 1.0;
					            u_xlat8.w = u_xlat39 * u_xlat26.x + 0.00100000005;
					            u_xlat6.w = u_xlat0.x * u_xlat6.z + 0.00100000005;
					            u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					            u_xlat6.xyz = u_xlat5.xyz * u_xlat6.www;
					            u_xlat5 = textureLod(_ExclusionMask, u_xlat1.xy, 0.0);
					            u_xlat4 = u_xlat8 * u_xlat5.xxxx + u_xlat7;
					            u_xlat3 = u_xlat6 * u_xlat5.xxxx + u_xlat2;
					        }
					    }
					    u_xlat0.x = max(u_xlat13, 0.5);
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat4.w;
					    u_xlat0.x = u_xlat0.x * 0.0641141385;
					    u_xlat0 = u_xlat0.xxxx;
					    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.w + 9.99999994e-09;
					    u_xlat1.xyz = u_xlat3.xyz / u_xlat1.xxx;
					    u_xlat2.x = u_xlat4.w + 9.99999994e-09;
					    u_xlat2.xyz = u_xlat4.xyz / u_xlat2.xxx;
					    u_xlat2.xyz = (-u_xlat1.xyz) + u_xlat2.xyz;
					    SV_Target0.xyz = u_xlat0.www * u_xlat2.xyz + u_xlat1.xyz;
					    SV_Target0.w = u_xlat1.w;
					    SV_Target1 = u_xlat0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _AvgCenterDepth;
					//   sampler2D _HalfResSourceDepthTexture;
					//   sampler2D _PresortTexture;
					//   float4 _ScionResolutionParameters1;
					//   float4 _ScionResolutionParameters2;
					//   float _TemporalUVOffset;
					//   sampler2D _TiledNeighbourhoodData;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters1 c0       1
					//   _ScionResolutionParameters2 c1       1
					//   _TemporalUVOffset           c2       1
					//   _TiledNeighbourhoodData     s0       1
					//   _HalfResSourceDepthTexture  s1       1
					//   _PresortTexture             s2       1
					//   _AvgCenterDepth             s3       1
					//
					
					    ps_3_0
					    def c3, 10, 0.00100000005, 0.571428478, 0
					    def c4, 1, 0, 0.5, 9.99999975e-005
					    def c5, 0.285714298, 0, 1.37, 0.707106829
					    def c6, 0.000231481477, 0.25, 0, 3571
					    def c7, -5, -6, -7, -8
					    def c8, 2, -1, -3, -4
					    def c9, -13, -14, -15, -16
					    def c10, -17, -18, -19, -20
					    def c11, -21, -22, -23, -24
					    def c12, 0.857142925, 25, -0.866025388, -0.499999911
					    def c13, -25, -26, -27, -28
					    def c14, -29, -30, -31, -32
					    def c15, -33, -34, -35, -36
					    def c16, -37, -38, -39, -40
					    def c17, -41, -42, -43, -44
					    def c18, -45, -46, -47, -48
					    def c19, 0.866025388, -0.5, 0.0641141385, 9.99999994e-009
					    def c20, 9, 10, 11, 12
					    def c21, -0.923879385, -0.382683486, 0.382683486, -0.382683396
					    def c22, 0.707106829, -0.707106829, 0, -1
					    def c23, -0.965925872, -0.258819014, 0.258819014, -0.965925813
					    def c24, -0.866025388, 0.499999911, 0.500000119, -0.866025329
					    def c25, 0.5, 0.866025388, 0.258819103, 0.965925813
					    def c26, -0.258818895, -0.965925813, -0.258819193, 0.965925813
					    defi i0, 8, 0, 0, 0
					    defi i1, 16, 0, 0, 0
					    defi i2, 24, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    dcl_2d s3
					    mul r0, c4.xxyy, v0.xyxx
					    texldl r1, r0, s0
					    texldl r2, r0, s1
					    if_lt r1.x, c4.x
					      mov oC1, c4.y
					    else
					      texldl r3, c4.zzyy, s3
					      texldl r0, r0, s2
					      add_sat r0.x, -r2.w, r3.x
					      add r0.x, r0.x, c4.x
					      mad r0.x, r0.y, r0.x, c4.w
					      add r0.y, r0.z, c4.w
					      mul r1.yzw, r0.x, r2.xxyz
					      mul r3.yzw, r0.y, r2.xxyz
					      mul r0.z, r1.x, c5.x
					      mul r4.xy, c0, v0
					      mov r5.zw, c4.y
					      mov r6.xyz, r3.yzww
					      mov r6.w, r0.y
					      mov r7.xyz, r1.yzww
					      mov r7.w, r0.x
					      mov r0.w, c4.x
					      rep i0
					        mov r4.z, c5.z
					        mad r4.z, r0.w, r4.z, c2.x
					        mul r4.zw, r4.z, r4.xyxy
					        mad r4.zw, r4, c6.x, c6.xyyz
					        dp2add r8.x, r4.zwzw, c6.w, c6.z
					        mul r4.zw, r4, r8.x
					        frc r4.zw, r4
					        mad r4.zw, r4, c8.x, c8.y
					        add r8, r0.w, -c8_abs.yxzw
					        add r9, r0.w, c7
					        cmp r10.xy, -r8_abs.x, c22, c22.z
					        cmp r8.xy, -r8_abs.y, c22.wzzw, r10
					        cmp r8.xy, -r8_abs.z, c5.w, r8
					        cmp r8.xy, -r8_abs.w, c22.zwzw, r8
					        cmp r8.xy, -r9_abs.x, c4.yxzw, r8
					        cmp r8.xy, -r9_abs.y, -c5.w, r8
					        cmp r8.xy, -r9_abs.z, c4, r8
					        cmp r8.xy, -r9_abs.w, c22.yxzw, r8
					        mad r4.zw, r4, c6.y, r8.xyxy
					        mul r4.zw, r0.z, r4
					        mad r5.xy, r4.zwzw, c1, v0
					        texldl r8, r5.xyww, s1
					        texldl r9, r5, s2
					        dp2add r4.z, r4.zwzw, r4.zwzw, c4.y
					        rsq r4.z, r4.z
					        rcp r4.z, r4.z
					        mad r4.z, r9.x, c3.x, -r4.z
					        add r4.z, r4.z, c6.y
					        mul_sat r4.z, r4.z, -c8.w
					        add_sat r4.w, r3.x, -r8.w
					        mul r5.x, r9.y, r4.z
					        add r4.w, r4.w, c4.x
					        mad r10.w, r5.x, r4.w, c3.y
					        mad r9.w, r4.z, r9.z, c3.y
					        mul r10.xyz, r8, r10.w
					        mul r9.xyz, r8, r9.w
					        add r7, r7, r10
					        add r6, r6, r9
					        add r0.w, r0.w, c4.x
					      endrep
					      if_lt c8.x, r1.x
					        add_sat r0.x, r1.x, -c8.x
					        mul r0.y, r1.x, c3.z
					        mov r5.zw, c4.y
					        mov r8, r6
					        mov r9, r7
					        mov r0.z, c20.x
					        rep i1
					          mov r1.z, c5.z
					          mad r0.w, r0.z, r1.z, c2.x
					          mul r1.yz, r0.w, r4.xxyw
					          mad r1.yz, r1, c6.x, c6
					          dp2add r0.w, r1.yzzw, c6.w, c6.z
					          mul r1.yz, r1, r0.w
					          frc r1.yz, r1
					          mad r1.yz, r1, c8.x, c8.y
					          add r10, r0.z, -c20
					          add r11, r0.z, c9
					          add r12, r0.z, c10
					          add r13, r0.z, c11
					          cmp r3.yz, -r10_abs.x, c22.xxyw, c22.z
					          cmp r3.yz, -r10_abs.y, c21.xxyw, r3
					          cmp r3.yz, -r10_abs.z, c22.xwzw, r3
					          cmp r3.yz, -r10_abs.w, c21.xxzw, r3
					          cmp r3.yz, -r11_abs.x, c5.w, r3
					          cmp r3.yz, -r11_abs.y, c21.xzxw, r3
					          cmp r3.yz, -r11_abs.z, -c21.xwxw, r3
					          cmp r3.yz, -r11_abs.w, c22.xzww, r3
					          cmp r3.yz, -r12_abs.x, c4.xyxw, r3
					          cmp r3.yz, -r12_abs.y, c21.xwxw, r3
					          cmp r3.yz, -r12_abs.z, -c21.xzxw, r3
					          cmp r3.yz, -r12_abs.w, -c5.w, r3
					          cmp r3.yz, -r13_abs.x, -c21.xxzw, r3
					          cmp r3.yz, -r13_abs.y, c4.xxyw, r3
					          cmp r3.yz, -r13_abs.z, -c21.xxyw, r3
					          cmp r3.yz, -r13_abs.w, c22.xyxw, r3
					          mad r1.yz, r1, c6.y, r3
					          mul r1.yz, r0.y, r1
					          mad r5.xy, r1.yzzw, c1, v0
					          texldl r10, r5.xyww, s1
					          texldl r11, r5, s2
					          dp2add r0.w, r1.yzzw, r1.yzzw, c4.y
					          rsq r0.w, r0.w
					          rcp r0.w, r0.w
					          mad r0.w, r11.x, c3.x, -r0.w
					          add r0.w, r0.w, c6.y
					          mul_sat r0.w, r0.w, -c8.w
					          mul r0.w, r0.x, r0.w
					          add_sat r1.y, r3.x, -r10.w
					          mul r1.z, r11.y, r0.w
					          add r1.y, r1.y, c4.x
					          mad r12.w, r1.z, r1.y, c3.y
					          mad r11.w, r0.w, r11.z, c3.y
					          mul r12.xyz, r10, r12.w
					          mul r11.xyz, r10, r11.w
					          add r9, r9, r12
					          add r8, r8, r11
					          add r0.z, r0.z, c4.x
					        endrep
					        mov r6, r8
					        mov r7, r9
					        if_lt -c8.w, r1.x
					          add_sat r0.x, r1.x, c8.w
					          mul r0.y, r1.x, c12.x
					          mov r5.zw, c4.y
					          mov r8, r6
					          mov r9, r7
					          mov r0.z, c12.y
					          rep i2
					            mov r1.z, c5.z
					            mad r0.w, r0.z, r1.z, c2.x
					            mul r1.yz, r0.w, r4.xxyw
					            mad r1.yz, r1, c6.x, c6
					            dp2add r0.w, r1.yzzw, c6.w, c6.z
					            mul r1.yz, r1, r0.w
					            frc r1.yz, r1
					            mad r1.yz, r1, c8.x, c8.y
					            add r10, r0.z, c13
					            add r11, r0.z, c14
					            add r12, r0.z, c15
					            add r13, r0.z, c16
					            add r14, r0.z, c17
					            add r15, r0.z, c18
					            cmp r3.yz, -r10_abs.x, c22.xxyw, c22.z
					            cmp r3.yz, -r10_abs.y, c12.xzww, r3
					            cmp r3.yz, -r10_abs.z, c23.xxyw, r3
					            cmp r3.yz, -r10_abs.w, c22.xwzw, r3
					            cmp r3.yz, -r11_abs.x, c23.xxzw, r3
					            cmp r3.yz, -r11_abs.y, c24.xxyw, r3
					            cmp r3.yz, -r11_abs.z, c22.xyxw, r3
					            cmp r3.yz, -r11_abs.w, c24.xzww, r3
					            cmp r3.yz, -r12_abs.x, c25.xxyw, r3
					            cmp r3.yz, -r12_abs.y, c23.xzww, r3
					            cmp r3.yz, -r12_abs.z, c25.xzww, r3
					            cmp r3.yz, -r12_abs.w, c22.xzww, r3
					            cmp r3.yz, -r13_abs.x, c4.xyxw, r3
					            cmp r3.yz, -r13_abs.y, c26.xxyw, r3
					            cmp r3.yz, -r13_abs.z, c26.xzww, r3
					            cmp r3.yz, -r13_abs.w, c12.xwzw, r3
					            cmp r3.yz, -r14_abs.x, -c24.xzxw, r3
					            cmp r3.yz, -r14_abs.y, -c5.w, r3
					            cmp r3.yz, -r14_abs.z, c19.xxyw, r3
					            cmp r3.yz, -r14_abs.w, -c23.xwzw, r3
					            cmp r3.yz, -r15_abs.x, c4.xxyw, r3
					            cmp r3.yz, -r15_abs.y, -c23.xwyw, r3
					            cmp r3.yz, -r15_abs.z, c25.xyxw, r3
					            cmp r3.yz, -r15_abs.w, c22.xyxw, r3
					            mad r1.yz, r1, c6.y, r3
					            mul r1.yz, r0.y, r1
					            mad r5.xy, r1.yzzw, c1, v0
					            texldl r10, r5.xyww, s1
					            texldl r11, r5, s2
					            dp2add r0.w, r1.yzzw, r1.yzzw, c4.y
					            rsq r0.w, r0.w
					            rcp r0.w, r0.w
					            mad r0.w, r11.x, c3.x, -r0.w
					            add r0.w, r0.w, c6.y
					            mul_sat r0.w, r0.w, -c8.w
					            mul r0.w, r0.x, r0.w
					            add_sat r1.y, r3.x, -r10.w
					            mul r1.z, r11.y, r0.w
					            add r1.y, r1.y, c4.x
					            mad r12.w, r1.z, r1.y, c3.y
					            mad r11.w, r0.w, r11.z, c3.y
					            mul r12.xyz, r10, r12.w
					            mul r11.xyz, r10, r11.w
					            add r9, r9, r12
					            add r8, r8, r11
					            add r0.z, r0.z, c4.x
					          endrep
					          mov r6, r8
					          mov r7, r9
					        endif
					      endif
					      max r0.x, r1.x, c4.z
					      mul r0.x, r0.x, r0.x
					      mul r0.x, r0.x, r7.w
					      mul r0.x, r0.x, c19.z
					      mov_sat r0, r0.x
					      add r1.x, r6.w, c19.w
					      rcp r1.x, r1.x
					      mul r1.xyz, r1.x, r6
					      add r1.w, r7.w, c19.w
					      rcp r1.w, r1.w
					      mad r3.xyz, r7, r1.w, -r1
					      mad r2.xyz, r0.w, r3, r1
					      mov oC1, r0
					    endif
					    mov oC0, r2
					
					// approximately 243 instruction slots used (20 texture, 223 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _ScionResolutionParameters1;
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_3[16];
						float _TemporalUVOffset;
					};
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _AvgCenterDepth;
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _PresortTexture;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					layout(location = 1) out vec4 SV_Target1;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec4 u_xlat12;
					vec2 u_xlat13;
					bool u_xlatb13;
					float u_xlat14;
					vec2 u_xlat15;
					vec2 u_xlat26;
					float u_xlat39;
					void main()
					{
					    u_xlat0 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlatb13 = u_xlat0.x<1.0;
					    if(u_xlatb13){
					        SV_Target0 = u_xlat1;
					        SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
					        return;
					    }
					    u_xlat2 = textureLod(_AvgCenterDepth, vec2(0.5, 0.5), 0.0);
					    u_xlat3 = textureLod(_PresortTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat13.x = (-u_xlat1.w) + u_xlat2.x;
					    u_xlat13.x = clamp(u_xlat13.x, 0.0, 1.0);
					    u_xlat13.x = u_xlat13.x + 1.0;
					    u_xlat4.w = u_xlat3.y * u_xlat13.x + 9.99999975e-05;
					    u_xlat3.w = u_xlat3.z + 9.99999975e-05;
					    u_xlat4.xyz = u_xlat1.xyz * u_xlat4.www;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat3.www;
					    u_xlat13.x = u_xlat0.x * 0.285714298;
					    u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(1.37, 2.74000001, 4.11000013, 5.48000002);
					    u_xlat6 = vs_TEXCOORD0.xyxy * _ScionResolutionParameters1.xyxy;
					    u_xlat7 = u_xlat5.xxyy * u_xlat6.zwzw;
					    u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat26.x = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					    u_xlat26.xy = u_xlat7.xy * u_xlat26.xx;
					    u_xlat26.xy = fract(u_xlat26.xy);
					    u_xlat26.xy = u_xlat26.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat26.xy = u_xlat26.xy * vec2(0.25, 0.25) + vec2(0.707106829, -0.707106829);
					    u_xlat26.xy = u_xlat13.xx * u_xlat26.xy;
					    u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					    u_xlat26.x = sqrt(u_xlat26.x);
					    u_xlat26.x = u_xlat9.x * 10.0 + (-u_xlat26.x);
					    u_xlat26.x = u_xlat26.x + 0.25;
					    u_xlat26.x = u_xlat26.x * 4.0;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat39 = u_xlat2.x + (-u_xlat8.w);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat9.y * u_xlat26.x;
					    u_xlat39 = u_xlat39 + 1.0;
					    u_xlat10.w = u_xlat1.x * u_xlat39 + 0.00100000005;
					    u_xlat9.w = u_xlat26.x * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat4 = u_xlat4 + u_xlat10;
					    u_xlat3 = u_xlat3 + u_xlat9;
					    u_xlat26.x = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					    u_xlat26.xy = u_xlat7.zw * u_xlat26.xx;
					    u_xlat26.xy = fract(u_xlat26.xy);
					    u_xlat26.xy = u_xlat26.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat26.xy = u_xlat26.xy * vec2(0.25, 0.25) + vec2(-1.0, 0.0);
					    u_xlat26.xy = u_xlat13.xx * u_xlat26.xy;
					    u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					    u_xlat26.x = sqrt(u_xlat26.x);
					    u_xlat26.x = u_xlat8.x * 10.0 + (-u_xlat26.x);
					    u_xlat26.x = u_xlat26.x + 0.25;
					    u_xlat26.x = u_xlat26.x * 4.0;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat39 = u_xlat2.x + (-u_xlat7.w);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat8.y * u_xlat26.x;
					    u_xlat39 = u_xlat39 + 1.0;
					    u_xlat9.w = u_xlat1.x * u_xlat39 + 0.00100000005;
					    u_xlat8.w = u_xlat26.x * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat4 = u_xlat4 + u_xlat9;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					    u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat26.x = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					    u_xlat26.xy = u_xlat5.xy * u_xlat26.xx;
					    u_xlat26.xy = fract(u_xlat26.xy);
					    u_xlat26.xy = u_xlat26.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat26.xy = u_xlat26.xy * vec2(0.25, 0.25) + vec2(0.707106829, 0.707106829);
					    u_xlat26.xy = u_xlat13.xx * u_xlat26.xy;
					    u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					    u_xlat26.x = sqrt(u_xlat26.x);
					    u_xlat26.x = u_xlat8.x * 10.0 + (-u_xlat26.x);
					    u_xlat26.x = u_xlat26.x + 0.25;
					    u_xlat26.x = u_xlat26.x * 4.0;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat39 = u_xlat2.x + (-u_xlat7.w);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat8.y * u_xlat26.x;
					    u_xlat39 = u_xlat39 + 1.0;
					    u_xlat9.w = u_xlat1.x * u_xlat39 + 0.00100000005;
					    u_xlat8.w = u_xlat26.x * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat4 = u_xlat4 + u_xlat9;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat26.x = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					    u_xlat26.xy = u_xlat5.zw * u_xlat26.xx;
					    u_xlat26.xy = fract(u_xlat26.xy);
					    u_xlat26.xy = u_xlat26.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat26.xy = u_xlat26.xy * vec2(0.25, 0.25) + vec2(0.0, -1.0);
					    u_xlat26.xy = u_xlat13.xx * u_xlat26.xy;
					    u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					    u_xlat26.x = sqrt(u_xlat26.x);
					    u_xlat26.x = u_xlat7.x * 10.0 + (-u_xlat26.x);
					    u_xlat26.x = u_xlat26.x + 0.25;
					    u_xlat26.x = u_xlat26.x * 4.0;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat39 = u_xlat2.x + (-u_xlat5.w);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat7.y * u_xlat26.x;
					    u_xlat39 = u_xlat39 + 1.0;
					    u_xlat8.w = u_xlat1.x * u_xlat39 + 0.00100000005;
					    u_xlat7.w = u_xlat26.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat5.xyz * u_xlat7.www;
					    u_xlat4 = u_xlat4 + u_xlat8;
					    u_xlat3 = u_xlat3 + u_xlat7;
					    u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(6.8499999, 8.22000027, 9.59000015, 10.96);
					    u_xlat7 = u_xlat5.xxyy * u_xlat6.zwzw;
					    u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat26.x = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					    u_xlat26.xy = u_xlat7.xy * u_xlat26.xx;
					    u_xlat26.xy = fract(u_xlat26.xy);
					    u_xlat26.xy = u_xlat26.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat26.xy = u_xlat26.xy * vec2(0.25, 0.25) + vec2(0.0, 1.0);
					    u_xlat26.xy = u_xlat13.xx * u_xlat26.xy;
					    u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					    u_xlat26.x = sqrt(u_xlat26.x);
					    u_xlat26.x = u_xlat9.x * 10.0 + (-u_xlat26.x);
					    u_xlat26.x = u_xlat26.x + 0.25;
					    u_xlat26.x = u_xlat26.x * 4.0;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat39 = u_xlat2.x + (-u_xlat8.w);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat9.y * u_xlat26.x;
					    u_xlat39 = u_xlat39 + 1.0;
					    u_xlat10.w = u_xlat1.x * u_xlat39 + 0.00100000005;
					    u_xlat9.w = u_xlat26.x * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat4 = u_xlat4 + u_xlat10;
					    u_xlat3 = u_xlat3 + u_xlat9;
					    u_xlat26.x = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					    u_xlat26.xy = u_xlat7.zw * u_xlat26.xx;
					    u_xlat26.xy = fract(u_xlat26.xy);
					    u_xlat26.xy = u_xlat26.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat26.xy = u_xlat26.xy * vec2(0.25, 0.25) + vec2(-0.707106829, -0.707106829);
					    u_xlat26.xy = u_xlat13.xx * u_xlat26.xy;
					    u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					    u_xlat26.x = sqrt(u_xlat26.x);
					    u_xlat26.x = u_xlat8.x * 10.0 + (-u_xlat26.x);
					    u_xlat26.x = u_xlat26.x + 0.25;
					    u_xlat26.x = u_xlat26.x * 4.0;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat39 = u_xlat2.x + (-u_xlat7.w);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat8.y * u_xlat26.x;
					    u_xlat39 = u_xlat39 + 1.0;
					    u_xlat9.w = u_xlat1.x * u_xlat39 + 0.00100000005;
					    u_xlat8.w = u_xlat26.x * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat4 = u_xlat4 + u_xlat9;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					    u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat26.x = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					    u_xlat26.xy = u_xlat5.xy * u_xlat26.xx;
					    u_xlat26.xy = fract(u_xlat26.xy);
					    u_xlat26.xy = u_xlat26.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat26.xy = u_xlat26.xy * vec2(0.25, 0.25) + vec2(1.0, 0.0);
					    u_xlat26.xy = u_xlat13.xx * u_xlat26.xy;
					    u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					    u_xlat26.x = sqrt(u_xlat26.x);
					    u_xlat26.x = u_xlat8.x * 10.0 + (-u_xlat26.x);
					    u_xlat26.x = u_xlat26.x + 0.25;
					    u_xlat26.x = u_xlat26.x * 4.0;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat39 = u_xlat2.x + (-u_xlat7.w);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat8.y * u_xlat26.x;
					    u_xlat39 = u_xlat39 + 1.0;
					    u_xlat9.w = u_xlat1.x * u_xlat39 + 0.00100000005;
					    u_xlat8.w = u_xlat26.x * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat4 = u_xlat4 + u_xlat9;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat26.x = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					    u_xlat26.xy = u_xlat5.zw * u_xlat26.xx;
					    u_xlat26.xy = fract(u_xlat26.xy);
					    u_xlat26.xy = u_xlat26.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat26.xy = u_xlat26.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					    u_xlat13.xy = u_xlat13.xx * u_xlat26.xy;
					    u_xlat1.xy = u_xlat13.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat13.x = dot(u_xlat13.xy, u_xlat13.xy);
					    u_xlat13.x = sqrt(u_xlat13.x);
					    u_xlat13.x = u_xlat7.x * 10.0 + (-u_xlat13.x);
					    u_xlat13.x = u_xlat13.x + 0.25;
					    u_xlat13.x = u_xlat13.x * 4.0;
					    u_xlat13.x = clamp(u_xlat13.x, 0.0, 1.0);
					    u_xlat26.x = u_xlat2.x + (-u_xlat5.w);
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat39 = u_xlat7.y * u_xlat13.x;
					    u_xlat26.x = u_xlat26.x + 1.0;
					    u_xlat8.w = u_xlat39 * u_xlat26.x + 0.00100000005;
					    u_xlat7.w = u_xlat13.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat5.xyz * u_xlat7.www;
					    u_xlat4 = u_xlat4 + u_xlat8;
					    u_xlat3 = u_xlat3 + u_xlat7;
					    u_xlatb13 = 2.0<u_xlat0.x;
					    if(u_xlatb13){
					        u_xlat13.x = u_xlat0.x + -2.0;
					        u_xlat13.x = clamp(u_xlat13.x, 0.0, 1.0);
					        u_xlat26.x = u_xlat0.x * 0.571428478;
					        u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(12.3299999, 13.6999998, 15.0699997, 16.4400005);
					        u_xlat7 = u_xlat5.xxyy * u_xlat6.zwzw;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, -0.707106829);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat8.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat9.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = u_xlat4 + u_xlat10;
					        u_xlat9 = u_xlat3 + u_xlat9;
					        u_xlat39 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.923879385, -0.382683486);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat7.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat7.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat7.xyz * u_xlat10.www;
					        u_xlat7 = u_xlat8 + u_xlat11;
					        u_xlat8 = u_xlat9 + u_xlat10;
					        u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					        u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-1.0, 0.0);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat7 = u_xlat7 + u_xlat11;
					        u_xlat8 = u_xlat8 + u_xlat10;
					        u_xlat39 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.923879385, 0.382683486);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat5.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat9.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat5.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat5.xyz * u_xlat9.www;
					        u_xlat5 = u_xlat7 + u_xlat10;
					        u_xlat7 = u_xlat8 + u_xlat9;
					        u_xlat8 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(17.8099995, 19.1800003, 20.5499992, 21.9200001);
					        u_xlat9 = u_xlat6.zwzw * u_xlat8.xxyy;
					        u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, 0.707106829);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat11.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat10.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat11.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat12.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat11.w = u_xlat39 * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					        u_xlat5 = u_xlat5 + u_xlat12;
					        u_xlat7 = u_xlat7 + u_xlat11;
					        u_xlat39 = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.382683486, -0.923879385);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat5 = u_xlat5 + u_xlat11;
					        u_xlat7 = u_xlat7 + u_xlat10;
					        u_xlat8 = u_xlat6.zwzw * u_xlat8.zzww;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.382683396, 0.923879385);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat5 = u_xlat5 + u_xlat11;
					        u_xlat7 = u_xlat7 + u_xlat10;
					        u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, -1.0);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat8.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat9.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat5 = u_xlat5 + u_xlat10;
					        u_xlat7 = u_xlat7 + u_xlat9;
					        u_xlat8 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(23.2900009, 24.6599998, 26.0300007, 27.3999996);
					        u_xlat9 = u_xlat6.zwzw * u_xlat8.xxyy;
					        u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, 1.0);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat11.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat10.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat11.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat12.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat11.w = u_xlat39 * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					        u_xlat5 = u_xlat5 + u_xlat12;
					        u_xlat7 = u_xlat7 + u_xlat11;
					        u_xlat39 = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.382683396, -0.923879385);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat5 = u_xlat5 + u_xlat11;
					        u_xlat7 = u_xlat7 + u_xlat10;
					        u_xlat8 = u_xlat6.zwzw * u_xlat8.zzww;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.382683486, 0.923879385);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat5 = u_xlat5 + u_xlat11;
					        u_xlat7 = u_xlat7 + u_xlat10;
					        u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, -0.707106829);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat8.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat9.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat5 = u_xlat5 + u_xlat10;
					        u_xlat7 = u_xlat7 + u_xlat9;
					        u_xlat8 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(28.7700005, 30.1399994, 31.5100002, 32.8800011);
					        u_xlat9 = u_xlat6.zwzw * u_xlat8.xxyy;
					        u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.923879385, -0.382683486);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat11.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat10.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat11.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat12.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat11.w = u_xlat39 * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					        u_xlat5 = u_xlat5 + u_xlat12;
					        u_xlat7 = u_xlat7 + u_xlat11;
					        u_xlat39 = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(1.0, 0.0);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat5 = u_xlat5 + u_xlat11;
					        u_xlat7 = u_xlat7 + u_xlat10;
					        u_xlat8 = u_xlat6.zwzw * u_xlat8.zzww;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.923879385, 0.382683486);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat5 = u_xlat5 + u_xlat11;
					        u_xlat7 = u_xlat7 + u_xlat10;
					        u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					        u_xlat26.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					        u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					        u_xlat26.x = sqrt(u_xlat26.x);
					        u_xlat26.x = u_xlat9.x * 10.0 + (-u_xlat26.x);
					        u_xlat26.x = u_xlat26.x + 0.25;
					        u_xlat26.x = u_xlat26.x * 4.0;
					        u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					        u_xlat13.x = u_xlat13.x * u_xlat26.x;
					        u_xlat26.x = u_xlat2.x + (-u_xlat8.w);
					        u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					        u_xlat39 = u_xlat9.y * u_xlat13.x;
					        u_xlat26.x = u_xlat26.x + 1.0;
					        u_xlat10.w = u_xlat39 * u_xlat26.x + 0.00100000005;
					        u_xlat9.w = u_xlat13.x * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat4 = u_xlat5 + u_xlat10;
					        u_xlat3 = u_xlat7 + u_xlat9;
					        u_xlatb13 = 4.0<u_xlat0.x;
					        if(u_xlatb13){
					            u_xlat13.x = u_xlat0.x + -4.0;
					            u_xlat13.x = clamp(u_xlat13.x, 0.0, 1.0);
					            u_xlat26.x = u_xlat0.x * 0.857142925;
					            u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(34.25, 35.6199989, 36.9900017, 38.3600006);
					            u_xlat7 = u_xlat5.xxyy * u_xlat6.zwzw;
					            u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat7.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, -0.707106829);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat8.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = u_xlat4 + u_xlat10;
					            u_xlat9 = u_xlat3 + u_xlat9;
					            u_xlat39 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat7.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.866025388, -0.499999911);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat7.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat7.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat7.xyz * u_xlat10.www;
					            u_xlat7 = u_xlat8 + u_xlat11;
					            u_xlat8 = u_xlat9 + u_xlat10;
					            u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					            u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.965925872, -0.258819014);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat7 = u_xlat7 + u_xlat11;
					            u_xlat8 = u_xlat8 + u_xlat10;
					            u_xlat39 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-1.0, 0.0);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat5.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat5.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat5.xyz * u_xlat9.www;
					            u_xlat5 = u_xlat7 + u_xlat10;
					            u_xlat7 = u_xlat8 + u_xlat9;
					            u_xlat8 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(39.7299995, 41.0999985, 42.4700012, 43.8400002);
					            u_xlat9 = u_xlat6.zwzw * u_xlat8.xxyy;
					            u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.965925872, 0.258819014);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat11 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat11.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat10.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat11.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat12.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat11.w = u_xlat39 * u_xlat11.z + 0.00100000005;
					            u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					            u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					            u_xlat5 = u_xlat5 + u_xlat12;
					            u_xlat7 = u_xlat7 + u_xlat11;
					            u_xlat39 = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.866025388, 0.499999911);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat5 = u_xlat5 + u_xlat11;
					            u_xlat7 = u_xlat7 + u_xlat10;
					            u_xlat8 = u_xlat6.zwzw * u_xlat8.zzww;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat5 = u_xlat5 + u_xlat11;
					            u_xlat7 = u_xlat7 + u_xlat10;
					            u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.500000119, -0.866025329);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat8.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat5 = u_xlat5 + u_xlat10;
					            u_xlat7 = u_xlat7 + u_xlat9;
					            u_xlat8 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(45.2099991, 46.5800018, 47.9500008, 49.3199997);
					            u_xlat9 = u_xlat6.zwzw * u_xlat8.xxyy;
					            u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.5, 0.866025388);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat11 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat11.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat10.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat11.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat12.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat11.w = u_xlat39 * u_xlat11.z + 0.00100000005;
					            u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					            u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					            u_xlat5 = u_xlat5 + u_xlat12;
					            u_xlat7 = u_xlat7 + u_xlat11;
					            u_xlat39 = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.258819014, -0.965925813);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat5 = u_xlat5 + u_xlat11;
					            u_xlat7 = u_xlat7 + u_xlat10;
					            u_xlat8 = u_xlat6.zwzw * u_xlat8.zzww;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.258819103, 0.965925813);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat5 = u_xlat5 + u_xlat11;
					            u_xlat7 = u_xlat7 + u_xlat10;
					            u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, -1.0);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat8.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat5 = u_xlat5 + u_xlat10;
					            u_xlat7 = u_xlat7 + u_xlat9;
					            u_xlat8 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(50.6899986, 52.0600014, 53.4300003, 54.7999992);
					            u_xlat9 = u_xlat6.zwzw * u_xlat8.xxyy;
					            u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, 1.0);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat11 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat11.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat10.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat11.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat12.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat11.w = u_xlat39 * u_xlat11.z + 0.00100000005;
					            u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					            u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					            u_xlat5 = u_xlat5 + u_xlat12;
					            u_xlat7 = u_xlat7 + u_xlat11;
					            u_xlat39 = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.258818895, -0.965925813);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat5 = u_xlat5 + u_xlat11;
					            u_xlat7 = u_xlat7 + u_xlat10;
					            u_xlat8 = u_xlat6.zwzw * u_xlat8.zzww;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.258819193, 0.965925813);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat5 = u_xlat5 + u_xlat11;
					            u_xlat7 = u_xlat7 + u_xlat10;
					            u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.499999911, -0.866025388);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat8.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat5 = u_xlat5 + u_xlat10;
					            u_xlat7 = u_xlat7 + u_xlat9;
					            u_xlat8 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(56.170002, 57.5400009, 58.9099998, 60.2799988);
					            u_xlat9 = u_xlat6.zwzw * u_xlat8.xxyy;
					            u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.500000119, 0.866025388);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat11 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat11.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat10.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat11.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat12.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat11.w = u_xlat39 * u_xlat11.z + 0.00100000005;
					            u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					            u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					            u_xlat5 = u_xlat5 + u_xlat12;
					            u_xlat7 = u_xlat7 + u_xlat11;
					            u_xlat39 = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, -0.707106829);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat5 = u_xlat5 + u_xlat11;
					            u_xlat7 = u_xlat7 + u_xlat10;
					            u_xlat8 = u_xlat6.zwzw * u_xlat8.zzww;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.866025388, -0.5);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat5 = u_xlat5 + u_xlat11;
					            u_xlat7 = u_xlat7 + u_xlat10;
					            u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.965925813, -0.258819014);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat8.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat5 = u_xlat5 + u_xlat10;
					            u_xlat7 = u_xlat7 + u_xlat9;
					            u_xlat8 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(61.6500015, 63.0200005, 64.3899994, 65.7600021);
					            u_xlat9 = u_xlat6.zwzw * u_xlat8.xxyy;
					            u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(1.0, 0.0);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat11 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat11.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat10.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat11.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat12.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat11.w = u_xlat39 * u_xlat11.z + 0.00100000005;
					            u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					            u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					            u_xlat5 = u_xlat5 + u_xlat12;
					            u_xlat7 = u_xlat7 + u_xlat11;
					            u_xlat39 = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.965925813, 0.258819014);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat5 = u_xlat5 + u_xlat11;
					            u_xlat7 = u_xlat7 + u_xlat10;
					            u_xlat6 = u_xlat6 * u_xlat8.zzww;
					            u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat6.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.866025388, 0.5);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat8.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat5 = u_xlat5 + u_xlat10;
					            u_xlat7 = u_xlat7 + u_xlat9;
					            u_xlat39 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat6.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					            u_xlat26.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					            u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					            u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					            u_xlat26.x = sqrt(u_xlat26.x);
					            u_xlat26.x = u_xlat8.x * 10.0 + (-u_xlat26.x);
					            u_xlat26.x = u_xlat26.x + 0.25;
					            u_xlat26.x = u_xlat26.x * 4.0;
					            u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					            u_xlat13.x = u_xlat13.x * u_xlat26.x;
					            u_xlat26.x = u_xlat2.x + (-u_xlat6.w);
					            u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					            u_xlat39 = u_xlat8.y * u_xlat13.x;
					            u_xlat26.x = u_xlat26.x + 1.0;
					            u_xlat2.w = u_xlat39 * u_xlat26.x + 0.00100000005;
					            u_xlat8.w = u_xlat13.x * u_xlat8.z + 0.00100000005;
					            u_xlat2.xyz = u_xlat2.www * u_xlat6.xyz;
					            u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					            u_xlat4 = u_xlat2 + u_xlat5;
					            u_xlat3 = u_xlat7 + u_xlat8;
					        }
					    }
					    u_xlat0.x = max(u_xlat0.x, 0.5);
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat4.w;
					    u_xlat0.x = u_xlat0.x * 0.0641141385;
					    u_xlat0 = u_xlat0.xxxx;
					    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.w + 9.99999994e-09;
					    u_xlat1.xyz = u_xlat3.xyz / u_xlat1.xxx;
					    u_xlat2.x = u_xlat4.w + 9.99999994e-09;
					    u_xlat2.xyz = u_xlat4.xyz / u_xlat2.xxx;
					    u_xlat2.xyz = (-u_xlat1.xyz) + u_xlat2.xyz;
					    SV_Target0.xyz = u_xlat0.www * u_xlat2.xyz + u_xlat1.xyz;
					    SV_Target0.w = u_xlat1.w;
					    SV_Target1 = u_xlat0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" "SC_DOF_MASK_ON" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _AvgCenterDepth;
					//   sampler2D _ExclusionMask;
					//   sampler2D _HalfResSourceDepthTexture;
					//   sampler2D _PresortTexture;
					//   float4 _ScionResolutionParameters1;
					//   float4 _ScionResolutionParameters2;
					//   float _TemporalUVOffset;
					//   sampler2D _TiledNeighbourhoodData;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters1 c0       1
					//   _ScionResolutionParameters2 c1       1
					//   _TemporalUVOffset           c2       1
					//   _TiledNeighbourhoodData     s0       1
					//   _ExclusionMask              s1       1
					//   _HalfResSourceDepthTexture  s2       1
					//   _PresortTexture             s3       1
					//   _AvgCenterDepth             s4       1
					//
					
					    ps_3_0
					    def c3, 1, 0, 0.5, 9.99999975e-005
					    def c4, 10, 0.00100000005, 0.571428478, 0
					    def c5, 0.285714298, 0, 1.37, 0.707106829
					    def c6, 0.000231481477, 0.25, 0, 3571
					    def c7, 2, -1, -3, -4
					    def c8, -5, -6, -7, -8
					    def c9, -13, -14, -15, -16
					    def c10, -17, -18, -19, -20
					    def c11, -21, -22, -23, -24
					    def c12, 0.857142925, 25, -0.866025388, -0.499999911
					    def c13, -25, -26, -27, -28
					    def c14, -29, -30, -31, -32
					    def c15, -33, -34, -35, -36
					    def c16, -37, -38, -39, -40
					    def c17, -41, -42, -43, -44
					    def c18, -45, -46, -47, -48
					    def c19, 0.866025388, -0.5, 0.0641141385, 9.99999994e-009
					    def c20, 9, 10, 11, 12
					    def c21, -0.923879385, -0.382683486, 0.382683486, -0.382683396
					    def c22, 0.707106829, -0.707106829, 0, -1
					    def c23, -0.965925872, -0.258819014, 0.258819014, -0.965925813
					    def c24, -0.866025388, 0.499999911, 0.500000119, -0.866025329
					    def c25, 0.5, 0.866025388, 0.258819103, 0.965925813
					    def c26, -0.258818895, -0.965925813, -0.258819193, 0.965925813
					    defi i0, 8, 0, 0, 0
					    defi i1, 16, 0, 0, 0
					    defi i2, 24, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    dcl_2d s3
					    dcl_2d s4
					    mul r0, c3.xxyy, v0.xyxx
					    texldl r1, r0, s0
					    texldl r2, r0, s2
					    texldl r3, r0, s1
					    mul r1.y, r1.x, r3.x
					    if_lt r1.y, c3.x
					      mov oC1, c3.y
					    else
					      texldl r4, c3.zzyy, s4
					      texldl r0, r0, s3
					      add_sat r0.x, -r2.w, r4.x
					      add r0.x, r0.x, c3.x
					      mad r0.x, r0.y, r0.x, c3.w
					      add r0.y, r0.z, c3.w
					      mul r3.yzw, r0.x, r2.xxyz
					      mul r4.yzw, r0.y, r2.xxyz
					      mul r0.z, r1.y, c5.x
					      mul r1.zw, c0.xyxy, v0.xyxy
					      mov r5.zw, c3.y
					      mov r6.xyz, r4.yzww
					      mov r6.w, r0.y
					      mov r7.xyz, r3.yzww
					      mov r7.w, r0.x
					      mov r0.w, c3.x
					      rep i0
					        mov r8.z, c5.z
					        mad r8.x, r0.w, r8.z, c2.x
					        mul r8.xy, r1.zwzw, r8.x
					        mad r8.xy, r8, c6.x, c6.yzzw
					        dp2add r8.z, r8, c6.w, c6.z
					        mul r8.xy, r8, r8.z
					        frc r8.xy, r8
					        mad r8.xy, r8, c7.x, c7.y
					        add r9, r0.w, -c7_abs.yxzw
					        add r10, r0.w, c8
					        cmp r8.zw, -r9_abs.x, c22.xyxy, c22.z
					        cmp r8.zw, -r9_abs.y, c22.xywz, r8
					        cmp r8.zw, -r9_abs.z, c5.w, r8
					        cmp r8.zw, -r9_abs.w, c22, r8
					        cmp r8.zw, -r10_abs.x, c3.xyyx, r8
					        cmp r8.zw, -r10_abs.y, -c5.w, r8
					        cmp r8.zw, -r10_abs.z, c3.xyxy, r8
					        cmp r8.zw, -r10_abs.w, c22.xyyx, r8
					        mad r8.xy, r8, c6.y, r8.zwzw
					        mul r8.xy, r0.z, r8
					        mad r5.xy, r8, c1, v0
					        texldl r9, r5.xyww, s2
					        texldl r10, r5.xyww, s3
					        dp2add r8.x, r8, r8, c3.y
					        rsq r8.x, r8.x
					        rcp r8.x, r8.x
					        mad r8.x, r10.x, c4.x, -r8.x
					        add r8.x, r8.x, c6.y
					        mul_sat r8.x, r8.x, -c7.w
					        add_sat r8.y, r4.x, -r9.w
					        mul r8.z, r10.y, r8.x
					        add r8.y, r8.y, c3.x
					        mad r11.w, r8.z, r8.y, c4.y
					        mad r8.w, r8.x, r10.z, c4.y
					        mul r11.xyz, r9, r11.w
					        mul r8.xyz, r8.w, r9
					        texldl r9, r5, s1
					        mad r7, r11, r9.x, r7
					        mad r6, r8, r9.x, r6
					        add r0.w, r0.w, c3.x
					      endrep
					      if_lt c7.x, r1.y
					        mad_sat r0.x, r1.x, r3.x, -c7.x
					        mul r0.y, r1.y, c4.z
					        mov r5.zw, c3.y
					        mov r8, r6
					        mov r9, r7
					        mov r0.z, c20.x
					        rep i1
					          mov r3.z, c5.z
					          mad r0.w, r0.z, r3.z, c2.x
					          mul r3.yz, r0.w, r1.xzww
					          mad r3.yz, r3, c6.x, c6
					          dp2add r0.w, r3.yzzw, c6.w, c6.z
					          mul r3.yz, r3, r0.w
					          frc r3.yz, r3
					          mad r3.yz, r3, c7.x, c7.y
					          add r10, r0.z, -c20
					          add r11, r0.z, c9
					          add r12, r0.z, c10
					          add r13, r0.z, c11
					          cmp r4.yz, -r10_abs.x, c22.xxyw, c22.z
					          cmp r4.yz, -r10_abs.y, c21.xxyw, r4
					          cmp r4.yz, -r10_abs.z, c22.xwzw, r4
					          cmp r4.yz, -r10_abs.w, c21.xxzw, r4
					          cmp r4.yz, -r11_abs.x, c5.w, r4
					          cmp r4.yz, -r11_abs.y, c21.xzxw, r4
					          cmp r4.yz, -r11_abs.z, -c21.xwxw, r4
					          cmp r4.yz, -r11_abs.w, c22.xzww, r4
					          cmp r4.yz, -r12_abs.x, c3.xyxw, r4
					          cmp r4.yz, -r12_abs.y, c21.xwxw, r4
					          cmp r4.yz, -r12_abs.z, -c21.xzxw, r4
					          cmp r4.yz, -r12_abs.w, -c5.w, r4
					          cmp r4.yz, -r13_abs.x, -c21.xxzw, r4
					          cmp r4.yz, -r13_abs.y, c3.xxyw, r4
					          cmp r4.yz, -r13_abs.z, -c21.xxyw, r4
					          cmp r4.yz, -r13_abs.w, c22.xyxw, r4
					          mad r3.yz, r3, c6.y, r4
					          mul r3.yz, r0.y, r3
					          mad r5.xy, r3.yzzw, c1, v0
					          texldl r10, r5.xyww, s2
					          texldl r11, r5.xyww, s3
					          dp2add r0.w, r3.yzzw, r3.yzzw, c3.y
					          rsq r0.w, r0.w
					          rcp r0.w, r0.w
					          mad r0.w, r11.x, c4.x, -r0.w
					          add r0.w, r0.w, c6.y
					          mul_sat r0.w, r0.w, -c7.w
					          mul r0.w, r0.x, r0.w
					          add_sat r3.y, r4.x, -r10.w
					          mul r3.z, r11.y, r0.w
					          add r3.y, r3.y, c3.x
					          mad r12.w, r3.z, r3.y, c4.y
					          mad r11.w, r0.w, r11.z, c4.y
					          mul r12.xyz, r10, r12.w
					          mul r11.xyz, r10, r11.w
					          texldl r10, r5, s1
					          mad r9, r12, r10.x, r9
					          mad r8, r11, r10.x, r8
					          add r0.z, r0.z, c3.x
					        endrep
					        mov r6, r8
					        mov r7, r9
					        if_lt -c7.w, r1.y
					          mad_sat r0.x, r1.x, r3.x, c7.w
					          mul r0.y, r1.y, c12.x
					          mov r3.zw, c3.y
					          mov r5, r6
					          mov r8, r7
					          mov r0.z, c12.y
					          rep i2
					            mov r4.z, c5.z
					            mad r0.w, r0.z, r4.z, c2.x
					            mul r4.yz, r0.w, r1.xzww
					            mad r4.yz, r4, c6.x, c6
					            dp2add r0.w, r4.yzzw, c6.w, c6.z
					            mul r4.yz, r4, r0.w
					            frc r4.yz, r4
					            mad r4.yz, r4, c7.x, c7.y
					            add r9, r0.z, c13
					            add r10, r0.z, c14
					            add r11, r0.z, c15
					            add r12, r0.z, c16
					            add r13, r0.z, c17
					            add r14, r0.z, c18
					            cmp r15.xy, -r9_abs.x, c22, c22.z
					            cmp r9.xy, -r9_abs.y, c12.zwzw, r15
					            cmp r9.xy, -r9_abs.z, c23, r9
					            cmp r9.xy, -r9_abs.w, c22.wzzw, r9
					            cmp r9.xy, -r10_abs.x, c23.xzzw, r9
					            cmp r9.xy, -r10_abs.y, c24, r9
					            cmp r9.xy, -r10_abs.z, c22.yxzw, r9
					            cmp r9.xy, -r10_abs.w, c24.zwzw, r9
					            cmp r9.xy, -r11_abs.x, c25, r9
					            cmp r9.xy, -r11_abs.y, c23.zwzw, r9
					            cmp r9.xy, -r11_abs.z, c25.zwzw, r9
					            cmp r9.xy, -r11_abs.w, c22.zwzw, r9
					            cmp r9.xy, -r12_abs.x, c3.yxzw, r9
					            cmp r9.xy, -r12_abs.y, c26, r9
					            cmp r9.xy, -r12_abs.z, c26.zwzw, r9
					            cmp r9.xy, -r12_abs.w, c12.wzzw, r9
					            cmp r9.xy, -r13_abs.x, -c24.zxzw, r9
					            cmp r9.xy, -r13_abs.y, -c5.w, r9
					            cmp r9.xy, -r13_abs.z, c19, r9
					            cmp r9.xy, -r13_abs.w, -c23.wzzw, r9
					            cmp r9.xy, -r14_abs.x, c3, r9
					            cmp r9.xy, -r14_abs.y, -c23.wyzw, r9
					            cmp r9.xy, -r14_abs.z, c25.yxzw, r9
					            cmp r9.xy, -r14_abs.w, c22.yxzw, r9
					            mad r4.yz, r4, c6.y, r9.xxyw
					            mul r4.yz, r0.y, r4
					            mad r3.xy, r4.yzzw, c1, v0
					            texldl r9, r3.xyww, s2
					            texldl r10, r3.xyww, s3
					            dp2add r0.w, r4.yzzw, r4.yzzw, c3.y
					            rsq r0.w, r0.w
					            rcp r0.w, r0.w
					            mad r0.w, r10.x, c4.x, -r0.w
					            add r0.w, r0.w, c6.y
					            mul_sat r0.w, r0.w, -c7.w
					            mul r0.w, r0.x, r0.w
					            add_sat r1.x, r4.x, -r9.w
					            mul r4.y, r10.y, r0.w
					            add r1.x, r1.x, c3.x
					            mad r11.w, r4.y, r1.x, c4.y
					            mad r10.w, r0.w, r10.z, c4.y
					            mul r11.xyz, r9, r11.w
					            mul r10.xyz, r9, r10.w
					            texldl r9, r3, s1
					            mad r8, r11, r9.x, r8
					            mad r5, r10, r9.x, r5
					            add r0.z, r0.z, c3.x
					          endrep
					          mov r6, r5
					          mov r7, r8
					        endif
					      endif
					      max r0.x, r1.y, c3.z
					      mul r0.x, r0.x, r0.x
					      mul r0.x, r0.x, r7.w
					      mul r0.x, r0.x, c19.z
					      mov_sat r0, r0.x
					      add r1.x, r6.w, c19.w
					      rcp r1.x, r1.x
					      mul r1.xyz, r1.x, r6
					      add r1.w, r7.w, c19.w
					      rcp r1.w, r1.w
					      mad r3.xyz, r7, r1.w, -r1
					      mad r2.xyz, r0.w, r3, r1
					      mov oC1, r0
					    endif
					    mov oC0, r2
					
					// approximately 252 instruction slots used (28 texture, 224 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" "SC_DOF_MASK_ON" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _ScionResolutionParameters1;
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_3[16];
						float _TemporalUVOffset;
					};
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _AvgCenterDepth;
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _ExclusionMask;
					uniform  sampler2D _PresortTexture;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					layout(location = 1) out vec4 SV_Target1;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec4 u_xlat12;
					vec4 u_xlat13;
					float u_xlat14;
					float u_xlat15;
					vec2 u_xlat16;
					vec2 u_xlat17;
					vec2 u_xlat28;
					bool u_xlatb28;
					float u_xlat29;
					float u_xlat42;
					void main()
					{
					    u_xlat0 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat2 = textureLod(_ExclusionMask, vs_TEXCOORD0.xy, 0.0);
					    u_xlat14 = u_xlat0.x * u_xlat2.x;
					    u_xlatb28 = u_xlat14<1.0;
					    if(u_xlatb28){
					        SV_Target0 = u_xlat1;
					        SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
					        return;
					    }
					    u_xlat3 = textureLod(_AvgCenterDepth, vec2(0.5, 0.5), 0.0);
					    u_xlat4 = textureLod(_PresortTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat28.x = (-u_xlat1.w) + u_xlat3.x;
					    u_xlat28.x = clamp(u_xlat28.x, 0.0, 1.0);
					    u_xlat28.x = u_xlat28.x + 1.0;
					    u_xlat5.w = u_xlat4.y * u_xlat28.x + 9.99999975e-05;
					    u_xlat4.w = u_xlat4.z + 9.99999975e-05;
					    u_xlat5.xyz = u_xlat1.xyz * u_xlat5.www;
					    u_xlat4.xyz = u_xlat1.xyz * u_xlat4.www;
					    u_xlat28.x = u_xlat14 * 0.285714298;
					    u_xlat6 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(1.37, 2.74000001, 4.11000013, 5.48000002);
					    u_xlat7 = vs_TEXCOORD0.xyxy * _ScionResolutionParameters1.xyxy;
					    u_xlat8 = u_xlat6.xxyy * u_xlat7.zwzw;
					    u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat42 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat8.xy * vec2(u_xlat42);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, -0.707106829);
					    u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					    u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					    u_xlat10 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					    u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat42 = sqrt(u_xlat42);
					    u_xlat42 = u_xlat10.x * 10.0 + (-u_xlat42);
					    u_xlat42 = u_xlat42 + 0.25;
					    u_xlat42 = u_xlat42 * 4.0;
					    u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.x + (-u_xlat9.w);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat15 = u_xlat10.y * u_xlat42;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat11.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					    u_xlat10.w = u_xlat42 * u_xlat10.z + 0.00100000005;
					    u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					    u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					    u_xlat9 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					    u_xlat5 = u_xlat11 * u_xlat9.xxxx + u_xlat5;
					    u_xlat4 = u_xlat10 * u_xlat9.xxxx + u_xlat4;
					    u_xlat42 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat8.zw * vec2(u_xlat42);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-1.0, 0.0);
					    u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					    u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					    u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat42 = sqrt(u_xlat42);
					    u_xlat42 = u_xlat9.x * 10.0 + (-u_xlat42);
					    u_xlat42 = u_xlat42 + 0.25;
					    u_xlat42 = u_xlat42 * 4.0;
					    u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.x + (-u_xlat8.w);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat15 = u_xlat9.y * u_xlat42;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat10.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					    u_xlat9.w = u_xlat42 * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat8 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					    u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					    u_xlat4 = u_xlat9 * u_xlat8.xxxx + u_xlat4;
					    u_xlat6 = u_xlat6.zzww * u_xlat7.zwzw;
					    u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat42 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat6.xy * vec2(u_xlat42);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, 0.707106829);
					    u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					    u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					    u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat42 = sqrt(u_xlat42);
					    u_xlat42 = u_xlat9.x * 10.0 + (-u_xlat42);
					    u_xlat42 = u_xlat42 + 0.25;
					    u_xlat42 = u_xlat42 * 4.0;
					    u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.x + (-u_xlat8.w);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat15 = u_xlat9.y * u_xlat42;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat10.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					    u_xlat9.w = u_xlat42 * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat8 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					    u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					    u_xlat4 = u_xlat9 * u_xlat8.xxxx + u_xlat4;
					    u_xlat42 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat6.zw * vec2(u_xlat42);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, -1.0);
					    u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					    u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					    u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat42 = sqrt(u_xlat42);
					    u_xlat42 = u_xlat8.x * 10.0 + (-u_xlat42);
					    u_xlat42 = u_xlat42 + 0.25;
					    u_xlat42 = u_xlat42 * 4.0;
					    u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.x + (-u_xlat6.w);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat15 = u_xlat8.y * u_xlat42;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat9.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					    u_xlat8.w = u_xlat42 * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat6 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					    u_xlat5 = u_xlat9 * u_xlat6.xxxx + u_xlat5;
					    u_xlat4 = u_xlat8 * u_xlat6.xxxx + u_xlat4;
					    u_xlat6 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(6.8499999, 8.22000027, 9.59000015, 10.96);
					    u_xlat8 = u_xlat6.xxyy * u_xlat7.zwzw;
					    u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat42 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat8.xy * vec2(u_xlat42);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, 1.0);
					    u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					    u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					    u_xlat10 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					    u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat42 = sqrt(u_xlat42);
					    u_xlat42 = u_xlat10.x * 10.0 + (-u_xlat42);
					    u_xlat42 = u_xlat42 + 0.25;
					    u_xlat42 = u_xlat42 * 4.0;
					    u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.x + (-u_xlat9.w);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat15 = u_xlat10.y * u_xlat42;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat11.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					    u_xlat10.w = u_xlat42 * u_xlat10.z + 0.00100000005;
					    u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					    u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					    u_xlat9 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					    u_xlat5 = u_xlat11 * u_xlat9.xxxx + u_xlat5;
					    u_xlat4 = u_xlat10 * u_xlat9.xxxx + u_xlat4;
					    u_xlat42 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat8.zw * vec2(u_xlat42);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, -0.707106829);
					    u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					    u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					    u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat42 = sqrt(u_xlat42);
					    u_xlat42 = u_xlat9.x * 10.0 + (-u_xlat42);
					    u_xlat42 = u_xlat42 + 0.25;
					    u_xlat42 = u_xlat42 * 4.0;
					    u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.x + (-u_xlat8.w);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat15 = u_xlat9.y * u_xlat42;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat10.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					    u_xlat9.w = u_xlat42 * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat8 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					    u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					    u_xlat4 = u_xlat9 * u_xlat8.xxxx + u_xlat4;
					    u_xlat6 = u_xlat6.zzww * u_xlat7.zwzw;
					    u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat42 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat6.xy * vec2(u_xlat42);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(1.0, 0.0);
					    u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					    u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					    u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat42 = sqrt(u_xlat42);
					    u_xlat42 = u_xlat9.x * 10.0 + (-u_xlat42);
					    u_xlat42 = u_xlat42 + 0.25;
					    u_xlat42 = u_xlat42 * 4.0;
					    u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.x + (-u_xlat8.w);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat15 = u_xlat9.y * u_xlat42;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat10.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					    u_xlat9.w = u_xlat42 * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat8 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					    u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					    u_xlat4 = u_xlat9 * u_xlat8.xxxx + u_xlat4;
					    u_xlat42 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat6.zw * vec2(u_xlat42);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					    u_xlat28.xy = u_xlat28.xx * u_xlat1.xy;
					    u_xlat1.xy = u_xlat28.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat28.x = dot(u_xlat28.xy, u_xlat28.xy);
					    u_xlat28.x = sqrt(u_xlat28.x);
					    u_xlat28.x = u_xlat8.x * 10.0 + (-u_xlat28.x);
					    u_xlat28.x = u_xlat28.x + 0.25;
					    u_xlat28.x = u_xlat28.x * 4.0;
					    u_xlat28.x = clamp(u_xlat28.x, 0.0, 1.0);
					    u_xlat42 = u_xlat3.x + (-u_xlat6.w);
					    u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					    u_xlat29 = u_xlat8.y * u_xlat28.x;
					    u_xlat42 = u_xlat42 + 1.0;
					    u_xlat9.w = u_xlat29 * u_xlat42 + 0.00100000005;
					    u_xlat8.w = u_xlat28.x * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat6 = textureLod(_ExclusionMask, u_xlat1.xy, 0.0);
					    u_xlat5 = u_xlat9 * u_xlat6.xxxx + u_xlat5;
					    u_xlat4 = u_xlat8 * u_xlat6.xxxx + u_xlat4;
					    u_xlatb28 = 2.0<u_xlat14;
					    if(u_xlatb28){
					        u_xlat28.x = u_xlat0.x * u_xlat2.x + -2.0;
					        u_xlat28.x = clamp(u_xlat28.x, 0.0, 1.0);
					        u_xlat42 = u_xlat14 * 0.571428478;
					        u_xlat6 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(12.3299999, 13.6999998, 15.0699997, 16.4400005);
					        u_xlat8 = u_xlat6.xxyy * u_xlat7.zwzw;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, -0.707106829);
					        u_xlat1.xy = vec2(u_xlat42) * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat10.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat28.x * u_xlat1.x;
					        u_xlat15 = u_xlat3.x + (-u_xlat9.w);
					        u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					        u_xlat29 = u_xlat10.y * u_xlat1.x;
					        u_xlat15 = u_xlat15 + 1.0;
					        u_xlat11.w = u_xlat29 * u_xlat15 + 0.00100000005;
					        u_xlat10.w = u_xlat1.x * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat9 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat11 = u_xlat11 * u_xlat9.xxxx + u_xlat5;
					        u_xlat9 = u_xlat10 * u_xlat9.xxxx + u_xlat4;
					        u_xlat1.x = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.923879385, -0.382683486);
					        u_xlat1.xy = vec2(u_xlat42) * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat10.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat28.x * u_xlat1.x;
					        u_xlat15 = u_xlat3.x + (-u_xlat8.w);
					        u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					        u_xlat29 = u_xlat10.y * u_xlat1.x;
					        u_xlat15 = u_xlat15 + 1.0;
					        u_xlat12.w = u_xlat29 * u_xlat15 + 0.00100000005;
					        u_xlat10.w = u_xlat1.x * u_xlat10.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat8.xyz * u_xlat12.www;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat11 = u_xlat12 * u_xlat8.xxxx + u_xlat11;
					        u_xlat8 = u_xlat10 * u_xlat8.xxxx + u_xlat9;
					        u_xlat6 = u_xlat6.zzww * u_xlat7.zwzw;
					        u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-1.0, 0.0);
					        u_xlat1.xy = vec2(u_xlat42) * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat10.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat28.x * u_xlat1.x;
					        u_xlat15 = u_xlat3.x + (-u_xlat9.w);
					        u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					        u_xlat29 = u_xlat10.y * u_xlat1.x;
					        u_xlat15 = u_xlat15 + 1.0;
					        u_xlat12.w = u_xlat29 * u_xlat15 + 0.00100000005;
					        u_xlat10.w = u_xlat1.x * u_xlat10.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat9.xyz * u_xlat12.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat9 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat11 = u_xlat12 * u_xlat9.xxxx + u_xlat11;
					        u_xlat8 = u_xlat10 * u_xlat9.xxxx + u_xlat8;
					        u_xlat1.x = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.923879385, 0.382683486);
					        u_xlat1.xy = vec2(u_xlat42) * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat9.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat28.x * u_xlat1.x;
					        u_xlat15 = u_xlat3.x + (-u_xlat6.w);
					        u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					        u_xlat29 = u_xlat9.y * u_xlat1.x;
					        u_xlat15 = u_xlat15 + 1.0;
					        u_xlat10.w = u_xlat29 * u_xlat15 + 0.00100000005;
					        u_xlat9.w = u_xlat1.x * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat6.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					        u_xlat6 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat10 = u_xlat10 * u_xlat6.xxxx + u_xlat11;
					        u_xlat6 = u_xlat9 * u_xlat6.xxxx + u_xlat8;
					        u_xlat8 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(17.8099995, 19.1800003, 20.5499992, 21.9200001);
					        u_xlat9 = u_xlat7.zwzw * u_xlat8.xxyy;
					        u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, 0.707106829);
					        u_xlat1.xy = vec2(u_xlat42) * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat11 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat12 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat12.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat28.x * u_xlat1.x;
					        u_xlat15 = u_xlat3.x + (-u_xlat11.w);
					        u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					        u_xlat29 = u_xlat12.y * u_xlat1.x;
					        u_xlat15 = u_xlat15 + 1.0;
					        u_xlat13.w = u_xlat29 * u_xlat15 + 0.00100000005;
					        u_xlat12.w = u_xlat1.x * u_xlat12.z + 0.00100000005;
					        u_xlat13.xyz = u_xlat11.xyz * u_xlat13.www;
					        u_xlat12.xyz = u_xlat11.xyz * u_xlat12.www;
					        u_xlat11 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat10 = u_xlat13 * u_xlat11.xxxx + u_xlat10;
					        u_xlat6 = u_xlat12 * u_xlat11.xxxx + u_xlat6;
					        u_xlat1.x = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.382683486, -0.923879385);
					        u_xlat1.xy = vec2(u_xlat42) * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat11.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat28.x * u_xlat1.x;
					        u_xlat15 = u_xlat3.x + (-u_xlat9.w);
					        u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					        u_xlat29 = u_xlat11.y * u_xlat1.x;
					        u_xlat15 = u_xlat15 + 1.0;
					        u_xlat12.w = u_xlat29 * u_xlat15 + 0.00100000005;
					        u_xlat11.w = u_xlat1.x * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat9.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat9 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat10 = u_xlat12 * u_xlat9.xxxx + u_xlat10;
					        u_xlat6 = u_xlat11 * u_xlat9.xxxx + u_xlat6;
					        u_xlat8 = u_xlat7.zwzw * u_xlat8.zzww;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.382683396, 0.923879385);
					        u_xlat1.xy = vec2(u_xlat42) * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat11.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat28.x * u_xlat1.x;
					        u_xlat15 = u_xlat3.x + (-u_xlat9.w);
					        u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					        u_xlat29 = u_xlat11.y * u_xlat1.x;
					        u_xlat15 = u_xlat15 + 1.0;
					        u_xlat12.w = u_xlat29 * u_xlat15 + 0.00100000005;
					        u_xlat11.w = u_xlat1.x * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat9.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat9 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat10 = u_xlat12 * u_xlat9.xxxx + u_xlat10;
					        u_xlat6 = u_xlat11 * u_xlat9.xxxx + u_xlat6;
					        u_xlat1.x = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, -1.0);
					        u_xlat1.xy = vec2(u_xlat42) * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat9.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat28.x * u_xlat1.x;
					        u_xlat15 = u_xlat3.x + (-u_xlat8.w);
					        u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					        u_xlat29 = u_xlat9.y * u_xlat1.x;
					        u_xlat15 = u_xlat15 + 1.0;
					        u_xlat11.w = u_xlat29 * u_xlat15 + 0.00100000005;
					        u_xlat9.w = u_xlat1.x * u_xlat9.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat10 = u_xlat11 * u_xlat8.xxxx + u_xlat10;
					        u_xlat6 = u_xlat9 * u_xlat8.xxxx + u_xlat6;
					        u_xlat8 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(23.2900009, 24.6599998, 26.0300007, 27.3999996);
					        u_xlat9 = u_xlat7.zwzw * u_xlat8.xxyy;
					        u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, 1.0);
					        u_xlat1.xy = vec2(u_xlat42) * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat11 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat12 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat12.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat28.x * u_xlat1.x;
					        u_xlat15 = u_xlat3.x + (-u_xlat11.w);
					        u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					        u_xlat29 = u_xlat12.y * u_xlat1.x;
					        u_xlat15 = u_xlat15 + 1.0;
					        u_xlat13.w = u_xlat29 * u_xlat15 + 0.00100000005;
					        u_xlat12.w = u_xlat1.x * u_xlat12.z + 0.00100000005;
					        u_xlat13.xyz = u_xlat11.xyz * u_xlat13.www;
					        u_xlat12.xyz = u_xlat11.xyz * u_xlat12.www;
					        u_xlat11 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat10 = u_xlat13 * u_xlat11.xxxx + u_xlat10;
					        u_xlat6 = u_xlat12 * u_xlat11.xxxx + u_xlat6;
					        u_xlat1.x = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.382683396, -0.923879385);
					        u_xlat1.xy = vec2(u_xlat42) * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat11.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat28.x * u_xlat1.x;
					        u_xlat15 = u_xlat3.x + (-u_xlat9.w);
					        u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					        u_xlat29 = u_xlat11.y * u_xlat1.x;
					        u_xlat15 = u_xlat15 + 1.0;
					        u_xlat12.w = u_xlat29 * u_xlat15 + 0.00100000005;
					        u_xlat11.w = u_xlat1.x * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat9.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat9 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat10 = u_xlat12 * u_xlat9.xxxx + u_xlat10;
					        u_xlat6 = u_xlat11 * u_xlat9.xxxx + u_xlat6;
					        u_xlat8 = u_xlat7.zwzw * u_xlat8.zzww;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.382683486, 0.923879385);
					        u_xlat1.xy = vec2(u_xlat42) * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat11.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat28.x * u_xlat1.x;
					        u_xlat15 = u_xlat3.x + (-u_xlat9.w);
					        u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					        u_xlat29 = u_xlat11.y * u_xlat1.x;
					        u_xlat15 = u_xlat15 + 1.0;
					        u_xlat12.w = u_xlat29 * u_xlat15 + 0.00100000005;
					        u_xlat11.w = u_xlat1.x * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat9.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat9 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat10 = u_xlat12 * u_xlat9.xxxx + u_xlat10;
					        u_xlat6 = u_xlat11 * u_xlat9.xxxx + u_xlat6;
					        u_xlat1.x = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, -0.707106829);
					        u_xlat1.xy = vec2(u_xlat42) * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat9.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat28.x * u_xlat1.x;
					        u_xlat15 = u_xlat3.x + (-u_xlat8.w);
					        u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					        u_xlat29 = u_xlat9.y * u_xlat1.x;
					        u_xlat15 = u_xlat15 + 1.0;
					        u_xlat11.w = u_xlat29 * u_xlat15 + 0.00100000005;
					        u_xlat9.w = u_xlat1.x * u_xlat9.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat10 = u_xlat11 * u_xlat8.xxxx + u_xlat10;
					        u_xlat6 = u_xlat9 * u_xlat8.xxxx + u_xlat6;
					        u_xlat8 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(28.7700005, 30.1399994, 31.5100002, 32.8800011);
					        u_xlat9 = u_xlat7.zwzw * u_xlat8.xxyy;
					        u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.923879385, -0.382683486);
					        u_xlat1.xy = vec2(u_xlat42) * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat11 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat12 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat12.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat28.x * u_xlat1.x;
					        u_xlat15 = u_xlat3.x + (-u_xlat11.w);
					        u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					        u_xlat29 = u_xlat12.y * u_xlat1.x;
					        u_xlat15 = u_xlat15 + 1.0;
					        u_xlat13.w = u_xlat29 * u_xlat15 + 0.00100000005;
					        u_xlat12.w = u_xlat1.x * u_xlat12.z + 0.00100000005;
					        u_xlat13.xyz = u_xlat11.xyz * u_xlat13.www;
					        u_xlat12.xyz = u_xlat11.xyz * u_xlat12.www;
					        u_xlat11 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat10 = u_xlat13 * u_xlat11.xxxx + u_xlat10;
					        u_xlat6 = u_xlat12 * u_xlat11.xxxx + u_xlat6;
					        u_xlat1.x = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(1.0, 0.0);
					        u_xlat1.xy = vec2(u_xlat42) * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat11.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat28.x * u_xlat1.x;
					        u_xlat15 = u_xlat3.x + (-u_xlat9.w);
					        u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					        u_xlat29 = u_xlat11.y * u_xlat1.x;
					        u_xlat15 = u_xlat15 + 1.0;
					        u_xlat12.w = u_xlat29 * u_xlat15 + 0.00100000005;
					        u_xlat11.w = u_xlat1.x * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat9.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat9 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat10 = u_xlat12 * u_xlat9.xxxx + u_xlat10;
					        u_xlat6 = u_xlat11 * u_xlat9.xxxx + u_xlat6;
					        u_xlat8 = u_xlat7.zwzw * u_xlat8.zzww;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.923879385, 0.382683486);
					        u_xlat1.xy = vec2(u_xlat42) * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat11.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat28.x * u_xlat1.x;
					        u_xlat15 = u_xlat3.x + (-u_xlat9.w);
					        u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					        u_xlat29 = u_xlat11.y * u_xlat1.x;
					        u_xlat15 = u_xlat15 + 1.0;
					        u_xlat12.w = u_xlat29 * u_xlat15 + 0.00100000005;
					        u_xlat11.w = u_xlat1.x * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat9.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat9 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat10 = u_xlat12 * u_xlat9.xxxx + u_xlat10;
					        u_xlat6 = u_xlat11 * u_xlat9.xxxx + u_xlat6;
					        u_xlat1.x = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					        u_xlat1.xy = vec2(u_xlat42) * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat42 = sqrt(u_xlat42);
					        u_xlat42 = u_xlat9.x * 10.0 + (-u_xlat42);
					        u_xlat42 = u_xlat42 + 0.25;
					        u_xlat42 = u_xlat42 * 4.0;
					        u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					        u_xlat28.x = u_xlat28.x * u_xlat42;
					        u_xlat42 = u_xlat3.x + (-u_xlat8.w);
					        u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					        u_xlat1.x = u_xlat9.y * u_xlat28.x;
					        u_xlat42 = u_xlat42 + 1.0;
					        u_xlat11.w = u_xlat1.x * u_xlat42 + 0.00100000005;
					        u_xlat9.w = u_xlat28.x * u_xlat9.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat5 = u_xlat11 * u_xlat8.xxxx + u_xlat10;
					        u_xlat4 = u_xlat9 * u_xlat8.xxxx + u_xlat6;
					        u_xlatb28 = 4.0<u_xlat14;
					        if(u_xlatb28){
					            u_xlat0.x = u_xlat0.x * u_xlat2.x + -4.0;
					            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					            u_xlat28.x = u_xlat14 * 0.857142925;
					            u_xlat2 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(34.25, 35.6199989, 36.9900017, 38.3600006);
					            u_xlat6 = u_xlat2.xxyy * u_xlat7.zwzw;
					            u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat42 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat6.xy * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, -0.707106829);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat9.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat8.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat9.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat42 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					            u_xlat10 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					            u_xlat8 = u_xlat9 * u_xlat8.xxxx + u_xlat4;
					            u_xlat42 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat6.zw * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.866025388, -0.499999911);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat9.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat6.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat9.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat42 * u_xlat9.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat6.xyz * u_xlat11.www;
					            u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					            u_xlat6 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					            u_xlat10 = u_xlat11 * u_xlat6.xxxx + u_xlat10;
					            u_xlat6 = u_xlat9 * u_xlat6.xxxx + u_xlat8;
					            u_xlat2 = u_xlat2.zzww * u_xlat7.zwzw;
					            u_xlat2 = u_xlat2 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat42 = dot(u_xlat2.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat2.xy * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.965925872, -0.258819014);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat9.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat8.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat9.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat42 * u_xlat9.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					            u_xlat10 = u_xlat11 * u_xlat8.xxxx + u_xlat10;
					            u_xlat6 = u_xlat9 * u_xlat8.xxxx + u_xlat6;
					            u_xlat42 = dot(u_xlat2.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat2.zw * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-1.0, 0.0);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat9.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat8.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat9.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat42 * u_xlat9.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat2 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					            u_xlat8 = u_xlat11 * u_xlat2.xxxx + u_xlat10;
					            u_xlat2 = u_xlat9 * u_xlat2.xxxx + u_xlat6;
					            u_xlat6 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(39.7299995, 41.0999985, 42.4700012, 43.8400002);
					            u_xlat9 = u_xlat6.xxyy * u_xlat7.zwzw;
					            u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat42 = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.xy * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.965925872, 0.258819014);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat17.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat17.xy, 0.0);
					            u_xlat11 = textureLod(_PresortTexture, u_xlat17.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat11.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat10.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat11.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat12.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat11.w = u_xlat42 * u_xlat11.z + 0.00100000005;
					            u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					            u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					            u_xlat10 = textureLod(_ExclusionMask, u_xlat17.xy, 0.0);
					            u_xlat8 = u_xlat12 * u_xlat10.xxxx + u_xlat8;
					            u_xlat2 = u_xlat11 * u_xlat10.xxxx + u_xlat2;
					            u_xlat42 = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.zw * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.866025388, 0.499999911);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat17.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat17.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat17.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat10.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat9.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat10.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat42 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat9 = textureLod(_ExclusionMask, u_xlat17.xy, 0.0);
					            u_xlat8 = u_xlat11 * u_xlat9.xxxx + u_xlat8;
					            u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					            u_xlat6 = u_xlat6.zzww * u_xlat7.zwzw;
					            u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat42 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat6.xy * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat17.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat17.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat17.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat10.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat9.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat10.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat42 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat9 = textureLod(_ExclusionMask, u_xlat17.xy, 0.0);
					            u_xlat8 = u_xlat11 * u_xlat9.xxxx + u_xlat8;
					            u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					            u_xlat42 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat6.zw * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.500000119, -0.866025329);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat17.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat17.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat17.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat9.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat6.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat9.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat42 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat6.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					            u_xlat6 = textureLod(_ExclusionMask, u_xlat17.xy, 0.0);
					            u_xlat8 = u_xlat10 * u_xlat6.xxxx + u_xlat8;
					            u_xlat2 = u_xlat9 * u_xlat6.xxxx + u_xlat2;
					            u_xlat6 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(45.2099991, 46.5800018, 47.9500008, 49.3199997);
					            u_xlat9 = u_xlat6.xxyy * u_xlat7.zwzw;
					            u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat42 = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.xy * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.5, 0.866025388);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat17.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat17.xy, 0.0);
					            u_xlat11 = textureLod(_PresortTexture, u_xlat17.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat11.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat10.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat11.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat12.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat11.w = u_xlat42 * u_xlat11.z + 0.00100000005;
					            u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					            u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					            u_xlat10 = textureLod(_ExclusionMask, u_xlat17.xy, 0.0);
					            u_xlat8 = u_xlat12 * u_xlat10.xxxx + u_xlat8;
					            u_xlat2 = u_xlat11 * u_xlat10.xxxx + u_xlat2;
					            u_xlat42 = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.zw * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.258819014, -0.965925813);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat17.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat17.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat17.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat10.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat9.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat10.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat42 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat9 = textureLod(_ExclusionMask, u_xlat17.xy, 0.0);
					            u_xlat8 = u_xlat11 * u_xlat9.xxxx + u_xlat8;
					            u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					            u_xlat6 = u_xlat6.zzww * u_xlat7.zwzw;
					            u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat42 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat6.xy * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.258819103, 0.965925813);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat17.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat17.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat17.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat10.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat9.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat10.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat42 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat9 = textureLod(_ExclusionMask, u_xlat17.xy, 0.0);
					            u_xlat8 = u_xlat11 * u_xlat9.xxxx + u_xlat8;
					            u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					            u_xlat42 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat6.zw * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, -1.0);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat17.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat17.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat17.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat9.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat6.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat9.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat42 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat6.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					            u_xlat6 = textureLod(_ExclusionMask, u_xlat17.xy, 0.0);
					            u_xlat8 = u_xlat10 * u_xlat6.xxxx + u_xlat8;
					            u_xlat2 = u_xlat9 * u_xlat6.xxxx + u_xlat2;
					            u_xlat6 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(50.6899986, 52.0600014, 53.4300003, 54.7999992);
					            u_xlat9 = u_xlat6.xxyy * u_xlat7.zwzw;
					            u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat42 = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.xy * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, 1.0);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat17.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat17.xy, 0.0);
					            u_xlat11 = textureLod(_PresortTexture, u_xlat17.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat11.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat10.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat11.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat12.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat11.w = u_xlat42 * u_xlat11.z + 0.00100000005;
					            u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					            u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					            u_xlat10 = textureLod(_ExclusionMask, u_xlat17.xy, 0.0);
					            u_xlat8 = u_xlat12 * u_xlat10.xxxx + u_xlat8;
					            u_xlat2 = u_xlat11 * u_xlat10.xxxx + u_xlat2;
					            u_xlat42 = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.zw * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.258818895, -0.965925813);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat17.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat17.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat17.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat10.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat9.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat10.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat42 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat9 = textureLod(_ExclusionMask, u_xlat17.xy, 0.0);
					            u_xlat8 = u_xlat11 * u_xlat9.xxxx + u_xlat8;
					            u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					            u_xlat6 = u_xlat6.zzww * u_xlat7.zwzw;
					            u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat42 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat6.xy * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.258819193, 0.965925813);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat17.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat17.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat17.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat10.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat9.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat10.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat42 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat9 = textureLod(_ExclusionMask, u_xlat17.xy, 0.0);
					            u_xlat8 = u_xlat11 * u_xlat9.xxxx + u_xlat8;
					            u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					            u_xlat42 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat6.zw * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.499999911, -0.866025388);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat17.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat17.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat17.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat9.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat6.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat9.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat42 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat6.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					            u_xlat6 = textureLod(_ExclusionMask, u_xlat17.xy, 0.0);
					            u_xlat8 = u_xlat10 * u_xlat6.xxxx + u_xlat8;
					            u_xlat2 = u_xlat9 * u_xlat6.xxxx + u_xlat2;
					            u_xlat6 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(56.170002, 57.5400009, 58.9099998, 60.2799988);
					            u_xlat9 = u_xlat6.xxyy * u_xlat7.zwzw;
					            u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat42 = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.xy * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.500000119, 0.866025388);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat17.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat17.xy, 0.0);
					            u_xlat11 = textureLod(_PresortTexture, u_xlat17.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat11.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat10.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat11.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat12.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat11.w = u_xlat42 * u_xlat11.z + 0.00100000005;
					            u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					            u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					            u_xlat10 = textureLod(_ExclusionMask, u_xlat17.xy, 0.0);
					            u_xlat8 = u_xlat12 * u_xlat10.xxxx + u_xlat8;
					            u_xlat2 = u_xlat11 * u_xlat10.xxxx + u_xlat2;
					            u_xlat42 = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.zw * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, -0.707106829);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat17.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat17.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat17.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat10.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat9.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat10.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat42 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat9 = textureLod(_ExclusionMask, u_xlat17.xy, 0.0);
					            u_xlat8 = u_xlat11 * u_xlat9.xxxx + u_xlat8;
					            u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					            u_xlat6 = u_xlat6.zzww * u_xlat7.zwzw;
					            u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat42 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat6.xy * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.866025388, -0.5);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat17.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat17.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat17.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat10.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat9.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat10.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat42 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat9 = textureLod(_ExclusionMask, u_xlat17.xy, 0.0);
					            u_xlat8 = u_xlat11 * u_xlat9.xxxx + u_xlat8;
					            u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					            u_xlat42 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat6.zw * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.965925813, -0.258819014);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat17.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat17.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat17.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat9.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat6.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat9.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat42 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat6.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					            u_xlat6 = textureLod(_ExclusionMask, u_xlat17.xy, 0.0);
					            u_xlat8 = u_xlat10 * u_xlat6.xxxx + u_xlat8;
					            u_xlat2 = u_xlat9 * u_xlat6.xxxx + u_xlat2;
					            u_xlat6 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(61.6500015, 63.0200005, 64.3899994, 65.7600021);
					            u_xlat9 = u_xlat6.xxyy * u_xlat7.zwzw;
					            u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat42 = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.xy * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(1.0, 0.0);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat17.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat17.xy, 0.0);
					            u_xlat11 = textureLod(_PresortTexture, u_xlat17.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat11.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat10.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat11.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat12.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat11.w = u_xlat42 * u_xlat11.z + 0.00100000005;
					            u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					            u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					            u_xlat10 = textureLod(_ExclusionMask, u_xlat17.xy, 0.0);
					            u_xlat8 = u_xlat12 * u_xlat10.xxxx + u_xlat8;
					            u_xlat2 = u_xlat11 * u_xlat10.xxxx + u_xlat2;
					            u_xlat42 = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.zw * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.965925813, 0.258819014);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat17.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat17.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat17.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat10.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat9.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat10.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat42 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat9 = textureLod(_ExclusionMask, u_xlat17.xy, 0.0);
					            u_xlat8 = u_xlat11 * u_xlat9.xxxx + u_xlat8;
					            u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					            u_xlat6 = u_xlat6.zzww * u_xlat7;
					            u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat42 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat6.xy * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.866025388, 0.5);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat17.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat17.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat17.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat9.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat7.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat9.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat42 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat7.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					            u_xlat7 = textureLod(_ExclusionMask, u_xlat17.xy, 0.0);
					            u_xlat8 = u_xlat10 * u_xlat7.xxxx + u_xlat8;
					            u_xlat2 = u_xlat9 * u_xlat7.xxxx + u_xlat2;
					            u_xlat42 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat6.zw * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					            u_xlat28.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat1.xy = u_xlat28.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					            u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					            u_xlat28.x = dot(u_xlat28.xy, u_xlat28.xy);
					            u_xlat28.x = sqrt(u_xlat28.x);
					            u_xlat28.x = u_xlat7.x * 10.0 + (-u_xlat28.x);
					            u_xlat28.x = u_xlat28.x + 0.25;
					            u_xlat28.x = u_xlat28.x * 4.0;
					            u_xlat28.x = clamp(u_xlat28.x, 0.0, 1.0);
					            u_xlat0.x = u_xlat0.x * u_xlat28.x;
					            u_xlat28.x = u_xlat3.x + (-u_xlat6.w);
					            u_xlat28.x = clamp(u_xlat28.x, 0.0, 1.0);
					            u_xlat42 = u_xlat7.y * u_xlat0.x;
					            u_xlat28.x = u_xlat28.x + 1.0;
					            u_xlat3.w = u_xlat42 * u_xlat28.x + 0.00100000005;
					            u_xlat7.w = u_xlat0.x * u_xlat7.z + 0.00100000005;
					            u_xlat3.xyz = u_xlat3.www * u_xlat6.xyz;
					            u_xlat7.xyz = u_xlat6.xyz * u_xlat7.www;
					            u_xlat6 = textureLod(_ExclusionMask, u_xlat1.xy, 0.0);
					            u_xlat5 = u_xlat3 * u_xlat6.xxxx + u_xlat8;
					            u_xlat4 = u_xlat7 * u_xlat6.xxxx + u_xlat2;
					        }
					    }
					    u_xlat0.x = max(u_xlat14, 0.5);
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat5.w;
					    u_xlat0.x = u_xlat0.x * 0.0641141385;
					    u_xlat0 = u_xlat0.xxxx;
					    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
					    u_xlat1.x = u_xlat4.w + 9.99999994e-09;
					    u_xlat1.xyz = u_xlat4.xyz / u_xlat1.xxx;
					    u_xlat2.x = u_xlat5.w + 9.99999994e-09;
					    u_xlat2.xyz = u_xlat5.xyz / u_xlat2.xxx;
					    u_xlat2.xyz = (-u_xlat1.xyz) + u_xlat2.xyz;
					    SV_Target0.xyz = u_xlat0.www * u_xlat2.xyz + u_xlat1.xyz;
					    SV_Target0.w = u_xlat1.w;
					    SV_Target1 = u_xlat0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _CoCParams1;
					//   sampler2D _HalfResSourceDepthTexture;
					//   sampler2D _PresortTexture;
					//   float4 _ScionResolutionParameters1;
					//   float4 _ScionResolutionParameters2;
					//   float _TemporalUVOffset;
					//   sampler2D _TiledNeighbourhoodData;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters1 c0       1
					//   _ScionResolutionParameters2 c1       1
					//   _CoCParams1                 c2       1
					//   _TemporalUVOffset           c3       1
					//   _TiledNeighbourhoodData     s0       1
					//   _HalfResSourceDepthTexture  s1       1
					//   _PresortTexture             s2       1
					//
					
					    ps_3_0
					    def c4, 0.707106829, -0.707106829, 0, 10
					    def c5, 1, 0, 9.99999975e-005, 0.285714298
					    def c6, 0.000231481477, 0.25, 0, -1
					    def c7, 0, 1.37, 3571, 0
					    def c8, -5, -6, -7, -8
					    def c9, 0.00100000005, 0.571428478, 0, 9
					    def c10, 2, -1, -3, -4
					    def c11, -9, -10, -11, -12
					    def c12, -13, -14, -15, -16
					    def c13, -17, -18, -19, -20
					    def c14, -21, -22, -23, -24
					    def c15, 0.857142925, 25, -0.866025388, -0.499999911
					    def c16, -25, -26, -27, -28
					    def c17, -29, -30, -31, -32
					    def c18, -33, -34, -35, -36
					    def c19, -37, -38, -39, -40
					    def c20, -41, -42, -43, -44
					    def c21, -45, -46, -47, -48
					    def c22, 0.5, 0.866025388, 0.258819103, 0.965925813
					    def c23, 0.866025388, -0.5, 0.0641141385, 9.99999994e-009
					    def c24, -0.923879385, -0.382683486, 0.382683486, -0.382683396
					    def c25, -0.965925872, -0.258819014, 0.258819014, -0.965925813
					    def c26, -0.866025388, 0.499999911, 0.500000119, -0.866025329
					    def c27, -0.258818895, -0.965925813, -0.258819193, 0.965925813
					    defi i0, 8, 0, 0, 0
					    defi i1, 16, 0, 0, 0
					    defi i2, 24, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    mul r0, c5.xxyy, v0.xyxx
					    texldl r1, r0, s0
					    texldl r2, r0, s1
					    if_lt r1.x, c5.x
					      mov oC1, c5.y
					    else
					      texldl r0, r0, s2
					      add_sat r0.x, -r2.w, c2.z
					      add r0.x, r0.x, c5.x
					      mad r0.x, r0.y, r0.x, c5.z
					      add r0.y, r0.z, c5.z
					      mul r1.yzw, r0.x, r2.xxyz
					      mul r3.xyz, r0.y, r2
					      mul r0.z, r1.x, c5.w
					      mul r4.xy, c0, v0
					      mov r5.zw, c5.y
					      mov r6.xyz, r3
					      mov r6.w, r0.y
					      mov r7.xyz, r1.yzww
					      mov r7.w, r0.x
					      mov r0.w, c5.x
					      rep i0
					        mov r8.y, c7.y
					        mad r3.w, r0.w, r8.y, c3.x
					        mul r4.zw, r3.w, r4.xyxy
					        mad r4.zw, r4, c6.x, c6.xyyz
					        dp2add r3.w, r4.zwzw, c7.z, c7.w
					        mul r4.zw, r4, r3.w
					        frc r4.zw, r4
					        mad r4.zw, r4, c10.x, c10.y
					        add r8, r0.w, -c10_abs.yxzw
					        add r9, r0.w, c8
					        cmp r10.xy, -r8_abs.x, c4, c4.z
					        cmp r8.xy, -r8_abs.y, c6.wzzw, r10
					        cmp r8.xy, -r8_abs.z, c4.x, r8
					        cmp r8.xy, -r8_abs.w, c6.zwzw, r8
					        cmp r8.xy, -r9_abs.x, c5.yxzw, r8
					        cmp r8.xy, -r9_abs.y, c4.y, r8
					        cmp r8.xy, -r9_abs.z, c5, r8
					        cmp r8.xy, -r9_abs.w, c4.yxzw, r8
					        mad r4.zw, r4, c6.y, r8.xyxy
					        mul r4.zw, r0.z, r4
					        mad r5.xy, r4.zwzw, c1, v0
					        texldl r8, r5.xyww, s1
					        texldl r9, r5, s2
					        dp2add r3.w, r4.zwzw, r4.zwzw, c5.y
					        rsq r3.w, r3.w
					        rcp r3.w, r3.w
					        mad r3.w, r9.x, c4.w, -r3.w
					        add r3.w, r3.w, c6.y
					        mul_sat r3.w, r3.w, -c10.w
					        add_sat r4.z, -r8.w, c2.z
					        mul r4.w, r9.y, r3.w
					        add r4.z, r4.z, c5.x
					        mad r10.w, r4.w, r4.z, c9.x
					        mad r9.w, r3.w, r9.z, c9.x
					        mul r10.xyz, r8, r10.w
					        mul r9.xyz, r8, r9.w
					        add r7, r7, r10
					        add r6, r6, r9
					        add r0.w, r0.w, c5.x
					      endrep
					      if_lt c10.x, r1.x
					        add_sat r0.x, r1.x, -c10.x
					        mul r0.y, r1.x, c9.y
					        mov r3.zw, c5.y
					        mov r5, r6
					        mov r8, r7
					        mov r0.z, c9.w
					        rep i1
					          mov r1.y, c7.y
					          mad r0.w, r0.z, r1.y, c3.x
					          mul r1.yz, r0.w, r4.xxyw
					          mad r1.yz, r1, c6.x, c6
					          dp2add r0.w, r1.yzzw, c7.z, c7.w
					          mul r1.yz, r1, r0.w
					          frc r1.yz, r1
					          mad r1.yz, r1, c10.x, c10.y
					          add r9, r0.z, c11
					          add r10, r0.z, c12
					          add r11, r0.z, c13
					          add r12, r0.z, c14
					          cmp r4.zw, -r9_abs.x, c4.xyxy, c4.z
					          cmp r4.zw, -r9_abs.y, c24.xyxy, r4
					          cmp r4.zw, -r9_abs.z, c6.xywz, r4
					          cmp r4.zw, -r9_abs.w, c24.xyxz, r4
					          cmp r4.zw, -r10_abs.x, c4.x, r4
					          cmp r4.zw, -r10_abs.y, c24.xyzx, r4
					          cmp r4.zw, -r10_abs.z, -c24.xywx, r4
					          cmp r4.zw, -r10_abs.w, c6, r4
					          cmp r4.zw, -r11_abs.x, c5.xyyx, r4
					          cmp r4.zw, -r11_abs.y, c24.xywx, r4
					          cmp r4.zw, -r11_abs.z, -c24.xyzx, r4
					          cmp r4.zw, -r11_abs.w, c4.y, r4
					          cmp r4.zw, -r12_abs.x, -c24.xyxz, r4
					          cmp r4.zw, -r12_abs.y, c5.xyxy, r4
					          cmp r4.zw, -r12_abs.z, -c24.xyxy, r4
					          cmp r4.zw, -r12_abs.w, c4.xyyx, r4
					          mad r1.yz, r1, c6.y, r4.xzww
					          mul r1.yz, r0.y, r1
					          mad r3.xy, r1.yzzw, c1, v0
					          texldl r9, r3.xyww, s1
					          texldl r10, r3, s2
					          dp2add r0.w, r1.yzzw, r1.yzzw, c5.y
					          rsq r0.w, r0.w
					          rcp r0.w, r0.w
					          mad r0.w, r10.x, c4.w, -r0.w
					          add r0.w, r0.w, c6.y
					          mul_sat r0.w, r0.w, -c10.w
					          mul r0.w, r0.x, r0.w
					          add_sat r1.y, -r9.w, c2.z
					          mul r1.z, r10.y, r0.w
					          add r1.y, r1.y, c5.x
					          mad r11.w, r1.z, r1.y, c9.x
					          mad r10.w, r0.w, r10.z, c9.x
					          mul r11.xyz, r9, r11.w
					          mul r10.xyz, r9, r10.w
					          add r8, r8, r11
					          add r5, r5, r10
					          add r0.z, r0.z, c5.x
					        endrep
					        mov r6, r5
					        mov r7, r8
					        if_lt -c10.w, r1.x
					          add_sat r0.x, r1.x, c10.w
					          mul r0.y, r1.x, c15.x
					          mov r3.zw, c5.y
					          mov r5, r6
					          mov r8, r7
					          mov r0.z, c15.y
					          rep i2
					            mov r1.y, c7.y
					            mad r0.w, r0.z, r1.y, c3.x
					            mul r1.yz, r0.w, r4.xxyw
					            mad r1.yz, r1, c6.x, c6
					            dp2add r0.w, r1.yzzw, c7.z, c7.w
					            mul r1.yz, r1, r0.w
					            frc r1.yz, r1
					            mad r1.yz, r1, c10.x, c10.y
					            add r9, r0.z, c16
					            add r10, r0.z, c17
					            add r11, r0.z, c18
					            add r12, r0.z, c19
					            add r13, r0.z, c20
					            add r14, r0.z, c21
					            cmp r4.zw, -r9_abs.x, c4.xyxy, c4.z
					            cmp r4.zw, -r9_abs.y, c15, r4
					            cmp r4.zw, -r9_abs.z, c25.xyxy, r4
					            cmp r4.zw, -r9_abs.w, c6.xywz, r4
					            cmp r4.zw, -r10_abs.x, c25.xyxz, r4
					            cmp r4.zw, -r10_abs.y, c26.xyxy, r4
					            cmp r4.zw, -r10_abs.z, c4.xyyx, r4
					            cmp r4.zw, -r10_abs.w, c26, r4
					            cmp r4.zw, -r11_abs.x, c22.xyxy, r4
					            cmp r4.zw, -r11_abs.y, c25, r4
					            cmp r4.zw, -r11_abs.z, c22, r4
					            cmp r4.zw, -r11_abs.w, c6, r4
					            cmp r4.zw, -r12_abs.x, c5.xyyx, r4
					            cmp r4.zw, -r12_abs.y, c27.xyxy, r4
					            cmp r4.zw, -r12_abs.z, c27, r4
					            cmp r4.zw, -r12_abs.w, c15.xywz, r4
					            cmp r4.zw, -r13_abs.x, -c26.xyzx, r4
					            cmp r4.zw, -r13_abs.y, c4.y, r4
					            cmp r4.zw, -r13_abs.z, c23.xyxy, r4
					            cmp r4.zw, -r13_abs.w, -c25.xywz, r4
					            cmp r4.zw, -r14_abs.x, c5.xyxy, r4
					            cmp r4.zw, -r14_abs.y, -c25.xywy, r4
					            cmp r4.zw, -r14_abs.z, c22.xyyx, r4
					            cmp r4.zw, -r14_abs.w, c4.xyyx, r4
					            mad r1.yz, r1, c6.y, r4.xzww
					            mul r1.yz, r0.y, r1
					            mad r3.xy, r1.yzzw, c1, v0
					            texldl r9, r3.xyww, s1
					            texldl r10, r3, s2
					            dp2add r0.w, r1.yzzw, r1.yzzw, c5.y
					            rsq r0.w, r0.w
					            rcp r0.w, r0.w
					            mad r0.w, r10.x, c4.w, -r0.w
					            add r0.w, r0.w, c6.y
					            mul_sat r0.w, r0.w, -c10.w
					            mul r0.w, r0.x, r0.w
					            add_sat r1.y, -r9.w, c2.z
					            mul r1.z, r10.y, r0.w
					            add r1.y, r1.y, c5.x
					            mad r11.w, r1.z, r1.y, c9.x
					            mad r10.w, r0.w, r10.z, c9.x
					            mul r11.xyz, r9, r11.w
					            mul r10.xyz, r9, r10.w
					            add r8, r8, r11
					            add r5, r5, r10
					            add r0.z, r0.z, c5.x
					          endrep
					          mov r6, r5
					          mov r7, r8
					        endif
					      endif
					      max r0.x, r1.x, c22.x
					      mul r0.x, r0.x, r0.x
					      mul r0.x, r0.x, r7.w
					      mul r0.x, r0.x, c23.z
					      mov_sat r0, r0.x
					      add r1.x, r6.w, c23.w
					      rcp r1.x, r1.x
					      mul r1.xyz, r1.x, r6
					      add r1.w, r7.w, c23.w
					      rcp r1.w, r1.w
					      mad r3.xyz, r7, r1.w, -r1
					      mad r2.xyz, r0.w, r3, r1
					      mov oC1, r0
					    endif
					    mov oC0, r2
					
					// approximately 241 instruction slots used (18 texture, 223 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _ScionResolutionParameters1;
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_3[6];
						vec4 _CoCParams1;
						vec4 unused_0_5[9];
						float _TemporalUVOffset;
					};
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _PresortTexture;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					layout(location = 1) out vec4 SV_Target1;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec2 u_xlat12;
					bool u_xlatb12;
					float u_xlat13;
					vec2 u_xlat24;
					float u_xlat36;
					void main()
					{
					    u_xlat0 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlatb12 = u_xlat0.x<1.0;
					    if(u_xlatb12){
					        SV_Target0 = u_xlat1;
					        SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
					        return;
					    }
					    u_xlat2 = textureLod(_PresortTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat12.x = (-u_xlat1.w) + _CoCParams1.z;
					    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
					    u_xlat12.x = u_xlat12.x + 1.0;
					    u_xlat3.w = u_xlat2.y * u_xlat12.x + 9.99999975e-05;
					    u_xlat2.w = u_xlat2.z + 9.99999975e-05;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat3.www;
					    u_xlat2.xyz = u_xlat1.xyz * u_xlat2.www;
					    u_xlat12.x = u_xlat0.x * 0.285714298;
					    u_xlat4 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(1.37, 2.74000001, 4.11000013, 5.48000002);
					    u_xlat5 = vs_TEXCOORD0.xyxy * _ScionResolutionParameters1.xyxy;
					    u_xlat6 = u_xlat4.xxyy * u_xlat5.zwzw;
					    u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat24.x = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat6.xy * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.25, 0.25) + vec2(0.707106829, -0.707106829);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat8.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat8.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat9.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat8.w = u_xlat24.x * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat3 = u_xlat3 + u_xlat9;
					    u_xlat2 = u_xlat2 + u_xlat8;
					    u_xlat24.x = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat6.zw * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.25, 0.25) + vec2(-1.0, 0.0);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat6.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat7.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat8.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat7.w = u_xlat24.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat6.xyz * u_xlat7.www;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat2 = u_xlat2 + u_xlat7;
					    u_xlat4 = u_xlat4.zzww * u_xlat5.zwzw;
					    u_xlat4 = u_xlat4 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat24.x = dot(u_xlat4.xy, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat4.xy * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.25, 0.25) + vec2(0.707106829, 0.707106829);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat6.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat7.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat8.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat7.w = u_xlat24.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat6.xyz * u_xlat7.www;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat2 = u_xlat2 + u_xlat7;
					    u_xlat24.x = dot(u_xlat4.zw, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat4.zw * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.25, 0.25) + vec2(0.0, -1.0);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat4 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat6 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat6.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat4.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat6.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat7.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat6.w = u_xlat24.x * u_xlat6.z + 0.00100000005;
					    u_xlat7.xyz = u_xlat4.xyz * u_xlat7.www;
					    u_xlat6.xyz = u_xlat4.xyz * u_xlat6.www;
					    u_xlat3 = u_xlat3 + u_xlat7;
					    u_xlat2 = u_xlat2 + u_xlat6;
					    u_xlat4 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(6.8499999, 8.22000027, 9.59000015, 10.96);
					    u_xlat6 = u_xlat4.xxyy * u_xlat5.zwzw;
					    u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat24.x = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat6.xy * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.25, 0.25) + vec2(0.0, 1.0);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat8.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat8.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat9.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat8.w = u_xlat24.x * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat3 = u_xlat3 + u_xlat9;
					    u_xlat2 = u_xlat2 + u_xlat8;
					    u_xlat24.x = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat6.zw * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.25, 0.25) + vec2(-0.707106829, -0.707106829);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat6.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat7.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat8.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat7.w = u_xlat24.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat6.xyz * u_xlat7.www;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat2 = u_xlat2 + u_xlat7;
					    u_xlat4 = u_xlat4.zzww * u_xlat5.zwzw;
					    u_xlat4 = u_xlat4 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat24.x = dot(u_xlat4.xy, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat4.xy * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.25, 0.25) + vec2(1.0, 0.0);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat6.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat7.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat8.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat7.w = u_xlat24.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat6.xyz * u_xlat7.www;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat2 = u_xlat2 + u_xlat7;
					    u_xlat24.x = dot(u_xlat4.zw, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat4.zw * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					    u_xlat12.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat12.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat4 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat6 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat12.x = dot(u_xlat12.xy, u_xlat12.xy);
					    u_xlat12.x = sqrt(u_xlat12.x);
					    u_xlat12.x = u_xlat6.x * 10.0 + (-u_xlat12.x);
					    u_xlat12.x = u_xlat12.x + 0.25;
					    u_xlat12.x = u_xlat12.x * 4.0;
					    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
					    u_xlat24.x = (-u_xlat4.w) + _CoCParams1.z;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = u_xlat6.y * u_xlat12.x;
					    u_xlat24.x = u_xlat24.x + 1.0;
					    u_xlat7.w = u_xlat36 * u_xlat24.x + 0.00100000005;
					    u_xlat6.w = u_xlat12.x * u_xlat6.z + 0.00100000005;
					    u_xlat7.xyz = u_xlat4.xyz * u_xlat7.www;
					    u_xlat6.xyz = u_xlat4.xyz * u_xlat6.www;
					    u_xlat3 = u_xlat3 + u_xlat7;
					    u_xlat2 = u_xlat2 + u_xlat6;
					    u_xlatb12 = 2.0<u_xlat0.x;
					    if(u_xlatb12){
					        u_xlat12.x = u_xlat0.x + -2.0;
					        u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
					        u_xlat24.x = u_xlat0.x * 0.571428478;
					        u_xlat4 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(12.3299999, 13.6999998, 15.0699997, 16.4400005);
					        u_xlat6 = u_xlat4.xxyy * u_xlat5.zwzw;
					        u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, -0.707106829);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat8.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat7 = u_xlat3 + u_xlat9;
					        u_xlat8 = u_xlat2 + u_xlat8;
					        u_xlat36 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.923879385, -0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat6.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat6.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat7 + u_xlat10;
					        u_xlat7 = u_xlat8 + u_xlat9;
					        u_xlat4 = u_xlat4.zzww * u_xlat5.zwzw;
					        u_xlat4 = u_xlat4 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat4.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat4.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-1.0, 0.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat7 = u_xlat7 + u_xlat9;
					        u_xlat36 = dot(u_xlat4.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat4.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.923879385, 0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					        u_xlat4 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat4.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat4.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat4.w = u_xlat36 * u_xlat4.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat4.xyz = u_xlat4.www * u_xlat8.xyz;
					        u_xlat6 = u_xlat6 + u_xlat9;
					        u_xlat4 = u_xlat4 + u_xlat7;
					        u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(17.8099995, 19.1800003, 20.5499992, 21.9200001);
					        u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, 0.707106829);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat10.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat6 = u_xlat6 + u_xlat11;
					        u_xlat4 = u_xlat4 + u_xlat10;
					        u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.382683486, -0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat7 = u_xlat5.zwzw * u_xlat7.zzww;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.382683396, 0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, -1.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat7 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat7.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat7.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat7.w = u_xlat36 * u_xlat7.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat7.xyz = u_xlat7.www * u_xlat8.xyz;
					        u_xlat6 = u_xlat6 + u_xlat9;
					        u_xlat4 = u_xlat4 + u_xlat7;
					        u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(23.2900009, 24.6599998, 26.0300007, 27.3999996);
					        u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, 1.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat10.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat6 = u_xlat6 + u_xlat11;
					        u_xlat4 = u_xlat4 + u_xlat10;
					        u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.382683396, -0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat7 = u_xlat5.zwzw * u_xlat7.zzww;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.382683486, 0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, -0.707106829);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat7 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat7.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat7.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat7.w = u_xlat36 * u_xlat7.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat7.xyz = u_xlat7.www * u_xlat8.xyz;
					        u_xlat6 = u_xlat6 + u_xlat9;
					        u_xlat4 = u_xlat4 + u_xlat7;
					        u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(28.7700005, 30.1399994, 31.5100002, 32.8800011);
					        u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.923879385, -0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat10.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat6 = u_xlat6 + u_xlat11;
					        u_xlat4 = u_xlat4 + u_xlat10;
					        u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(1.0, 0.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat7 = u_xlat5.zwzw * u_xlat7.zzww;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.923879385, 0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					        u_xlat24.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					        u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					        u_xlat24.x = sqrt(u_xlat24.x);
					        u_xlat24.x = u_xlat8.x * 10.0 + (-u_xlat24.x);
					        u_xlat24.x = u_xlat24.x + 0.25;
					        u_xlat24.x = u_xlat24.x * 4.0;
					        u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					        u_xlat12.x = u_xlat12.x * u_xlat24.x;
					        u_xlat24.x = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					        u_xlat36 = u_xlat8.y * u_xlat12.x;
					        u_xlat24.x = u_xlat24.x + 1.0;
					        u_xlat9.w = u_xlat36 * u_xlat24.x + 0.00100000005;
					        u_xlat8.w = u_xlat12.x * u_xlat8.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat3 = u_xlat6 + u_xlat9;
					        u_xlat2 = u_xlat4 + u_xlat8;
					        u_xlatb12 = 4.0<u_xlat0.x;
					        if(u_xlatb12){
					            u_xlat12.x = u_xlat0.x + -4.0;
					            u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
					            u_xlat24.x = u_xlat0.x * 0.857142925;
					            u_xlat4 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(34.25, 35.6199989, 36.9900017, 38.3600006);
					            u_xlat6 = u_xlat4.xxyy * u_xlat5.zwzw;
					            u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat6.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, -0.707106829);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					            u_xlat8 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat8.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					            u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					            u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					            u_xlat7 = u_xlat3 + u_xlat9;
					            u_xlat8 = u_xlat2 + u_xlat8;
					            u_xlat36 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat6.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.866025388, -0.499999911);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat6.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat6.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat7 + u_xlat10;
					            u_xlat7 = u_xlat8 + u_xlat9;
					            u_xlat4 = u_xlat4.zzww * u_xlat5.zwzw;
					            u_xlat4 = u_xlat4 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat4.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat4.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.965925872, -0.258819014);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat7 = u_xlat7 + u_xlat9;
					            u_xlat36 = dot(u_xlat4.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat4.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-1.0, 0.0);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					            u_xlat4 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat4.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat4.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat4.w = u_xlat36 * u_xlat4.z + 0.00100000005;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat4.xyz = u_xlat4.www * u_xlat8.xyz;
					            u_xlat6 = u_xlat6 + u_xlat9;
					            u_xlat4 = u_xlat4 + u_xlat7;
					            u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(39.7299995, 41.0999985, 42.4700012, 43.8400002);
					            u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.965925872, 0.258819014);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat10.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat6 = u_xlat6 + u_xlat11;
					            u_xlat4 = u_xlat4 + u_xlat10;
					            u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.866025388, 0.499999911);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat4 = u_xlat4 + u_xlat9;
					            u_xlat7 = u_xlat5.zwzw * u_xlat7.zzww;
					            u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat4 = u_xlat4 + u_xlat9;
					            u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.500000119, -0.866025329);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat7 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat7.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat7.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat7.w = u_xlat36 * u_xlat7.z + 0.00100000005;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat7.xyz = u_xlat7.www * u_xlat8.xyz;
					            u_xlat6 = u_xlat6 + u_xlat9;
					            u_xlat4 = u_xlat4 + u_xlat7;
					            u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(45.2099991, 46.5800018, 47.9500008, 49.3199997);
					            u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.5, 0.866025388);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat10.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat6 = u_xlat6 + u_xlat11;
					            u_xlat4 = u_xlat4 + u_xlat10;
					            u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.258819014, -0.965925813);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat4 = u_xlat4 + u_xlat9;
					            u_xlat7 = u_xlat5.zwzw * u_xlat7.zzww;
					            u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.258819103, 0.965925813);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat4 = u_xlat4 + u_xlat9;
					            u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, -1.0);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat7 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat7.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat7.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat7.w = u_xlat36 * u_xlat7.z + 0.00100000005;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat7.xyz = u_xlat7.www * u_xlat8.xyz;
					            u_xlat6 = u_xlat6 + u_xlat9;
					            u_xlat4 = u_xlat4 + u_xlat7;
					            u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(50.6899986, 52.0600014, 53.4300003, 54.7999992);
					            u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, 1.0);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat10.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat6 = u_xlat6 + u_xlat11;
					            u_xlat4 = u_xlat4 + u_xlat10;
					            u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.258818895, -0.965925813);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat4 = u_xlat4 + u_xlat9;
					            u_xlat7 = u_xlat5.zwzw * u_xlat7.zzww;
					            u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.258819193, 0.965925813);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat4 = u_xlat4 + u_xlat9;
					            u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.499999911, -0.866025388);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat7 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat7.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat7.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat7.w = u_xlat36 * u_xlat7.z + 0.00100000005;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat7.xyz = u_xlat7.www * u_xlat8.xyz;
					            u_xlat6 = u_xlat6 + u_xlat9;
					            u_xlat4 = u_xlat4 + u_xlat7;
					            u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(56.170002, 57.5400009, 58.9099998, 60.2799988);
					            u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.500000119, 0.866025388);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat10.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat6 = u_xlat6 + u_xlat11;
					            u_xlat4 = u_xlat4 + u_xlat10;
					            u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, -0.707106829);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat4 = u_xlat4 + u_xlat9;
					            u_xlat7 = u_xlat5.zwzw * u_xlat7.zzww;
					            u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.866025388, -0.5);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat4 = u_xlat4 + u_xlat9;
					            u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.965925813, -0.258819014);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat7 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat7.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat7.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat7.w = u_xlat36 * u_xlat7.z + 0.00100000005;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat7.xyz = u_xlat7.www * u_xlat8.xyz;
					            u_xlat6 = u_xlat6 + u_xlat9;
					            u_xlat4 = u_xlat4 + u_xlat7;
					            u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(61.6500015, 63.0200005, 64.3899994, 65.7600021);
					            u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(1.0, 0.0);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat10.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat6 = u_xlat6 + u_xlat11;
					            u_xlat4 = u_xlat4 + u_xlat10;
					            u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.965925813, 0.258819014);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat4 = u_xlat4 + u_xlat9;
					            u_xlat5 = u_xlat5 * u_xlat7.zzww;
					            u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.866025388, 0.5);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat8 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat8.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					            u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					            u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					            u_xlat6 = u_xlat6 + u_xlat9;
					            u_xlat4 = u_xlat4 + u_xlat8;
					            u_xlat36 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					            u_xlat24.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					            u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					            u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					            u_xlat24.x = sqrt(u_xlat24.x);
					            u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					            u_xlat24.x = u_xlat24.x + 0.25;
					            u_xlat24.x = u_xlat24.x * 4.0;
					            u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					            u_xlat12.x = u_xlat12.x * u_xlat24.x;
					            u_xlat24.x = (-u_xlat5.w) + _CoCParams1.z;
					            u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					            u_xlat36 = u_xlat7.y * u_xlat12.x;
					            u_xlat24.x = u_xlat24.x + 1.0;
					            u_xlat8.w = u_xlat36 * u_xlat24.x + 0.00100000005;
					            u_xlat7.w = u_xlat12.x * u_xlat7.z + 0.00100000005;
					            u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					            u_xlat7.xyz = u_xlat5.xyz * u_xlat7.www;
					            u_xlat3 = u_xlat6 + u_xlat8;
					            u_xlat2 = u_xlat4 + u_xlat7;
					        }
					    }
					    u_xlat0.x = max(u_xlat0.x, 0.5);
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat3.w;
					    u_xlat0.x = u_xlat0.x * 0.0641141385;
					    u_xlat0 = u_xlat0.xxxx;
					    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
					    u_xlat1.x = u_xlat2.w + 9.99999994e-09;
					    u_xlat1.xyz = u_xlat2.xyz / u_xlat1.xxx;
					    u_xlat2.x = u_xlat3.w + 9.99999994e-09;
					    u_xlat2.xyz = u_xlat3.xyz / u_xlat2.xxx;
					    u_xlat2.xyz = (-u_xlat1.xyz) + u_xlat2.xyz;
					    SV_Target0.xyz = u_xlat0.www * u_xlat2.xyz + u_xlat1.xyz;
					    SV_Target0.w = u_xlat1.w;
					    SV_Target1 = u_xlat0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" "SC_DOF_MASK_ON" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _CoCParams1;
					//   sampler2D _ExclusionMask;
					//   sampler2D _HalfResSourceDepthTexture;
					//   sampler2D _PresortTexture;
					//   float4 _ScionResolutionParameters1;
					//   float4 _ScionResolutionParameters2;
					//   float _TemporalUVOffset;
					//   sampler2D _TiledNeighbourhoodData;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters1 c0       1
					//   _ScionResolutionParameters2 c1       1
					//   _CoCParams1                 c2       1
					//   _TemporalUVOffset           c3       1
					//   _TiledNeighbourhoodData     s0       1
					//   _ExclusionMask              s1       1
					//   _HalfResSourceDepthTexture  s2       1
					//   _PresortTexture             s3       1
					//
					
					    ps_3_0
					    def c4, 0.707106829, -0.707106829, 0, 10
					    def c5, 1, 0, 9.99999975e-005, 0.285714298
					    def c6, 0, 1.37, 3571, 0
					    def c7, -5, -6, -7, -8
					    def c8, 0.00100000005, 0.571428478, 0, 9
					    def c9, 2, -1, -3, -4
					    def c10, -9, -10, -11, -12
					    def c11, -13, -14, -15, -16
					    def c12, -17, -18, -19, -20
					    def c13, -21, -22, -23, -24
					    def c14, 0.857142925, 25, -0.866025388, -0.499999911
					    def c15, -25, -26, -27, -28
					    def c16, -29, -30, -31, -32
					    def c17, -33, -34, -35, -36
					    def c18, -37, -38, -39, -40
					    def c19, -41, -42, -43, -44
					    def c20, -45, -46, -47, -48
					    def c21, 0.000231481477, 0.25, 0, -1
					    def c22, 0.5, 0.866025388, 0.258819103, 0.965925813
					    def c23, 0.866025388, -0.5, 0.0641141385, 9.99999994e-009
					    def c24, -0.923879385, -0.382683486, 0.382683486, -0.382683396
					    def c25, -0.965925872, -0.258819014, 0.258819014, -0.965925813
					    def c26, -0.866025388, 0.499999911, 0.500000119, -0.866025329
					    def c27, -0.258818895, -0.965925813, -0.258819193, 0.965925813
					    defi i0, 8, 0, 0, 0
					    defi i1, 16, 0, 0, 0
					    defi i2, 24, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    dcl_2d s3
					    mul r0, c5.xxyy, v0.xyxx
					    texldl r1, r0, s0
					    texldl r2, r0, s2
					    texldl r3, r0, s1
					    mul r1.y, r1.x, r3.x
					    if_lt r1.y, c5.x
					      mov oC1, c5.y
					    else
					      texldl r0, r0, s3
					      add_sat r0.x, -r2.w, c2.z
					      add r0.x, r0.x, c5.x
					      mad r0.x, r0.y, r0.x, c5.z
					      add r0.y, r0.z, c5.z
					      mul r3.yzw, r0.x, r2.xxyz
					      mul r4.xyz, r0.y, r2
					      mul r0.z, r1.y, c5.w
					      mul r1.zw, c0.xyxy, v0.xyxy
					      mov r5.zw, c5.y
					      mov r6.xyz, r4
					      mov r6.w, r0.y
					      mov r7.xyz, r3.yzww
					      mov r7.w, r0.x
					      mov r0.w, c5.x
					      rep i0
					        mov r8.y, c6.y
					        mad r4.w, r0.w, r8.y, c3.x
					        mul r8.xy, r1.zwzw, r4.w
					        mad r8.xy, r8, c21.x, c21.yzzw
					        dp2add r4.w, r8, c6.z, c6.w
					        mul r8.xy, r8, r4.w
					        frc r8.xy, r8
					        mad r8.xy, r8, c9.x, c9.y
					        add r9, r0.w, -c9_abs.yxzw
					        add r10, r0.w, c7
					        cmp r8.zw, -r9_abs.x, c4.xyxy, c4.z
					        cmp r8.zw, -r9_abs.y, c21.xywz, r8
					        cmp r8.zw, -r9_abs.z, c4.x, r8
					        cmp r8.zw, -r9_abs.w, c21, r8
					        cmp r8.zw, -r10_abs.x, c5.xyyx, r8
					        cmp r8.zw, -r10_abs.y, c4.y, r8
					        cmp r8.zw, -r10_abs.z, c5.xyxy, r8
					        cmp r8.zw, -r10_abs.w, c4.xyyx, r8
					        mad r8.xy, r8, c21.y, r8.zwzw
					        mul r8.xy, r0.z, r8
					        mad r5.xy, r8, c1, v0
					        texldl r9, r5.xyww, s2
					        texldl r10, r5.xyww, s3
					        dp2add r4.w, r8, r8, c5.y
					        rsq r4.w, r4.w
					        rcp r4.w, r4.w
					        mad r4.w, r10.x, c4.w, -r4.w
					        add r4.w, r4.w, c21.y
					        mul_sat r4.w, r4.w, -c9.w
					        add_sat r8.x, -r9.w, c2.z
					        mul r8.y, r10.y, r4.w
					        add r8.x, r8.x, c5.x
					        mad r8.w, r8.y, r8.x, c8.x
					        mad r10.w, r4.w, r10.z, c8.x
					        mul r8.xyz, r8.w, r9
					        mul r10.xyz, r9, r10.w
					        texldl r9, r5, s1
					        mad r7, r8, r9.x, r7
					        mad r6, r10, r9.x, r6
					        add r0.w, r0.w, c5.x
					      endrep
					      if_lt c9.x, r1.y
					        mad_sat r0.x, r1.x, r3.x, -c9.x
					        mul r0.y, r1.y, c8.y
					        mov r4.zw, c5.y
					        mov r5, r6
					        mov r8, r7
					        mov r0.z, c8.w
					        rep i1
					          mov r3.y, c6.y
					          mad r0.w, r0.z, r3.y, c3.x
					          mul r3.yz, r0.w, r1.xzww
					          mad r3.yz, r3, c21.x, c21
					          dp2add r0.w, r3.yzzw, c6.z, c6.w
					          mul r3.yz, r3, r0.w
					          frc r3.yz, r3
					          mad r3.yz, r3, c9.x, c9.y
					          add r9, r0.z, c10
					          add r10, r0.z, c11
					          add r11, r0.z, c12
					          add r12, r0.z, c13
					          cmp r13.xy, -r9_abs.x, c4, c4.z
					          cmp r9.xy, -r9_abs.y, c24, r13
					          cmp r9.xy, -r9_abs.z, c21.wzzw, r9
					          cmp r9.xy, -r9_abs.w, c24.xzzw, r9
					          cmp r9.xy, -r10_abs.x, c4.x, r9
					          cmp r9.xy, -r10_abs.y, c24.zxzw, r9
					          cmp r9.xy, -r10_abs.z, -c24.wxzw, r9
					          cmp r9.xy, -r10_abs.w, c21.zwzw, r9
					          cmp r9.xy, -r11_abs.x, c5.yxzw, r9
					          cmp r9.xy, -r11_abs.y, c24.wxzw, r9
					          cmp r9.xy, -r11_abs.z, -c24.zxzw, r9
					          cmp r9.xy, -r11_abs.w, c4.y, r9
					          cmp r9.xy, -r12_abs.x, -c24.xzzw, r9
					          cmp r9.xy, -r12_abs.y, c5, r9
					          cmp r9.xy, -r12_abs.z, -c24, r9
					          cmp r9.xy, -r12_abs.w, c4.yxzw, r9
					          mad r3.yz, r3, c21.y, r9.xxyw
					          mul r3.yz, r0.y, r3
					          mad r4.xy, r3.yzzw, c1, v0
					          texldl r9, r4.xyww, s2
					          texldl r10, r4.xyww, s3
					          dp2add r0.w, r3.yzzw, r3.yzzw, c5.y
					          rsq r0.w, r0.w
					          rcp r0.w, r0.w
					          mad r0.w, r10.x, c4.w, -r0.w
					          add r0.w, r0.w, c21.y
					          mul_sat r0.w, r0.w, -c9.w
					          mul r0.w, r0.x, r0.w
					          add_sat r3.y, -r9.w, c2.z
					          mul r3.z, r10.y, r0.w
					          add r3.y, r3.y, c5.x
					          mad r11.w, r3.z, r3.y, c8.x
					          mad r10.w, r0.w, r10.z, c8.x
					          mul r11.xyz, r9, r11.w
					          mul r10.xyz, r9, r10.w
					          texldl r9, r4, s1
					          mad r8, r11, r9.x, r8
					          mad r5, r10, r9.x, r5
					          add r0.z, r0.z, c5.x
					        endrep
					        mov r6, r5
					        mov r7, r8
					        if_lt -c9.w, r1.y
					          mad_sat r0.x, r1.x, r3.x, c9.w
					          mul r0.y, r1.y, c14.x
					          mov r3.zw, c5.y
					          mov r4, r6
					          mov r5, r7
					          mov r0.z, c14.y
					          rep i2
					            mov r8.y, c6.y
					            mad r0.w, r0.z, r8.y, c3.x
					            mul r8.xy, r0.w, r1.zwzw
					            mad r8.xy, r8, c21.x, c21.yzzw
					            dp2add r0.w, r8, c6.z, c6.w
					            mul r8.xy, r8, r0.w
					            frc r8.xy, r8
					            mad r8.xy, r8, c9.x, c9.y
					            add r9, r0.z, c15
					            add r10, r0.z, c16
					            add r11, r0.z, c17
					            add r12, r0.z, c18
					            add r13, r0.z, c19
					            add r14, r0.z, c20
					            cmp r8.zw, -r9_abs.x, c4.xyxy, c4.z
					            cmp r8.zw, -r9_abs.y, c14, r8
					            cmp r8.zw, -r9_abs.z, c25.xyxy, r8
					            cmp r8.zw, -r9_abs.w, c21.xywz, r8
					            cmp r8.zw, -r10_abs.x, c25.xyxz, r8
					            cmp r8.zw, -r10_abs.y, c26.xyxy, r8
					            cmp r8.zw, -r10_abs.z, c4.xyyx, r8
					            cmp r8.zw, -r10_abs.w, c26, r8
					            cmp r8.zw, -r11_abs.x, c22.xyxy, r8
					            cmp r8.zw, -r11_abs.y, c25, r8
					            cmp r8.zw, -r11_abs.z, c22, r8
					            cmp r8.zw, -r11_abs.w, c21, r8
					            cmp r8.zw, -r12_abs.x, c5.xyyx, r8
					            cmp r8.zw, -r12_abs.y, c27.xyxy, r8
					            cmp r8.zw, -r12_abs.z, c27, r8
					            cmp r8.zw, -r12_abs.w, c14.xywz, r8
					            cmp r8.zw, -r13_abs.x, -c26.xyzx, r8
					            cmp r8.zw, -r13_abs.y, c4.y, r8
					            cmp r8.zw, -r13_abs.z, c23.xyxy, r8
					            cmp r8.zw, -r13_abs.w, -c25.xywz, r8
					            cmp r8.zw, -r14_abs.x, c5.xyxy, r8
					            cmp r8.zw, -r14_abs.y, -c25.xywy, r8
					            cmp r8.zw, -r14_abs.z, c22.xyyx, r8
					            cmp r8.zw, -r14_abs.w, c4.xyyx, r8
					            mad r8.xy, r8, c21.y, r8.zwzw
					            mul r8.xy, r0.y, r8
					            mad r3.xy, r8, c1, v0
					            texldl r9, r3.xyww, s2
					            texldl r10, r3.xyww, s3
					            dp2add r0.w, r8, r8, c5.y
					            rsq r0.w, r0.w
					            rcp r0.w, r0.w
					            mad r0.w, r10.x, c4.w, -r0.w
					            add r0.w, r0.w, c21.y
					            mul_sat r0.w, r0.w, -c9.w
					            mul r0.w, r0.x, r0.w
					            add_sat r1.x, -r9.w, c2.z
					            mul r8.x, r10.y, r0.w
					            add r1.x, r1.x, c5.x
					            mad r8.w, r8.x, r1.x, c8.x
					            mad r10.w, r0.w, r10.z, c8.x
					            mul r8.xyz, r8.w, r9
					            mul r10.xyz, r9, r10.w
					            texldl r9, r3, s1
					            mad r5, r8, r9.x, r5
					            mad r4, r10, r9.x, r4
					            add r0.z, r0.z, c5.x
					          endrep
					          mov r6, r4
					          mov r7, r5
					        endif
					      endif
					      max r0.x, r1.y, c22.x
					      mul r0.x, r0.x, r0.x
					      mul r0.x, r0.x, r7.w
					      mul r0.x, r0.x, c23.z
					      mov_sat r0, r0.x
					      add r1.x, r6.w, c23.w
					      rcp r1.x, r1.x
					      mul r1.xyz, r1.x, r6
					      add r1.w, r7.w, c23.w
					      rcp r1.w, r1.w
					      mad r3.xyz, r7, r1.w, -r1
					      mad r2.xyz, r0.w, r3, r1
					      mov oC1, r0
					    endif
					    mov oC0, r2
					
					// approximately 250 instruction slots used (26 texture, 224 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" "SC_DOF_MASK_ON" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _ScionResolutionParameters1;
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_3[6];
						vec4 _CoCParams1;
						vec4 unused_0_5[9];
						float _TemporalUVOffset;
					};
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _ExclusionMask;
					uniform  sampler2D _PresortTexture;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					layout(location = 1) out vec4 SV_Target1;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec4 u_xlat12;
					float u_xlat13;
					float u_xlat14;
					vec2 u_xlat15;
					vec2 u_xlat26;
					bool u_xlatb26;
					float u_xlat27;
					float u_xlat39;
					void main()
					{
					    u_xlat0 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat2 = textureLod(_ExclusionMask, vs_TEXCOORD0.xy, 0.0);
					    u_xlat13 = u_xlat0.x * u_xlat2.x;
					    u_xlatb26 = u_xlat13<1.0;
					    if(u_xlatb26){
					        SV_Target0 = u_xlat1;
					        SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
					        return;
					    }
					    u_xlat3 = textureLod(_PresortTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat26.x = (-u_xlat1.w) + _CoCParams1.z;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat26.x = u_xlat26.x + 1.0;
					    u_xlat4.w = u_xlat3.y * u_xlat26.x + 9.99999975e-05;
					    u_xlat3.w = u_xlat3.z + 9.99999975e-05;
					    u_xlat4.xyz = u_xlat1.xyz * u_xlat4.www;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat3.www;
					    u_xlat26.x = u_xlat13 * 0.285714298;
					    u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(1.37, 2.74000001, 4.11000013, 5.48000002);
					    u_xlat6 = vs_TEXCOORD0.xyxy * _ScionResolutionParameters1.xyxy;
					    u_xlat7 = u_xlat5.xxyy * u_xlat6.zwzw;
					    u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat39 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat7.xy * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, -0.707106829);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat9.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat4 = u_xlat10 * u_xlat8.xxxx + u_xlat4;
					    u_xlat3 = u_xlat9 * u_xlat8.xxxx + u_xlat3;
					    u_xlat39 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat7.zw * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-1.0, 0.0);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat8.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat9.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat8.w = u_xlat39 * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat7 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat4 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					    u_xlat3 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					    u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					    u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat39 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat5.xy * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, 0.707106829);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat8.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat9.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat8.w = u_xlat39 * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat7 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat4 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					    u_xlat3 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					    u_xlat39 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat5.zw * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, -1.0);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat7.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat5.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat7.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat8.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat7.w = u_xlat39 * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat5.xyz * u_xlat7.www;
					    u_xlat5 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat4 = u_xlat8 * u_xlat5.xxxx + u_xlat4;
					    u_xlat3 = u_xlat7 * u_xlat5.xxxx + u_xlat3;
					    u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(6.8499999, 8.22000027, 9.59000015, 10.96);
					    u_xlat7 = u_xlat5.xxyy * u_xlat6.zwzw;
					    u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat39 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat7.xy * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, 1.0);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat9.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat4 = u_xlat10 * u_xlat8.xxxx + u_xlat4;
					    u_xlat3 = u_xlat9 * u_xlat8.xxxx + u_xlat3;
					    u_xlat39 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat7.zw * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, -0.707106829);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat8.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat9.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat8.w = u_xlat39 * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat7 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat4 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					    u_xlat3 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					    u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					    u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat39 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat5.xy * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(1.0, 0.0);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat8.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat9.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat8.w = u_xlat39 * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat7 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat4 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					    u_xlat3 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					    u_xlat39 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat5.zw * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					    u_xlat26.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					    u_xlat26.x = sqrt(u_xlat26.x);
					    u_xlat26.x = u_xlat7.x * 10.0 + (-u_xlat26.x);
					    u_xlat26.x = u_xlat26.x + 0.25;
					    u_xlat26.x = u_xlat26.x * 4.0;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat39 = (-u_xlat5.w) + _CoCParams1.z;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat27 = u_xlat7.y * u_xlat26.x;
					    u_xlat39 = u_xlat39 + 1.0;
					    u_xlat8.w = u_xlat27 * u_xlat39 + 0.00100000005;
					    u_xlat7.w = u_xlat26.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat5.xyz * u_xlat7.www;
					    u_xlat5 = textureLod(_ExclusionMask, u_xlat1.xy, 0.0);
					    u_xlat4 = u_xlat8 * u_xlat5.xxxx + u_xlat4;
					    u_xlat3 = u_xlat7 * u_xlat5.xxxx + u_xlat3;
					    u_xlatb26 = 2.0<u_xlat13;
					    if(u_xlatb26){
					        u_xlat26.x = u_xlat0.x * u_xlat2.x + -2.0;
					        u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					        u_xlat39 = u_xlat13 * 0.571428478;
					        u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(12.3299999, 13.6999998, 15.0699997, 16.4400005);
					        u_xlat7 = u_xlat5.xxyy * u_xlat6.zwzw;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, -0.707106829);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat9.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat9.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat10.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat9.w = u_xlat1.x * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat10 = u_xlat10 * u_xlat8.xxxx + u_xlat4;
					        u_xlat8 = u_xlat9 * u_xlat8.xxxx + u_xlat3;
					        u_xlat1.x = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.923879385, -0.382683486);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat9.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat9.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat11.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat9.w = u_xlat1.x * u_xlat9.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat7.xyz * u_xlat11.www;
					        u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					        u_xlat7 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat10 = u_xlat11 * u_xlat7.xxxx + u_xlat10;
					        u_xlat7 = u_xlat9 * u_xlat7.xxxx + u_xlat8;
					        u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					        u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-1.0, 0.0);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat9.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat9.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat11.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat9.w = u_xlat1.x * u_xlat9.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat10 = u_xlat11 * u_xlat8.xxxx + u_xlat10;
					        u_xlat7 = u_xlat9 * u_xlat8.xxxx + u_xlat7;
					        u_xlat1.x = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.923879385, 0.382683486);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat8.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat5.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat8.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat9.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat8.w = u_xlat1.x * u_xlat8.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat5.xyz * u_xlat9.www;
					        u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					        u_xlat5 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat9 * u_xlat5.xxxx + u_xlat10;
					        u_xlat5 = u_xlat8 * u_xlat5.xxxx + u_xlat7;
					        u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(17.8099995, 19.1800003, 20.5499992, 21.9200001);
					        u_xlat8 = u_xlat6.zwzw * u_xlat7.xxyy;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, 0.707106829);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat11.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat10.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat11.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat12.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat11.w = u_xlat1.x * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					        u_xlat10 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat12 * u_xlat10.xxxx + u_xlat9;
					        u_xlat5 = u_xlat11 * u_xlat10.xxxx + u_xlat5;
					        u_xlat1.x = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.382683486, -0.923879385);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat10.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat10.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat11.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat10.w = u_xlat1.x * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat11 * u_xlat8.xxxx + u_xlat9;
					        u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					        u_xlat7 = u_xlat6.zwzw * u_xlat7.zzww;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.382683396, 0.923879385);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat10.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat10.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat11.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat10.w = u_xlat1.x * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat11 * u_xlat8.xxxx + u_xlat9;
					        u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					        u_xlat1.x = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, -1.0);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat8.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat8.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat10.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat8.w = u_xlat1.x * u_xlat8.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat7.xyz * u_xlat10.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat7 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat10 * u_xlat7.xxxx + u_xlat9;
					        u_xlat5 = u_xlat8 * u_xlat7.xxxx + u_xlat5;
					        u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(23.2900009, 24.6599998, 26.0300007, 27.3999996);
					        u_xlat8 = u_xlat6.zwzw * u_xlat7.xxyy;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, 1.0);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat11.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat10.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat11.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat12.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat11.w = u_xlat1.x * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					        u_xlat10 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat12 * u_xlat10.xxxx + u_xlat9;
					        u_xlat5 = u_xlat11 * u_xlat10.xxxx + u_xlat5;
					        u_xlat1.x = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.382683396, -0.923879385);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat10.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat10.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat11.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat10.w = u_xlat1.x * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat11 * u_xlat8.xxxx + u_xlat9;
					        u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					        u_xlat7 = u_xlat6.zwzw * u_xlat7.zzww;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.382683486, 0.923879385);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat10.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat10.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat11.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat10.w = u_xlat1.x * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat11 * u_xlat8.xxxx + u_xlat9;
					        u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					        u_xlat1.x = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, -0.707106829);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat8.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat8.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat10.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat8.w = u_xlat1.x * u_xlat8.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat7.xyz * u_xlat10.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat7 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat10 * u_xlat7.xxxx + u_xlat9;
					        u_xlat5 = u_xlat8 * u_xlat7.xxxx + u_xlat5;
					        u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(28.7700005, 30.1399994, 31.5100002, 32.8800011);
					        u_xlat8 = u_xlat6.zwzw * u_xlat7.xxyy;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.923879385, -0.382683486);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat11.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat10.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat11.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat12.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat11.w = u_xlat1.x * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					        u_xlat10 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat12 * u_xlat10.xxxx + u_xlat9;
					        u_xlat5 = u_xlat11 * u_xlat10.xxxx + u_xlat5;
					        u_xlat1.x = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(1.0, 0.0);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat10.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat10.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat11.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat10.w = u_xlat1.x * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat11 * u_xlat8.xxxx + u_xlat9;
					        u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					        u_xlat7 = u_xlat6.zwzw * u_xlat7.zzww;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.923879385, 0.382683486);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat10.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat10.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat11.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat10.w = u_xlat1.x * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat11 * u_xlat8.xxxx + u_xlat9;
					        u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					        u_xlat1.x = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat26.x = u_xlat26.x * u_xlat39;
					        u_xlat39 = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat1.x = u_xlat8.y * u_xlat26.x;
					        u_xlat39 = u_xlat39 + 1.0;
					        u_xlat10.w = u_xlat1.x * u_xlat39 + 0.00100000005;
					        u_xlat8.w = u_xlat26.x * u_xlat8.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat7.xyz * u_xlat10.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat7 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat4 = u_xlat10 * u_xlat7.xxxx + u_xlat9;
					        u_xlat3 = u_xlat8 * u_xlat7.xxxx + u_xlat5;
					        u_xlatb26 = 4.0<u_xlat13;
					        if(u_xlatb26){
					            u_xlat0.x = u_xlat0.x * u_xlat2.x + -4.0;
					            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					            u_xlat26.x = u_xlat13 * 0.857142925;
					            u_xlat2 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(34.25, 35.6199989, 36.9900017, 38.3600006);
					            u_xlat5 = u_xlat2.xxyy * u_xlat6.zwzw;
					            u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, -0.707106829);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					            u_xlat8 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat8.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat9.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat8.w = u_xlat39 * u_xlat8.z + 0.00100000005;
					            u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					            u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					            u_xlat7 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					            u_xlat9 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					            u_xlat7 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					            u_xlat39 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.866025388, -0.499999911);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					            u_xlat8 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat5.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat8.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat8.w = u_xlat39 * u_xlat8.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat5.xyz * u_xlat10.www;
					            u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					            u_xlat5 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					            u_xlat9 = u_xlat10 * u_xlat5.xxxx + u_xlat9;
					            u_xlat5 = u_xlat8 * u_xlat5.xxxx + u_xlat7;
					            u_xlat2 = u_xlat2.zzww * u_xlat6.zwzw;
					            u_xlat2 = u_xlat2 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat2.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat2.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.965925872, -0.258819014);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					            u_xlat8 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat8.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat8.w = u_xlat39 * u_xlat8.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat7.xyz * u_xlat10.www;
					            u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					            u_xlat7 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					            u_xlat9 = u_xlat10 * u_xlat7.xxxx + u_xlat9;
					            u_xlat5 = u_xlat8 * u_xlat7.xxxx + u_xlat5;
					            u_xlat39 = dot(u_xlat2.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat2.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-1.0, 0.0);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					            u_xlat8 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat8.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat8.w = u_xlat39 * u_xlat8.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat7.xyz * u_xlat10.www;
					            u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					            u_xlat2 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat2.xxxx + u_xlat9;
					            u_xlat2 = u_xlat8 * u_xlat2.xxxx + u_xlat5;
					            u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(39.7299995, 41.0999985, 42.4700012, 43.8400002);
					            u_xlat8 = u_xlat5.xxyy * u_xlat6.zwzw;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.965925872, 0.258819014);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat9 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat11 * u_xlat9.xxxx + u_xlat7;
					            u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.866025388, 0.499999911);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					            u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					            u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.500000119, -0.866025329);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat5 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat5.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat5.xxxx + u_xlat2;
					            u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(45.2099991, 46.5800018, 47.9500008, 49.3199997);
					            u_xlat8 = u_xlat5.xxyy * u_xlat6.zwzw;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.5, 0.866025388);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat9 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat11 * u_xlat9.xxxx + u_xlat7;
					            u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.258819014, -0.965925813);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					            u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					            u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.258819103, 0.965925813);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, -1.0);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat5 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat5.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat5.xxxx + u_xlat2;
					            u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(50.6899986, 52.0600014, 53.4300003, 54.7999992);
					            u_xlat8 = u_xlat5.xxyy * u_xlat6.zwzw;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, 1.0);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat9 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat11 * u_xlat9.xxxx + u_xlat7;
					            u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.258818895, -0.965925813);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					            u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					            u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.258819193, 0.965925813);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.499999911, -0.866025388);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat5 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat5.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat5.xxxx + u_xlat2;
					            u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(56.170002, 57.5400009, 58.9099998, 60.2799988);
					            u_xlat8 = u_xlat5.xxyy * u_xlat6.zwzw;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.500000119, 0.866025388);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat9 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat11 * u_xlat9.xxxx + u_xlat7;
					            u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, -0.707106829);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					            u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					            u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.866025388, -0.5);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.965925813, -0.258819014);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat5 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat5.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat5.xxxx + u_xlat2;
					            u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(61.6500015, 63.0200005, 64.3899994, 65.7600021);
					            u_xlat8 = u_xlat5.xxyy * u_xlat6.zwzw;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(1.0, 0.0);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat9 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat11 * u_xlat9.xxxx + u_xlat7;
					            u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.965925813, 0.258819014);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					            u_xlat5 = u_xlat5.zzww * u_xlat6;
					            u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.866025388, 0.5);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat8 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat6.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat8.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat9.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat8.w = u_xlat39 * u_xlat8.z + 0.00100000005;
					            u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					            u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					            u_xlat6 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat9 * u_xlat6.xxxx + u_xlat7;
					            u_xlat2 = u_xlat8 * u_xlat6.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					            u_xlat26.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					            u_xlat6 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					            u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					            u_xlat26.x = sqrt(u_xlat26.x);
					            u_xlat26.x = u_xlat6.x * 10.0 + (-u_xlat26.x);
					            u_xlat26.x = u_xlat26.x + 0.25;
					            u_xlat26.x = u_xlat26.x * 4.0;
					            u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					            u_xlat0.x = u_xlat0.x * u_xlat26.x;
					            u_xlat26.x = (-u_xlat5.w) + _CoCParams1.z;
					            u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					            u_xlat39 = u_xlat6.y * u_xlat0.x;
					            u_xlat26.x = u_xlat26.x + 1.0;
					            u_xlat8.w = u_xlat39 * u_xlat26.x + 0.00100000005;
					            u_xlat6.w = u_xlat0.x * u_xlat6.z + 0.00100000005;
					            u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					            u_xlat6.xyz = u_xlat5.xyz * u_xlat6.www;
					            u_xlat5 = textureLod(_ExclusionMask, u_xlat1.xy, 0.0);
					            u_xlat4 = u_xlat8 * u_xlat5.xxxx + u_xlat7;
					            u_xlat3 = u_xlat6 * u_xlat5.xxxx + u_xlat2;
					        }
					    }
					    u_xlat0.x = max(u_xlat13, 0.5);
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat4.w;
					    u_xlat0.x = u_xlat0.x * 0.0641141385;
					    u_xlat0 = u_xlat0.xxxx;
					    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.w + 9.99999994e-09;
					    u_xlat1.xyz = u_xlat3.xyz / u_xlat1.xxx;
					    u_xlat2.x = u_xlat4.w + 9.99999994e-09;
					    u_xlat2.xyz = u_xlat4.xyz / u_xlat2.xxx;
					    u_xlat2.xyz = (-u_xlat1.xyz) + u_xlat2.xyz;
					    SV_Target0.xyz = u_xlat0.www * u_xlat2.xyz + u_xlat1.xyz;
					    SV_Target0.w = u_xlat1.w;
					    SV_Target1 = u_xlat0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _CoCParams1;
					//   sampler2D _HalfResSourceDepthTexture;
					//   sampler2D _PresortTexture;
					//   float4 _ScionResolutionParameters1;
					//   float4 _ScionResolutionParameters2;
					//   float _TemporalUVOffset;
					//   sampler2D _TiledNeighbourhoodData;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters1 c0       1
					//   _ScionResolutionParameters2 c1       1
					//   _CoCParams1                 c2       1
					//   _TemporalUVOffset           c3       1
					//   _TiledNeighbourhoodData     s0       1
					//   _HalfResSourceDepthTexture  s1       1
					//   _PresortTexture             s2       1
					//
					
					    ps_3_0
					    def c4, 0.707106829, -0.707106829, 0, 10
					    def c5, 1, 0, 9.99999975e-005, 0.285714298
					    def c6, 0.000231481477, 0.25, 0, -1
					    def c7, 0, 1.37, 3571, 0
					    def c8, -5, -6, -7, -8
					    def c9, 0.00100000005, 0.571428478, 0, 9
					    def c10, 2, -1, -3, -4
					    def c11, -9, -10, -11, -12
					    def c12, -13, -14, -15, -16
					    def c13, -17, -18, -19, -20
					    def c14, -21, -22, -23, -24
					    def c15, 0.857142925, 25, -0.866025388, -0.499999911
					    def c16, -25, -26, -27, -28
					    def c17, -29, -30, -31, -32
					    def c18, -33, -34, -35, -36
					    def c19, -37, -38, -39, -40
					    def c20, -41, -42, -43, -44
					    def c21, -45, -46, -47, -48
					    def c22, 0.5, 0.866025388, 0.258819103, 0.965925813
					    def c23, 0.866025388, -0.5, 0.0641141385, 9.99999994e-009
					    def c24, -0.923879385, -0.382683486, 0.382683486, -0.382683396
					    def c25, -0.965925872, -0.258819014, 0.258819014, -0.965925813
					    def c26, -0.866025388, 0.499999911, 0.500000119, -0.866025329
					    def c27, -0.258818895, -0.965925813, -0.258819193, 0.965925813
					    defi i0, 8, 0, 0, 0
					    defi i1, 16, 0, 0, 0
					    defi i2, 24, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    mul r0, c5.xxyy, v0.xyxx
					    texldl r1, r0, s0
					    texldl r2, r0, s1
					    if_lt r1.x, c5.x
					      mov oC1, c5.y
					    else
					      texldl r0, r0, s2
					      add_sat r0.x, -r2.w, c2.z
					      add r0.x, r0.x, c5.x
					      mad r0.x, r0.y, r0.x, c5.z
					      add r0.y, r0.z, c5.z
					      mul r1.yzw, r0.x, r2.xxyz
					      mul r3.xyz, r0.y, r2
					      mul r0.z, r1.x, c5.w
					      mul r4.xy, c0, v0
					      mov r5.zw, c5.y
					      mov r6.xyz, r3
					      mov r6.w, r0.y
					      mov r7.xyz, r1.yzww
					      mov r7.w, r0.x
					      mov r0.w, c5.x
					      rep i0
					        mov r8.y, c7.y
					        mad r3.w, r0.w, r8.y, c3.x
					        mul r4.zw, r3.w, r4.xyxy
					        mad r4.zw, r4, c6.x, c6.xyyz
					        dp2add r3.w, r4.zwzw, c7.z, c7.w
					        mul r4.zw, r4, r3.w
					        frc r4.zw, r4
					        mad r4.zw, r4, c10.x, c10.y
					        add r8, r0.w, -c10_abs.yxzw
					        add r9, r0.w, c8
					        cmp r10.xy, -r8_abs.x, c4, c4.z
					        cmp r8.xy, -r8_abs.y, c6.wzzw, r10
					        cmp r8.xy, -r8_abs.z, c4.x, r8
					        cmp r8.xy, -r8_abs.w, c6.zwzw, r8
					        cmp r8.xy, -r9_abs.x, c5.yxzw, r8
					        cmp r8.xy, -r9_abs.y, c4.y, r8
					        cmp r8.xy, -r9_abs.z, c5, r8
					        cmp r8.xy, -r9_abs.w, c4.yxzw, r8
					        mad r4.zw, r4, c6.y, r8.xyxy
					        mul r4.zw, r0.z, r4
					        mad r5.xy, r4.zwzw, c1, v0
					        texldl r8, r5.xyww, s1
					        texldl r9, r5, s2
					        dp2add r3.w, r4.zwzw, r4.zwzw, c5.y
					        rsq r3.w, r3.w
					        rcp r3.w, r3.w
					        mad r3.w, r9.x, c4.w, -r3.w
					        add r3.w, r3.w, c6.y
					        mul_sat r3.w, r3.w, -c10.w
					        add_sat r4.z, -r8.w, c2.z
					        mul r4.w, r9.y, r3.w
					        add r4.z, r4.z, c5.x
					        mad r10.w, r4.w, r4.z, c9.x
					        mad r9.w, r3.w, r9.z, c9.x
					        mul r10.xyz, r8, r10.w
					        mul r9.xyz, r8, r9.w
					        add r7, r7, r10
					        add r6, r6, r9
					        add r0.w, r0.w, c5.x
					      endrep
					      if_lt c10.x, r1.x
					        add_sat r0.x, r1.x, -c10.x
					        mul r0.y, r1.x, c9.y
					        mov r3.zw, c5.y
					        mov r5, r6
					        mov r8, r7
					        mov r0.z, c9.w
					        rep i1
					          mov r1.y, c7.y
					          mad r0.w, r0.z, r1.y, c3.x
					          mul r1.yz, r0.w, r4.xxyw
					          mad r1.yz, r1, c6.x, c6
					          dp2add r0.w, r1.yzzw, c7.z, c7.w
					          mul r1.yz, r1, r0.w
					          frc r1.yz, r1
					          mad r1.yz, r1, c10.x, c10.y
					          add r9, r0.z, c11
					          add r10, r0.z, c12
					          add r11, r0.z, c13
					          add r12, r0.z, c14
					          cmp r4.zw, -r9_abs.x, c4.xyxy, c4.z
					          cmp r4.zw, -r9_abs.y, c24.xyxy, r4
					          cmp r4.zw, -r9_abs.z, c6.xywz, r4
					          cmp r4.zw, -r9_abs.w, c24.xyxz, r4
					          cmp r4.zw, -r10_abs.x, c4.x, r4
					          cmp r4.zw, -r10_abs.y, c24.xyzx, r4
					          cmp r4.zw, -r10_abs.z, -c24.xywx, r4
					          cmp r4.zw, -r10_abs.w, c6, r4
					          cmp r4.zw, -r11_abs.x, c5.xyyx, r4
					          cmp r4.zw, -r11_abs.y, c24.xywx, r4
					          cmp r4.zw, -r11_abs.z, -c24.xyzx, r4
					          cmp r4.zw, -r11_abs.w, c4.y, r4
					          cmp r4.zw, -r12_abs.x, -c24.xyxz, r4
					          cmp r4.zw, -r12_abs.y, c5.xyxy, r4
					          cmp r4.zw, -r12_abs.z, -c24.xyxy, r4
					          cmp r4.zw, -r12_abs.w, c4.xyyx, r4
					          mad r1.yz, r1, c6.y, r4.xzww
					          mul r1.yz, r0.y, r1
					          mad r3.xy, r1.yzzw, c1, v0
					          texldl r9, r3.xyww, s1
					          texldl r10, r3, s2
					          dp2add r0.w, r1.yzzw, r1.yzzw, c5.y
					          rsq r0.w, r0.w
					          rcp r0.w, r0.w
					          mad r0.w, r10.x, c4.w, -r0.w
					          add r0.w, r0.w, c6.y
					          mul_sat r0.w, r0.w, -c10.w
					          mul r0.w, r0.x, r0.w
					          add_sat r1.y, -r9.w, c2.z
					          mul r1.z, r10.y, r0.w
					          add r1.y, r1.y, c5.x
					          mad r11.w, r1.z, r1.y, c9.x
					          mad r10.w, r0.w, r10.z, c9.x
					          mul r11.xyz, r9, r11.w
					          mul r10.xyz, r9, r10.w
					          add r8, r8, r11
					          add r5, r5, r10
					          add r0.z, r0.z, c5.x
					        endrep
					        mov r6, r5
					        mov r7, r8
					        if_lt -c10.w, r1.x
					          add_sat r0.x, r1.x, c10.w
					          mul r0.y, r1.x, c15.x
					          mov r3.zw, c5.y
					          mov r5, r6
					          mov r8, r7
					          mov r0.z, c15.y
					          rep i2
					            mov r1.y, c7.y
					            mad r0.w, r0.z, r1.y, c3.x
					            mul r1.yz, r0.w, r4.xxyw
					            mad r1.yz, r1, c6.x, c6
					            dp2add r0.w, r1.yzzw, c7.z, c7.w
					            mul r1.yz, r1, r0.w
					            frc r1.yz, r1
					            mad r1.yz, r1, c10.x, c10.y
					            add r9, r0.z, c16
					            add r10, r0.z, c17
					            add r11, r0.z, c18
					            add r12, r0.z, c19
					            add r13, r0.z, c20
					            add r14, r0.z, c21
					            cmp r4.zw, -r9_abs.x, c4.xyxy, c4.z
					            cmp r4.zw, -r9_abs.y, c15, r4
					            cmp r4.zw, -r9_abs.z, c25.xyxy, r4
					            cmp r4.zw, -r9_abs.w, c6.xywz, r4
					            cmp r4.zw, -r10_abs.x, c25.xyxz, r4
					            cmp r4.zw, -r10_abs.y, c26.xyxy, r4
					            cmp r4.zw, -r10_abs.z, c4.xyyx, r4
					            cmp r4.zw, -r10_abs.w, c26, r4
					            cmp r4.zw, -r11_abs.x, c22.xyxy, r4
					            cmp r4.zw, -r11_abs.y, c25, r4
					            cmp r4.zw, -r11_abs.z, c22, r4
					            cmp r4.zw, -r11_abs.w, c6, r4
					            cmp r4.zw, -r12_abs.x, c5.xyyx, r4
					            cmp r4.zw, -r12_abs.y, c27.xyxy, r4
					            cmp r4.zw, -r12_abs.z, c27, r4
					            cmp r4.zw, -r12_abs.w, c15.xywz, r4
					            cmp r4.zw, -r13_abs.x, -c26.xyzx, r4
					            cmp r4.zw, -r13_abs.y, c4.y, r4
					            cmp r4.zw, -r13_abs.z, c23.xyxy, r4
					            cmp r4.zw, -r13_abs.w, -c25.xywz, r4
					            cmp r4.zw, -r14_abs.x, c5.xyxy, r4
					            cmp r4.zw, -r14_abs.y, -c25.xywy, r4
					            cmp r4.zw, -r14_abs.z, c22.xyyx, r4
					            cmp r4.zw, -r14_abs.w, c4.xyyx, r4
					            mad r1.yz, r1, c6.y, r4.xzww
					            mul r1.yz, r0.y, r1
					            mad r3.xy, r1.yzzw, c1, v0
					            texldl r9, r3.xyww, s1
					            texldl r10, r3, s2
					            dp2add r0.w, r1.yzzw, r1.yzzw, c5.y
					            rsq r0.w, r0.w
					            rcp r0.w, r0.w
					            mad r0.w, r10.x, c4.w, -r0.w
					            add r0.w, r0.w, c6.y
					            mul_sat r0.w, r0.w, -c10.w
					            mul r0.w, r0.x, r0.w
					            add_sat r1.y, -r9.w, c2.z
					            mul r1.z, r10.y, r0.w
					            add r1.y, r1.y, c5.x
					            mad r11.w, r1.z, r1.y, c9.x
					            mad r10.w, r0.w, r10.z, c9.x
					            mul r11.xyz, r9, r11.w
					            mul r10.xyz, r9, r10.w
					            add r8, r8, r11
					            add r5, r5, r10
					            add r0.z, r0.z, c5.x
					          endrep
					          mov r6, r5
					          mov r7, r8
					        endif
					      endif
					      max r0.x, r1.x, c22.x
					      mul r0.x, r0.x, r0.x
					      mul r0.x, r0.x, r7.w
					      mul r0.x, r0.x, c23.z
					      mov_sat r0, r0.x
					      add r1.x, r6.w, c23.w
					      rcp r1.x, r1.x
					      mul r1.xyz, r1.x, r6
					      add r1.w, r7.w, c23.w
					      rcp r1.w, r1.w
					      mad r3.xyz, r7, r1.w, -r1
					      mad r2.xyz, r0.w, r3, r1
					      mov oC1, r0
					    endif
					    mov oC0, r2
					
					// approximately 241 instruction slots used (18 texture, 223 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _ScionResolutionParameters1;
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_3[6];
						vec4 _CoCParams1;
						vec4 unused_0_5[9];
						float _TemporalUVOffset;
					};
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _PresortTexture;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					layout(location = 1) out vec4 SV_Target1;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec2 u_xlat12;
					bool u_xlatb12;
					float u_xlat13;
					vec2 u_xlat24;
					float u_xlat36;
					void main()
					{
					    u_xlat0 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlatb12 = u_xlat0.x<1.0;
					    if(u_xlatb12){
					        SV_Target0 = u_xlat1;
					        SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
					        return;
					    }
					    u_xlat2 = textureLod(_PresortTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat12.x = (-u_xlat1.w) + _CoCParams1.z;
					    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
					    u_xlat12.x = u_xlat12.x + 1.0;
					    u_xlat3.w = u_xlat2.y * u_xlat12.x + 9.99999975e-05;
					    u_xlat2.w = u_xlat2.z + 9.99999975e-05;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat3.www;
					    u_xlat2.xyz = u_xlat1.xyz * u_xlat2.www;
					    u_xlat12.x = u_xlat0.x * 0.285714298;
					    u_xlat4 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(1.37, 2.74000001, 4.11000013, 5.48000002);
					    u_xlat5 = vs_TEXCOORD0.xyxy * _ScionResolutionParameters1.xyxy;
					    u_xlat6 = u_xlat4.xxyy * u_xlat5.zwzw;
					    u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat24.x = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat6.xy * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.25, 0.25) + vec2(0.707106829, -0.707106829);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat8.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat8.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat9.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat8.w = u_xlat24.x * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat3 = u_xlat3 + u_xlat9;
					    u_xlat2 = u_xlat2 + u_xlat8;
					    u_xlat24.x = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat6.zw * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.25, 0.25) + vec2(-1.0, 0.0);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat6.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat7.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat8.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat7.w = u_xlat24.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat6.xyz * u_xlat7.www;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat2 = u_xlat2 + u_xlat7;
					    u_xlat4 = u_xlat4.zzww * u_xlat5.zwzw;
					    u_xlat4 = u_xlat4 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat24.x = dot(u_xlat4.xy, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat4.xy * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.25, 0.25) + vec2(0.707106829, 0.707106829);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat6.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat7.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat8.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat7.w = u_xlat24.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat6.xyz * u_xlat7.www;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat2 = u_xlat2 + u_xlat7;
					    u_xlat24.x = dot(u_xlat4.zw, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat4.zw * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.25, 0.25) + vec2(0.0, -1.0);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat4 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat6 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat6.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat4.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat6.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat7.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat6.w = u_xlat24.x * u_xlat6.z + 0.00100000005;
					    u_xlat7.xyz = u_xlat4.xyz * u_xlat7.www;
					    u_xlat6.xyz = u_xlat4.xyz * u_xlat6.www;
					    u_xlat3 = u_xlat3 + u_xlat7;
					    u_xlat2 = u_xlat2 + u_xlat6;
					    u_xlat4 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(6.8499999, 8.22000027, 9.59000015, 10.96);
					    u_xlat6 = u_xlat4.xxyy * u_xlat5.zwzw;
					    u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat24.x = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat6.xy * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.25, 0.25) + vec2(0.0, 1.0);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat8.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat8.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat9.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat8.w = u_xlat24.x * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat3 = u_xlat3 + u_xlat9;
					    u_xlat2 = u_xlat2 + u_xlat8;
					    u_xlat24.x = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat6.zw * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.25, 0.25) + vec2(-0.707106829, -0.707106829);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat6.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat7.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat8.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat7.w = u_xlat24.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat6.xyz * u_xlat7.www;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat2 = u_xlat2 + u_xlat7;
					    u_xlat4 = u_xlat4.zzww * u_xlat5.zwzw;
					    u_xlat4 = u_xlat4 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat24.x = dot(u_xlat4.xy, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat4.xy * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.25, 0.25) + vec2(1.0, 0.0);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat6.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat7.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat8.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat7.w = u_xlat24.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat6.xyz * u_xlat7.www;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat2 = u_xlat2 + u_xlat7;
					    u_xlat24.x = dot(u_xlat4.zw, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat4.zw * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					    u_xlat12.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat12.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat4 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat6 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat12.x = dot(u_xlat12.xy, u_xlat12.xy);
					    u_xlat12.x = sqrt(u_xlat12.x);
					    u_xlat12.x = u_xlat6.x * 10.0 + (-u_xlat12.x);
					    u_xlat12.x = u_xlat12.x + 0.25;
					    u_xlat12.x = u_xlat12.x * 4.0;
					    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
					    u_xlat24.x = (-u_xlat4.w) + _CoCParams1.z;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = u_xlat6.y * u_xlat12.x;
					    u_xlat24.x = u_xlat24.x + 1.0;
					    u_xlat7.w = u_xlat36 * u_xlat24.x + 0.00100000005;
					    u_xlat6.w = u_xlat12.x * u_xlat6.z + 0.00100000005;
					    u_xlat7.xyz = u_xlat4.xyz * u_xlat7.www;
					    u_xlat6.xyz = u_xlat4.xyz * u_xlat6.www;
					    u_xlat3 = u_xlat3 + u_xlat7;
					    u_xlat2 = u_xlat2 + u_xlat6;
					    u_xlatb12 = 2.0<u_xlat0.x;
					    if(u_xlatb12){
					        u_xlat12.x = u_xlat0.x + -2.0;
					        u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
					        u_xlat24.x = u_xlat0.x * 0.571428478;
					        u_xlat4 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(12.3299999, 13.6999998, 15.0699997, 16.4400005);
					        u_xlat6 = u_xlat4.xxyy * u_xlat5.zwzw;
					        u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, -0.707106829);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat8.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat7 = u_xlat3 + u_xlat9;
					        u_xlat8 = u_xlat2 + u_xlat8;
					        u_xlat36 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.923879385, -0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat6.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat6.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat7 + u_xlat10;
					        u_xlat7 = u_xlat8 + u_xlat9;
					        u_xlat4 = u_xlat4.zzww * u_xlat5.zwzw;
					        u_xlat4 = u_xlat4 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat4.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat4.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-1.0, 0.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat7 = u_xlat7 + u_xlat9;
					        u_xlat36 = dot(u_xlat4.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat4.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.923879385, 0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					        u_xlat4 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat4.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat4.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat4.w = u_xlat36 * u_xlat4.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat4.xyz = u_xlat4.www * u_xlat8.xyz;
					        u_xlat6 = u_xlat6 + u_xlat9;
					        u_xlat4 = u_xlat4 + u_xlat7;
					        u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(17.8099995, 19.1800003, 20.5499992, 21.9200001);
					        u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, 0.707106829);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat10.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat6 = u_xlat6 + u_xlat11;
					        u_xlat4 = u_xlat4 + u_xlat10;
					        u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.382683486, -0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat7 = u_xlat5.zwzw * u_xlat7.zzww;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.382683396, 0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, -1.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat7 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat7.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat7.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat7.w = u_xlat36 * u_xlat7.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat7.xyz = u_xlat7.www * u_xlat8.xyz;
					        u_xlat6 = u_xlat6 + u_xlat9;
					        u_xlat4 = u_xlat4 + u_xlat7;
					        u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(23.2900009, 24.6599998, 26.0300007, 27.3999996);
					        u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, 1.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat10.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat6 = u_xlat6 + u_xlat11;
					        u_xlat4 = u_xlat4 + u_xlat10;
					        u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.382683396, -0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat7 = u_xlat5.zwzw * u_xlat7.zzww;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.382683486, 0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, -0.707106829);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat7 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat7.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat7.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat7.w = u_xlat36 * u_xlat7.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat7.xyz = u_xlat7.www * u_xlat8.xyz;
					        u_xlat6 = u_xlat6 + u_xlat9;
					        u_xlat4 = u_xlat4 + u_xlat7;
					        u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(28.7700005, 30.1399994, 31.5100002, 32.8800011);
					        u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.923879385, -0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat10.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat6 = u_xlat6 + u_xlat11;
					        u_xlat4 = u_xlat4 + u_xlat10;
					        u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(1.0, 0.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat7 = u_xlat5.zwzw * u_xlat7.zzww;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.923879385, 0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					        u_xlat24.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					        u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					        u_xlat24.x = sqrt(u_xlat24.x);
					        u_xlat24.x = u_xlat8.x * 10.0 + (-u_xlat24.x);
					        u_xlat24.x = u_xlat24.x + 0.25;
					        u_xlat24.x = u_xlat24.x * 4.0;
					        u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					        u_xlat12.x = u_xlat12.x * u_xlat24.x;
					        u_xlat24.x = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					        u_xlat36 = u_xlat8.y * u_xlat12.x;
					        u_xlat24.x = u_xlat24.x + 1.0;
					        u_xlat9.w = u_xlat36 * u_xlat24.x + 0.00100000005;
					        u_xlat8.w = u_xlat12.x * u_xlat8.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat3 = u_xlat6 + u_xlat9;
					        u_xlat2 = u_xlat4 + u_xlat8;
					        u_xlatb12 = 4.0<u_xlat0.x;
					        if(u_xlatb12){
					            u_xlat12.x = u_xlat0.x + -4.0;
					            u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
					            u_xlat24.x = u_xlat0.x * 0.857142925;
					            u_xlat4 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(34.25, 35.6199989, 36.9900017, 38.3600006);
					            u_xlat6 = u_xlat4.xxyy * u_xlat5.zwzw;
					            u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat6.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, -0.707106829);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					            u_xlat8 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat8.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					            u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					            u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					            u_xlat7 = u_xlat3 + u_xlat9;
					            u_xlat8 = u_xlat2 + u_xlat8;
					            u_xlat36 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat6.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.866025388, -0.499999911);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat6.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat6.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat7 + u_xlat10;
					            u_xlat7 = u_xlat8 + u_xlat9;
					            u_xlat4 = u_xlat4.zzww * u_xlat5.zwzw;
					            u_xlat4 = u_xlat4 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat4.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat4.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.965925872, -0.258819014);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat7 = u_xlat7 + u_xlat9;
					            u_xlat36 = dot(u_xlat4.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat4.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-1.0, 0.0);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					            u_xlat4 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat4.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat4.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat4.w = u_xlat36 * u_xlat4.z + 0.00100000005;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat4.xyz = u_xlat4.www * u_xlat8.xyz;
					            u_xlat6 = u_xlat6 + u_xlat9;
					            u_xlat4 = u_xlat4 + u_xlat7;
					            u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(39.7299995, 41.0999985, 42.4700012, 43.8400002);
					            u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.965925872, 0.258819014);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat10.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat6 = u_xlat6 + u_xlat11;
					            u_xlat4 = u_xlat4 + u_xlat10;
					            u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.866025388, 0.499999911);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat4 = u_xlat4 + u_xlat9;
					            u_xlat7 = u_xlat5.zwzw * u_xlat7.zzww;
					            u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat4 = u_xlat4 + u_xlat9;
					            u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.500000119, -0.866025329);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat7 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat7.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat7.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat7.w = u_xlat36 * u_xlat7.z + 0.00100000005;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat7.xyz = u_xlat7.www * u_xlat8.xyz;
					            u_xlat6 = u_xlat6 + u_xlat9;
					            u_xlat4 = u_xlat4 + u_xlat7;
					            u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(45.2099991, 46.5800018, 47.9500008, 49.3199997);
					            u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.5, 0.866025388);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat10.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat6 = u_xlat6 + u_xlat11;
					            u_xlat4 = u_xlat4 + u_xlat10;
					            u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.258819014, -0.965925813);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat4 = u_xlat4 + u_xlat9;
					            u_xlat7 = u_xlat5.zwzw * u_xlat7.zzww;
					            u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.258819103, 0.965925813);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat4 = u_xlat4 + u_xlat9;
					            u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, -1.0);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat7 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat7.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat7.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat7.w = u_xlat36 * u_xlat7.z + 0.00100000005;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat7.xyz = u_xlat7.www * u_xlat8.xyz;
					            u_xlat6 = u_xlat6 + u_xlat9;
					            u_xlat4 = u_xlat4 + u_xlat7;
					            u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(50.6899986, 52.0600014, 53.4300003, 54.7999992);
					            u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, 1.0);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat10.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat6 = u_xlat6 + u_xlat11;
					            u_xlat4 = u_xlat4 + u_xlat10;
					            u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.258818895, -0.965925813);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat4 = u_xlat4 + u_xlat9;
					            u_xlat7 = u_xlat5.zwzw * u_xlat7.zzww;
					            u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.258819193, 0.965925813);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat4 = u_xlat4 + u_xlat9;
					            u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.499999911, -0.866025388);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat7 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat7.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat7.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat7.w = u_xlat36 * u_xlat7.z + 0.00100000005;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat7.xyz = u_xlat7.www * u_xlat8.xyz;
					            u_xlat6 = u_xlat6 + u_xlat9;
					            u_xlat4 = u_xlat4 + u_xlat7;
					            u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(56.170002, 57.5400009, 58.9099998, 60.2799988);
					            u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.500000119, 0.866025388);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat10.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat6 = u_xlat6 + u_xlat11;
					            u_xlat4 = u_xlat4 + u_xlat10;
					            u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, -0.707106829);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat4 = u_xlat4 + u_xlat9;
					            u_xlat7 = u_xlat5.zwzw * u_xlat7.zzww;
					            u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.866025388, -0.5);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat4 = u_xlat4 + u_xlat9;
					            u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.965925813, -0.258819014);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat7 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat7.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat7.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat7.w = u_xlat36 * u_xlat7.z + 0.00100000005;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat7.xyz = u_xlat7.www * u_xlat8.xyz;
					            u_xlat6 = u_xlat6 + u_xlat9;
					            u_xlat4 = u_xlat4 + u_xlat7;
					            u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(61.6500015, 63.0200005, 64.3899994, 65.7600021);
					            u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(1.0, 0.0);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat10.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat6 = u_xlat6 + u_xlat11;
					            u_xlat4 = u_xlat4 + u_xlat10;
					            u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.965925813, 0.258819014);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat9.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat6 = u_xlat6 + u_xlat10;
					            u_xlat4 = u_xlat4 + u_xlat9;
					            u_xlat5 = u_xlat5 * u_xlat7.zzww;
					            u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat36 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.xy * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.866025388, 0.5);
					            u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat8 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat36 = sqrt(u_xlat36);
					            u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					            u_xlat36 = u_xlat36 + 0.25;
					            u_xlat36 = u_xlat36 * 4.0;
					            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					            u_xlat36 = u_xlat12.x * u_xlat36;
					            u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat13 = u_xlat8.y * u_xlat36;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					            u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					            u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					            u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					            u_xlat6 = u_xlat6 + u_xlat9;
					            u_xlat4 = u_xlat4 + u_xlat8;
					            u_xlat36 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.zw * vec2(u_xlat36);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					            u_xlat24.xy = u_xlat24.xx * u_xlat1.xy;
					            u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					            u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					            u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					            u_xlat24.x = sqrt(u_xlat24.x);
					            u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					            u_xlat24.x = u_xlat24.x + 0.25;
					            u_xlat24.x = u_xlat24.x * 4.0;
					            u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					            u_xlat12.x = u_xlat12.x * u_xlat24.x;
					            u_xlat24.x = (-u_xlat5.w) + _CoCParams1.z;
					            u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					            u_xlat36 = u_xlat7.y * u_xlat12.x;
					            u_xlat24.x = u_xlat24.x + 1.0;
					            u_xlat8.w = u_xlat36 * u_xlat24.x + 0.00100000005;
					            u_xlat7.w = u_xlat12.x * u_xlat7.z + 0.00100000005;
					            u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					            u_xlat7.xyz = u_xlat5.xyz * u_xlat7.www;
					            u_xlat3 = u_xlat6 + u_xlat8;
					            u_xlat2 = u_xlat4 + u_xlat7;
					        }
					    }
					    u_xlat0.x = max(u_xlat0.x, 0.5);
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat3.w;
					    u_xlat0.x = u_xlat0.x * 0.0641141385;
					    u_xlat0 = u_xlat0.xxxx;
					    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
					    u_xlat1.x = u_xlat2.w + 9.99999994e-09;
					    u_xlat1.xyz = u_xlat2.xyz / u_xlat1.xxx;
					    u_xlat2.x = u_xlat3.w + 9.99999994e-09;
					    u_xlat2.xyz = u_xlat3.xyz / u_xlat2.xxx;
					    u_xlat2.xyz = (-u_xlat1.xyz) + u_xlat2.xyz;
					    SV_Target0.xyz = u_xlat0.www * u_xlat2.xyz + u_xlat1.xyz;
					    SV_Target0.w = u_xlat1.w;
					    SV_Target1 = u_xlat0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" "SC_DOF_MASK_ON" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _CoCParams1;
					//   sampler2D _ExclusionMask;
					//   sampler2D _HalfResSourceDepthTexture;
					//   sampler2D _PresortTexture;
					//   float4 _ScionResolutionParameters1;
					//   float4 _ScionResolutionParameters2;
					//   float _TemporalUVOffset;
					//   sampler2D _TiledNeighbourhoodData;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters1 c0       1
					//   _ScionResolutionParameters2 c1       1
					//   _CoCParams1                 c2       1
					//   _TemporalUVOffset           c3       1
					//   _TiledNeighbourhoodData     s0       1
					//   _ExclusionMask              s1       1
					//   _HalfResSourceDepthTexture  s2       1
					//   _PresortTexture             s3       1
					//
					
					    ps_3_0
					    def c4, 0.707106829, -0.707106829, 0, 10
					    def c5, 1, 0, 9.99999975e-005, 0.285714298
					    def c6, 0, 1.37, 3571, 0
					    def c7, -5, -6, -7, -8
					    def c8, 0.00100000005, 0.571428478, 0, 9
					    def c9, 2, -1, -3, -4
					    def c10, -9, -10, -11, -12
					    def c11, -13, -14, -15, -16
					    def c12, -17, -18, -19, -20
					    def c13, -21, -22, -23, -24
					    def c14, 0.857142925, 25, -0.866025388, -0.499999911
					    def c15, -25, -26, -27, -28
					    def c16, -29, -30, -31, -32
					    def c17, -33, -34, -35, -36
					    def c18, -37, -38, -39, -40
					    def c19, -41, -42, -43, -44
					    def c20, -45, -46, -47, -48
					    def c21, 0.000231481477, 0.25, 0, -1
					    def c22, 0.5, 0.866025388, 0.258819103, 0.965925813
					    def c23, 0.866025388, -0.5, 0.0641141385, 9.99999994e-009
					    def c24, -0.923879385, -0.382683486, 0.382683486, -0.382683396
					    def c25, -0.965925872, -0.258819014, 0.258819014, -0.965925813
					    def c26, -0.866025388, 0.499999911, 0.500000119, -0.866025329
					    def c27, -0.258818895, -0.965925813, -0.258819193, 0.965925813
					    defi i0, 8, 0, 0, 0
					    defi i1, 16, 0, 0, 0
					    defi i2, 24, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    dcl_2d s3
					    mul r0, c5.xxyy, v0.xyxx
					    texldl r1, r0, s0
					    texldl r2, r0, s2
					    texldl r3, r0, s1
					    mul r1.y, r1.x, r3.x
					    if_lt r1.y, c5.x
					      mov oC1, c5.y
					    else
					      texldl r0, r0, s3
					      add_sat r0.x, -r2.w, c2.z
					      add r0.x, r0.x, c5.x
					      mad r0.x, r0.y, r0.x, c5.z
					      add r0.y, r0.z, c5.z
					      mul r3.yzw, r0.x, r2.xxyz
					      mul r4.xyz, r0.y, r2
					      mul r0.z, r1.y, c5.w
					      mul r1.zw, c0.xyxy, v0.xyxy
					      mov r5.zw, c5.y
					      mov r6.xyz, r4
					      mov r6.w, r0.y
					      mov r7.xyz, r3.yzww
					      mov r7.w, r0.x
					      mov r0.w, c5.x
					      rep i0
					        mov r8.y, c6.y
					        mad r4.w, r0.w, r8.y, c3.x
					        mul r8.xy, r1.zwzw, r4.w
					        mad r8.xy, r8, c21.x, c21.yzzw
					        dp2add r4.w, r8, c6.z, c6.w
					        mul r8.xy, r8, r4.w
					        frc r8.xy, r8
					        mad r8.xy, r8, c9.x, c9.y
					        add r9, r0.w, -c9_abs.yxzw
					        add r10, r0.w, c7
					        cmp r8.zw, -r9_abs.x, c4.xyxy, c4.z
					        cmp r8.zw, -r9_abs.y, c21.xywz, r8
					        cmp r8.zw, -r9_abs.z, c4.x, r8
					        cmp r8.zw, -r9_abs.w, c21, r8
					        cmp r8.zw, -r10_abs.x, c5.xyyx, r8
					        cmp r8.zw, -r10_abs.y, c4.y, r8
					        cmp r8.zw, -r10_abs.z, c5.xyxy, r8
					        cmp r8.zw, -r10_abs.w, c4.xyyx, r8
					        mad r8.xy, r8, c21.y, r8.zwzw
					        mul r8.xy, r0.z, r8
					        mad r5.xy, r8, c1, v0
					        texldl r9, r5.xyww, s2
					        texldl r10, r5.xyww, s3
					        dp2add r4.w, r8, r8, c5.y
					        rsq r4.w, r4.w
					        rcp r4.w, r4.w
					        mad r4.w, r10.x, c4.w, -r4.w
					        add r4.w, r4.w, c21.y
					        mul_sat r4.w, r4.w, -c9.w
					        add_sat r8.x, -r9.w, c2.z
					        mul r8.y, r10.y, r4.w
					        add r8.x, r8.x, c5.x
					        mad r8.w, r8.y, r8.x, c8.x
					        mad r10.w, r4.w, r10.z, c8.x
					        mul r8.xyz, r8.w, r9
					        mul r10.xyz, r9, r10.w
					        texldl r9, r5, s1
					        mad r7, r8, r9.x, r7
					        mad r6, r10, r9.x, r6
					        add r0.w, r0.w, c5.x
					      endrep
					      if_lt c9.x, r1.y
					        mad_sat r0.x, r1.x, r3.x, -c9.x
					        mul r0.y, r1.y, c8.y
					        mov r4.zw, c5.y
					        mov r5, r6
					        mov r8, r7
					        mov r0.z, c8.w
					        rep i1
					          mov r3.y, c6.y
					          mad r0.w, r0.z, r3.y, c3.x
					          mul r3.yz, r0.w, r1.xzww
					          mad r3.yz, r3, c21.x, c21
					          dp2add r0.w, r3.yzzw, c6.z, c6.w
					          mul r3.yz, r3, r0.w
					          frc r3.yz, r3
					          mad r3.yz, r3, c9.x, c9.y
					          add r9, r0.z, c10
					          add r10, r0.z, c11
					          add r11, r0.z, c12
					          add r12, r0.z, c13
					          cmp r13.xy, -r9_abs.x, c4, c4.z
					          cmp r9.xy, -r9_abs.y, c24, r13
					          cmp r9.xy, -r9_abs.z, c21.wzzw, r9
					          cmp r9.xy, -r9_abs.w, c24.xzzw, r9
					          cmp r9.xy, -r10_abs.x, c4.x, r9
					          cmp r9.xy, -r10_abs.y, c24.zxzw, r9
					          cmp r9.xy, -r10_abs.z, -c24.wxzw, r9
					          cmp r9.xy, -r10_abs.w, c21.zwzw, r9
					          cmp r9.xy, -r11_abs.x, c5.yxzw, r9
					          cmp r9.xy, -r11_abs.y, c24.wxzw, r9
					          cmp r9.xy, -r11_abs.z, -c24.zxzw, r9
					          cmp r9.xy, -r11_abs.w, c4.y, r9
					          cmp r9.xy, -r12_abs.x, -c24.xzzw, r9
					          cmp r9.xy, -r12_abs.y, c5, r9
					          cmp r9.xy, -r12_abs.z, -c24, r9
					          cmp r9.xy, -r12_abs.w, c4.yxzw, r9
					          mad r3.yz, r3, c21.y, r9.xxyw
					          mul r3.yz, r0.y, r3
					          mad r4.xy, r3.yzzw, c1, v0
					          texldl r9, r4.xyww, s2
					          texldl r10, r4.xyww, s3
					          dp2add r0.w, r3.yzzw, r3.yzzw, c5.y
					          rsq r0.w, r0.w
					          rcp r0.w, r0.w
					          mad r0.w, r10.x, c4.w, -r0.w
					          add r0.w, r0.w, c21.y
					          mul_sat r0.w, r0.w, -c9.w
					          mul r0.w, r0.x, r0.w
					          add_sat r3.y, -r9.w, c2.z
					          mul r3.z, r10.y, r0.w
					          add r3.y, r3.y, c5.x
					          mad r11.w, r3.z, r3.y, c8.x
					          mad r10.w, r0.w, r10.z, c8.x
					          mul r11.xyz, r9, r11.w
					          mul r10.xyz, r9, r10.w
					          texldl r9, r4, s1
					          mad r8, r11, r9.x, r8
					          mad r5, r10, r9.x, r5
					          add r0.z, r0.z, c5.x
					        endrep
					        mov r6, r5
					        mov r7, r8
					        if_lt -c9.w, r1.y
					          mad_sat r0.x, r1.x, r3.x, c9.w
					          mul r0.y, r1.y, c14.x
					          mov r3.zw, c5.y
					          mov r4, r6
					          mov r5, r7
					          mov r0.z, c14.y
					          rep i2
					            mov r8.y, c6.y
					            mad r0.w, r0.z, r8.y, c3.x
					            mul r8.xy, r0.w, r1.zwzw
					            mad r8.xy, r8, c21.x, c21.yzzw
					            dp2add r0.w, r8, c6.z, c6.w
					            mul r8.xy, r8, r0.w
					            frc r8.xy, r8
					            mad r8.xy, r8, c9.x, c9.y
					            add r9, r0.z, c15
					            add r10, r0.z, c16
					            add r11, r0.z, c17
					            add r12, r0.z, c18
					            add r13, r0.z, c19
					            add r14, r0.z, c20
					            cmp r8.zw, -r9_abs.x, c4.xyxy, c4.z
					            cmp r8.zw, -r9_abs.y, c14, r8
					            cmp r8.zw, -r9_abs.z, c25.xyxy, r8
					            cmp r8.zw, -r9_abs.w, c21.xywz, r8
					            cmp r8.zw, -r10_abs.x, c25.xyxz, r8
					            cmp r8.zw, -r10_abs.y, c26.xyxy, r8
					            cmp r8.zw, -r10_abs.z, c4.xyyx, r8
					            cmp r8.zw, -r10_abs.w, c26, r8
					            cmp r8.zw, -r11_abs.x, c22.xyxy, r8
					            cmp r8.zw, -r11_abs.y, c25, r8
					            cmp r8.zw, -r11_abs.z, c22, r8
					            cmp r8.zw, -r11_abs.w, c21, r8
					            cmp r8.zw, -r12_abs.x, c5.xyyx, r8
					            cmp r8.zw, -r12_abs.y, c27.xyxy, r8
					            cmp r8.zw, -r12_abs.z, c27, r8
					            cmp r8.zw, -r12_abs.w, c14.xywz, r8
					            cmp r8.zw, -r13_abs.x, -c26.xyzx, r8
					            cmp r8.zw, -r13_abs.y, c4.y, r8
					            cmp r8.zw, -r13_abs.z, c23.xyxy, r8
					            cmp r8.zw, -r13_abs.w, -c25.xywz, r8
					            cmp r8.zw, -r14_abs.x, c5.xyxy, r8
					            cmp r8.zw, -r14_abs.y, -c25.xywy, r8
					            cmp r8.zw, -r14_abs.z, c22.xyyx, r8
					            cmp r8.zw, -r14_abs.w, c4.xyyx, r8
					            mad r8.xy, r8, c21.y, r8.zwzw
					            mul r8.xy, r0.y, r8
					            mad r3.xy, r8, c1, v0
					            texldl r9, r3.xyww, s2
					            texldl r10, r3.xyww, s3
					            dp2add r0.w, r8, r8, c5.y
					            rsq r0.w, r0.w
					            rcp r0.w, r0.w
					            mad r0.w, r10.x, c4.w, -r0.w
					            add r0.w, r0.w, c21.y
					            mul_sat r0.w, r0.w, -c9.w
					            mul r0.w, r0.x, r0.w
					            add_sat r1.x, -r9.w, c2.z
					            mul r8.x, r10.y, r0.w
					            add r1.x, r1.x, c5.x
					            mad r8.w, r8.x, r1.x, c8.x
					            mad r10.w, r0.w, r10.z, c8.x
					            mul r8.xyz, r8.w, r9
					            mul r10.xyz, r9, r10.w
					            texldl r9, r3, s1
					            mad r5, r8, r9.x, r5
					            mad r4, r10, r9.x, r4
					            add r0.z, r0.z, c5.x
					          endrep
					          mov r6, r4
					          mov r7, r5
					        endif
					      endif
					      max r0.x, r1.y, c22.x
					      mul r0.x, r0.x, r0.x
					      mul r0.x, r0.x, r7.w
					      mul r0.x, r0.x, c23.z
					      mov_sat r0, r0.x
					      add r1.x, r6.w, c23.w
					      rcp r1.x, r1.x
					      mul r1.xyz, r1.x, r6
					      add r1.w, r7.w, c23.w
					      rcp r1.w, r1.w
					      mad r3.xyz, r7, r1.w, -r1
					      mad r2.xyz, r0.w, r3, r1
					      mov oC1, r0
					    endif
					    mov oC0, r2
					
					// approximately 250 instruction slots used (26 texture, 224 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" "SC_DOF_MASK_ON" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _ScionResolutionParameters1;
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_3[6];
						vec4 _CoCParams1;
						vec4 unused_0_5[9];
						float _TemporalUVOffset;
					};
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _ExclusionMask;
					uniform  sampler2D _PresortTexture;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					layout(location = 1) out vec4 SV_Target1;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec4 u_xlat12;
					float u_xlat13;
					float u_xlat14;
					vec2 u_xlat15;
					vec2 u_xlat26;
					bool u_xlatb26;
					float u_xlat27;
					float u_xlat39;
					void main()
					{
					    u_xlat0 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat2 = textureLod(_ExclusionMask, vs_TEXCOORD0.xy, 0.0);
					    u_xlat13 = u_xlat0.x * u_xlat2.x;
					    u_xlatb26 = u_xlat13<1.0;
					    if(u_xlatb26){
					        SV_Target0 = u_xlat1;
					        SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
					        return;
					    }
					    u_xlat3 = textureLod(_PresortTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat26.x = (-u_xlat1.w) + _CoCParams1.z;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat26.x = u_xlat26.x + 1.0;
					    u_xlat4.w = u_xlat3.y * u_xlat26.x + 9.99999975e-05;
					    u_xlat3.w = u_xlat3.z + 9.99999975e-05;
					    u_xlat4.xyz = u_xlat1.xyz * u_xlat4.www;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat3.www;
					    u_xlat26.x = u_xlat13 * 0.285714298;
					    u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(1.37, 2.74000001, 4.11000013, 5.48000002);
					    u_xlat6 = vs_TEXCOORD0.xyxy * _ScionResolutionParameters1.xyxy;
					    u_xlat7 = u_xlat5.xxyy * u_xlat6.zwzw;
					    u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat39 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat7.xy * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, -0.707106829);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat9.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat4 = u_xlat10 * u_xlat8.xxxx + u_xlat4;
					    u_xlat3 = u_xlat9 * u_xlat8.xxxx + u_xlat3;
					    u_xlat39 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat7.zw * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-1.0, 0.0);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat8.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat9.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat8.w = u_xlat39 * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat7 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat4 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					    u_xlat3 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					    u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					    u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat39 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat5.xy * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, 0.707106829);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat8.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat9.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat8.w = u_xlat39 * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat7 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat4 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					    u_xlat3 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					    u_xlat39 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat5.zw * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, -1.0);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat7.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat5.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat7.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat8.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat7.w = u_xlat39 * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat5.xyz * u_xlat7.www;
					    u_xlat5 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat4 = u_xlat8 * u_xlat5.xxxx + u_xlat4;
					    u_xlat3 = u_xlat7 * u_xlat5.xxxx + u_xlat3;
					    u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(6.8499999, 8.22000027, 9.59000015, 10.96);
					    u_xlat7 = u_xlat5.xxyy * u_xlat6.zwzw;
					    u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat39 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat7.xy * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, 1.0);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat9.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat4 = u_xlat10 * u_xlat8.xxxx + u_xlat4;
					    u_xlat3 = u_xlat9 * u_xlat8.xxxx + u_xlat3;
					    u_xlat39 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat7.zw * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, -0.707106829);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat8.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat9.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat8.w = u_xlat39 * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat7 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat4 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					    u_xlat3 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					    u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					    u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat39 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat5.xy * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(1.0, 0.0);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat8.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat9.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat8.w = u_xlat39 * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat7 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat4 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					    u_xlat3 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					    u_xlat39 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat5.zw * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					    u_xlat26.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					    u_xlat26.x = sqrt(u_xlat26.x);
					    u_xlat26.x = u_xlat7.x * 10.0 + (-u_xlat26.x);
					    u_xlat26.x = u_xlat26.x + 0.25;
					    u_xlat26.x = u_xlat26.x * 4.0;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat39 = (-u_xlat5.w) + _CoCParams1.z;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat27 = u_xlat7.y * u_xlat26.x;
					    u_xlat39 = u_xlat39 + 1.0;
					    u_xlat8.w = u_xlat27 * u_xlat39 + 0.00100000005;
					    u_xlat7.w = u_xlat26.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat5.xyz * u_xlat7.www;
					    u_xlat5 = textureLod(_ExclusionMask, u_xlat1.xy, 0.0);
					    u_xlat4 = u_xlat8 * u_xlat5.xxxx + u_xlat4;
					    u_xlat3 = u_xlat7 * u_xlat5.xxxx + u_xlat3;
					    u_xlatb26 = 2.0<u_xlat13;
					    if(u_xlatb26){
					        u_xlat26.x = u_xlat0.x * u_xlat2.x + -2.0;
					        u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					        u_xlat39 = u_xlat13 * 0.571428478;
					        u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(12.3299999, 13.6999998, 15.0699997, 16.4400005);
					        u_xlat7 = u_xlat5.xxyy * u_xlat6.zwzw;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, -0.707106829);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat9.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat9.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat10.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat9.w = u_xlat1.x * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat10 = u_xlat10 * u_xlat8.xxxx + u_xlat4;
					        u_xlat8 = u_xlat9 * u_xlat8.xxxx + u_xlat3;
					        u_xlat1.x = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.923879385, -0.382683486);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat9.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat9.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat11.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat9.w = u_xlat1.x * u_xlat9.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat7.xyz * u_xlat11.www;
					        u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					        u_xlat7 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat10 = u_xlat11 * u_xlat7.xxxx + u_xlat10;
					        u_xlat7 = u_xlat9 * u_xlat7.xxxx + u_xlat8;
					        u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					        u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-1.0, 0.0);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat9.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat9.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat11.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat9.w = u_xlat1.x * u_xlat9.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat10 = u_xlat11 * u_xlat8.xxxx + u_xlat10;
					        u_xlat7 = u_xlat9 * u_xlat8.xxxx + u_xlat7;
					        u_xlat1.x = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.923879385, 0.382683486);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat8.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat5.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat8.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat9.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat8.w = u_xlat1.x * u_xlat8.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat5.xyz * u_xlat9.www;
					        u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					        u_xlat5 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat9 * u_xlat5.xxxx + u_xlat10;
					        u_xlat5 = u_xlat8 * u_xlat5.xxxx + u_xlat7;
					        u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(17.8099995, 19.1800003, 20.5499992, 21.9200001);
					        u_xlat8 = u_xlat6.zwzw * u_xlat7.xxyy;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, 0.707106829);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat11.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat10.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat11.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat12.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat11.w = u_xlat1.x * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					        u_xlat10 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat12 * u_xlat10.xxxx + u_xlat9;
					        u_xlat5 = u_xlat11 * u_xlat10.xxxx + u_xlat5;
					        u_xlat1.x = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.382683486, -0.923879385);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat10.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat10.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat11.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat10.w = u_xlat1.x * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat11 * u_xlat8.xxxx + u_xlat9;
					        u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					        u_xlat7 = u_xlat6.zwzw * u_xlat7.zzww;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.382683396, 0.923879385);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat10.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat10.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat11.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat10.w = u_xlat1.x * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat11 * u_xlat8.xxxx + u_xlat9;
					        u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					        u_xlat1.x = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, -1.0);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat8.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat8.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat10.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat8.w = u_xlat1.x * u_xlat8.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat7.xyz * u_xlat10.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat7 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat10 * u_xlat7.xxxx + u_xlat9;
					        u_xlat5 = u_xlat8 * u_xlat7.xxxx + u_xlat5;
					        u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(23.2900009, 24.6599998, 26.0300007, 27.3999996);
					        u_xlat8 = u_xlat6.zwzw * u_xlat7.xxyy;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, 1.0);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat11.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat10.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat11.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat12.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat11.w = u_xlat1.x * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					        u_xlat10 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat12 * u_xlat10.xxxx + u_xlat9;
					        u_xlat5 = u_xlat11 * u_xlat10.xxxx + u_xlat5;
					        u_xlat1.x = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.382683396, -0.923879385);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat10.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat10.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat11.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat10.w = u_xlat1.x * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat11 * u_xlat8.xxxx + u_xlat9;
					        u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					        u_xlat7 = u_xlat6.zwzw * u_xlat7.zzww;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.382683486, 0.923879385);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat10.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat10.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat11.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat10.w = u_xlat1.x * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat11 * u_xlat8.xxxx + u_xlat9;
					        u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					        u_xlat1.x = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, -0.707106829);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat8.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat8.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat10.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat8.w = u_xlat1.x * u_xlat8.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat7.xyz * u_xlat10.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat7 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat10 * u_xlat7.xxxx + u_xlat9;
					        u_xlat5 = u_xlat8 * u_xlat7.xxxx + u_xlat5;
					        u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(28.7700005, 30.1399994, 31.5100002, 32.8800011);
					        u_xlat8 = u_xlat6.zwzw * u_xlat7.xxyy;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.923879385, -0.382683486);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat11.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat10.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat11.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat12.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat11.w = u_xlat1.x * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					        u_xlat10 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat12 * u_xlat10.xxxx + u_xlat9;
					        u_xlat5 = u_xlat11 * u_xlat10.xxxx + u_xlat5;
					        u_xlat1.x = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(1.0, 0.0);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat10.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat10.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat11.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat10.w = u_xlat1.x * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat11 * u_xlat8.xxxx + u_xlat9;
					        u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					        u_xlat7 = u_xlat6.zwzw * u_xlat7.zzww;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.923879385, 0.382683486);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat10.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat26.x * u_xlat1.x;
					        u_xlat14 = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					        u_xlat27 = u_xlat10.y * u_xlat1.x;
					        u_xlat14 = u_xlat14 + 1.0;
					        u_xlat11.w = u_xlat27 * u_xlat14 + 0.00100000005;
					        u_xlat10.w = u_xlat1.x * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat9 = u_xlat11 * u_xlat8.xxxx + u_xlat9;
					        u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					        u_xlat1.x = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					        u_xlat1.xy = vec2(u_xlat39) * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat26.x = u_xlat26.x * u_xlat39;
					        u_xlat39 = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat1.x = u_xlat8.y * u_xlat26.x;
					        u_xlat39 = u_xlat39 + 1.0;
					        u_xlat10.w = u_xlat1.x * u_xlat39 + 0.00100000005;
					        u_xlat8.w = u_xlat26.x * u_xlat8.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat7.xyz * u_xlat10.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat7 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					        u_xlat4 = u_xlat10 * u_xlat7.xxxx + u_xlat9;
					        u_xlat3 = u_xlat8 * u_xlat7.xxxx + u_xlat5;
					        u_xlatb26 = 4.0<u_xlat13;
					        if(u_xlatb26){
					            u_xlat0.x = u_xlat0.x * u_xlat2.x + -4.0;
					            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					            u_xlat26.x = u_xlat13 * 0.857142925;
					            u_xlat2 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(34.25, 35.6199989, 36.9900017, 38.3600006);
					            u_xlat5 = u_xlat2.xxyy * u_xlat6.zwzw;
					            u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, -0.707106829);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					            u_xlat8 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat8.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat9.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat8.w = u_xlat39 * u_xlat8.z + 0.00100000005;
					            u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					            u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					            u_xlat7 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					            u_xlat9 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					            u_xlat7 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					            u_xlat39 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.866025388, -0.499999911);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					            u_xlat8 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat5.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat8.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat8.w = u_xlat39 * u_xlat8.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat5.xyz * u_xlat10.www;
					            u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					            u_xlat5 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					            u_xlat9 = u_xlat10 * u_xlat5.xxxx + u_xlat9;
					            u_xlat5 = u_xlat8 * u_xlat5.xxxx + u_xlat7;
					            u_xlat2 = u_xlat2.zzww * u_xlat6.zwzw;
					            u_xlat2 = u_xlat2 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat2.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat2.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.965925872, -0.258819014);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					            u_xlat8 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat8.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat8.w = u_xlat39 * u_xlat8.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat7.xyz * u_xlat10.www;
					            u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					            u_xlat7 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					            u_xlat9 = u_xlat10 * u_xlat7.xxxx + u_xlat9;
					            u_xlat5 = u_xlat8 * u_xlat7.xxxx + u_xlat5;
					            u_xlat39 = dot(u_xlat2.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat2.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-1.0, 0.0);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					            u_xlat8 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat8.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat8.w = u_xlat39 * u_xlat8.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat7.xyz * u_xlat10.www;
					            u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					            u_xlat2 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat2.xxxx + u_xlat9;
					            u_xlat2 = u_xlat8 * u_xlat2.xxxx + u_xlat5;
					            u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(39.7299995, 41.0999985, 42.4700012, 43.8400002);
					            u_xlat8 = u_xlat5.xxyy * u_xlat6.zwzw;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.965925872, 0.258819014);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat9 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat11 * u_xlat9.xxxx + u_xlat7;
					            u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.866025388, 0.499999911);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					            u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					            u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.500000119, -0.866025329);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat5 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat5.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat5.xxxx + u_xlat2;
					            u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(45.2099991, 46.5800018, 47.9500008, 49.3199997);
					            u_xlat8 = u_xlat5.xxyy * u_xlat6.zwzw;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.5, 0.866025388);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat9 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat11 * u_xlat9.xxxx + u_xlat7;
					            u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.258819014, -0.965925813);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					            u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					            u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.258819103, 0.965925813);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, -1.0);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat5 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat5.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat5.xxxx + u_xlat2;
					            u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(50.6899986, 52.0600014, 53.4300003, 54.7999992);
					            u_xlat8 = u_xlat5.xxyy * u_xlat6.zwzw;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, 1.0);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat9 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat11 * u_xlat9.xxxx + u_xlat7;
					            u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.258818895, -0.965925813);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					            u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					            u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.258819193, 0.965925813);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.499999911, -0.866025388);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat5 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat5.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat5.xxxx + u_xlat2;
					            u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(56.170002, 57.5400009, 58.9099998, 60.2799988);
					            u_xlat8 = u_xlat5.xxyy * u_xlat6.zwzw;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.500000119, 0.866025388);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat9 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat11 * u_xlat9.xxxx + u_xlat7;
					            u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, -0.707106829);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					            u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					            u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.866025388, -0.5);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.965925813, -0.258819014);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat5 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat5.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat5.xxxx + u_xlat2;
					            u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(61.6500015, 63.0200005, 64.3899994, 65.7600021);
					            u_xlat8 = u_xlat5.xxyy * u_xlat6.zwzw;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(1.0, 0.0);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat9 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat11 * u_xlat9.xxxx + u_xlat7;
					            u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.965925813, 0.258819014);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					            u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					            u_xlat5 = u_xlat5.zzww * u_xlat6;
					            u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.866025388, 0.5);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					            u_xlat8 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat0.x * u_xlat39;
					            u_xlat1.x = (-u_xlat6.w) + _CoCParams1.z;
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat8.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat9.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat8.w = u_xlat39 * u_xlat8.z + 0.00100000005;
					            u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					            u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					            u_xlat6 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					            u_xlat7 = u_xlat9 * u_xlat6.xxxx + u_xlat7;
					            u_xlat2 = u_xlat8 * u_xlat6.xxxx + u_xlat2;
					            u_xlat39 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					            u_xlat26.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					            u_xlat6 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					            u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					            u_xlat26.x = sqrt(u_xlat26.x);
					            u_xlat26.x = u_xlat6.x * 10.0 + (-u_xlat26.x);
					            u_xlat26.x = u_xlat26.x + 0.25;
					            u_xlat26.x = u_xlat26.x * 4.0;
					            u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					            u_xlat0.x = u_xlat0.x * u_xlat26.x;
					            u_xlat26.x = (-u_xlat5.w) + _CoCParams1.z;
					            u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					            u_xlat39 = u_xlat6.y * u_xlat0.x;
					            u_xlat26.x = u_xlat26.x + 1.0;
					            u_xlat8.w = u_xlat39 * u_xlat26.x + 0.00100000005;
					            u_xlat6.w = u_xlat0.x * u_xlat6.z + 0.00100000005;
					            u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					            u_xlat6.xyz = u_xlat5.xyz * u_xlat6.www;
					            u_xlat5 = textureLod(_ExclusionMask, u_xlat1.xy, 0.0);
					            u_xlat4 = u_xlat8 * u_xlat5.xxxx + u_xlat7;
					            u_xlat3 = u_xlat6 * u_xlat5.xxxx + u_xlat2;
					        }
					    }
					    u_xlat0.x = max(u_xlat13, 0.5);
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat4.w;
					    u_xlat0.x = u_xlat0.x * 0.0641141385;
					    u_xlat0 = u_xlat0.xxxx;
					    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.w + 9.99999994e-09;
					    u_xlat1.xyz = u_xlat3.xyz / u_xlat1.xxx;
					    u_xlat2.x = u_xlat4.w + 9.99999994e-09;
					    u_xlat2.xyz = u_xlat4.xyz / u_xlat2.xxx;
					    u_xlat2.xyz = (-u_xlat1.xyz) + u_xlat2.xyz;
					    SV_Target0.xyz = u_xlat0.www * u_xlat2.xyz + u_xlat1.xyz;
					    SV_Target0.w = u_xlat1.w;
					    SV_Target1 = u_xlat0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _AvgCenterDepth;
					//   sampler2D _HalfResSourceDepthTexture;
					//   sampler2D _PresortTexture;
					//   float4 _ScionResolutionParameters1;
					//   float4 _ScionResolutionParameters2;
					//   float _TemporalUVOffset;
					//   sampler2D _TiledNeighbourhoodData;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters1 c0       1
					//   _ScionResolutionParameters2 c1       1
					//   _TemporalUVOffset           c2       1
					//   _TiledNeighbourhoodData     s0       1
					//   _HalfResSourceDepthTexture  s1       1
					//   _PresortTexture             s2       1
					//   _AvgCenterDepth             s3       1
					//
					
					    ps_3_0
					    def c3, 10, 0.00100000005, 0.571428478, 0
					    def c4, 1, 0, 0.5, 9.99999975e-005
					    def c5, 0.285714298, 0, 1.37, 0.707106829
					    def c6, 0.000231481477, 0.25, 0, 3571
					    def c7, -5, -6, -7, -8
					    def c8, 2, -1, -3, -4
					    def c9, -13, -14, -15, -16
					    def c10, -17, -18, -19, -20
					    def c11, -21, -22, -23, -24
					    def c12, 0.857142925, 25, -0.866025388, -0.499999911
					    def c13, -25, -26, -27, -28
					    def c14, -29, -30, -31, -32
					    def c15, -33, -34, -35, -36
					    def c16, -37, -38, -39, -40
					    def c17, -41, -42, -43, -44
					    def c18, -45, -46, -47, -48
					    def c19, 0.866025388, -0.5, 0.0641141385, 9.99999994e-009
					    def c20, 9, 10, 11, 12
					    def c21, -0.923879385, -0.382683486, 0.382683486, -0.382683396
					    def c22, 0.707106829, -0.707106829, 0, -1
					    def c23, -0.965925872, -0.258819014, 0.258819014, -0.965925813
					    def c24, -0.866025388, 0.499999911, 0.500000119, -0.866025329
					    def c25, 0.5, 0.866025388, 0.258819103, 0.965925813
					    def c26, -0.258818895, -0.965925813, -0.258819193, 0.965925813
					    defi i0, 8, 0, 0, 0
					    defi i1, 16, 0, 0, 0
					    defi i2, 24, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    dcl_2d s3
					    mul r0, c4.xxyy, v0.xyxx
					    texldl r1, r0, s0
					    texldl r2, r0, s1
					    if_lt r1.x, c4.x
					      mov oC1, c4.y
					    else
					      texldl r3, c4.zzyy, s3
					      texldl r0, r0, s2
					      add_sat r0.x, -r2.w, r3.x
					      add r0.x, r0.x, c4.x
					      mad r0.x, r0.y, r0.x, c4.w
					      add r0.y, r0.z, c4.w
					      mul r1.yzw, r0.x, r2.xxyz
					      mul r3.yzw, r0.y, r2.xxyz
					      mul r0.z, r1.x, c5.x
					      mul r4.xy, c0, v0
					      mov r5.zw, c4.y
					      mov r6.xyz, r3.yzww
					      mov r6.w, r0.y
					      mov r7.xyz, r1.yzww
					      mov r7.w, r0.x
					      mov r0.w, c4.x
					      rep i0
					        mov r4.z, c5.z
					        mad r4.z, r0.w, r4.z, c2.x
					        mul r4.zw, r4.z, r4.xyxy
					        mad r4.zw, r4, c6.x, c6.xyyz
					        dp2add r8.x, r4.zwzw, c6.w, c6.z
					        mul r4.zw, r4, r8.x
					        frc r4.zw, r4
					        mad r4.zw, r4, c8.x, c8.y
					        add r8, r0.w, -c8_abs.yxzw
					        add r9, r0.w, c7
					        cmp r10.xy, -r8_abs.x, c22, c22.z
					        cmp r8.xy, -r8_abs.y, c22.wzzw, r10
					        cmp r8.xy, -r8_abs.z, c5.w, r8
					        cmp r8.xy, -r8_abs.w, c22.zwzw, r8
					        cmp r8.xy, -r9_abs.x, c4.yxzw, r8
					        cmp r8.xy, -r9_abs.y, -c5.w, r8
					        cmp r8.xy, -r9_abs.z, c4, r8
					        cmp r8.xy, -r9_abs.w, c22.yxzw, r8
					        mad r4.zw, r4, c6.y, r8.xyxy
					        mul r4.zw, r0.z, r4
					        mad r5.xy, r4.zwzw, c1, v0
					        texldl r8, r5.xyww, s1
					        texldl r9, r5, s2
					        dp2add r4.z, r4.zwzw, r4.zwzw, c4.y
					        rsq r4.z, r4.z
					        rcp r4.z, r4.z
					        mad r4.z, r9.x, c3.x, -r4.z
					        add r4.z, r4.z, c6.y
					        mul_sat r4.z, r4.z, -c8.w
					        add_sat r4.w, r3.x, -r8.w
					        mul r5.x, r9.y, r4.z
					        add r4.w, r4.w, c4.x
					        mad r10.w, r5.x, r4.w, c3.y
					        mad r9.w, r4.z, r9.z, c3.y
					        mul r10.xyz, r8, r10.w
					        mul r9.xyz, r8, r9.w
					        add r7, r7, r10
					        add r6, r6, r9
					        add r0.w, r0.w, c4.x
					      endrep
					      if_lt c8.x, r1.x
					        add_sat r0.x, r1.x, -c8.x
					        mul r0.y, r1.x, c3.z
					        mov r5.zw, c4.y
					        mov r8, r6
					        mov r9, r7
					        mov r0.z, c20.x
					        rep i1
					          mov r1.z, c5.z
					          mad r0.w, r0.z, r1.z, c2.x
					          mul r1.yz, r0.w, r4.xxyw
					          mad r1.yz, r1, c6.x, c6
					          dp2add r0.w, r1.yzzw, c6.w, c6.z
					          mul r1.yz, r1, r0.w
					          frc r1.yz, r1
					          mad r1.yz, r1, c8.x, c8.y
					          add r10, r0.z, -c20
					          add r11, r0.z, c9
					          add r12, r0.z, c10
					          add r13, r0.z, c11
					          cmp r3.yz, -r10_abs.x, c22.xxyw, c22.z
					          cmp r3.yz, -r10_abs.y, c21.xxyw, r3
					          cmp r3.yz, -r10_abs.z, c22.xwzw, r3
					          cmp r3.yz, -r10_abs.w, c21.xxzw, r3
					          cmp r3.yz, -r11_abs.x, c5.w, r3
					          cmp r3.yz, -r11_abs.y, c21.xzxw, r3
					          cmp r3.yz, -r11_abs.z, -c21.xwxw, r3
					          cmp r3.yz, -r11_abs.w, c22.xzww, r3
					          cmp r3.yz, -r12_abs.x, c4.xyxw, r3
					          cmp r3.yz, -r12_abs.y, c21.xwxw, r3
					          cmp r3.yz, -r12_abs.z, -c21.xzxw, r3
					          cmp r3.yz, -r12_abs.w, -c5.w, r3
					          cmp r3.yz, -r13_abs.x, -c21.xxzw, r3
					          cmp r3.yz, -r13_abs.y, c4.xxyw, r3
					          cmp r3.yz, -r13_abs.z, -c21.xxyw, r3
					          cmp r3.yz, -r13_abs.w, c22.xyxw, r3
					          mad r1.yz, r1, c6.y, r3
					          mul r1.yz, r0.y, r1
					          mad r5.xy, r1.yzzw, c1, v0
					          texldl r10, r5.xyww, s1
					          texldl r11, r5, s2
					          dp2add r0.w, r1.yzzw, r1.yzzw, c4.y
					          rsq r0.w, r0.w
					          rcp r0.w, r0.w
					          mad r0.w, r11.x, c3.x, -r0.w
					          add r0.w, r0.w, c6.y
					          mul_sat r0.w, r0.w, -c8.w
					          mul r0.w, r0.x, r0.w
					          add_sat r1.y, r3.x, -r10.w
					          mul r1.z, r11.y, r0.w
					          add r1.y, r1.y, c4.x
					          mad r12.w, r1.z, r1.y, c3.y
					          mad r11.w, r0.w, r11.z, c3.y
					          mul r12.xyz, r10, r12.w
					          mul r11.xyz, r10, r11.w
					          add r9, r9, r12
					          add r8, r8, r11
					          add r0.z, r0.z, c4.x
					        endrep
					        mov r6, r8
					        mov r7, r9
					        if_lt -c8.w, r1.x
					          add_sat r0.x, r1.x, c8.w
					          mul r0.y, r1.x, c12.x
					          mov r5.zw, c4.y
					          mov r8, r6
					          mov r9, r7
					          mov r0.z, c12.y
					          rep i2
					            mov r1.z, c5.z
					            mad r0.w, r0.z, r1.z, c2.x
					            mul r1.yz, r0.w, r4.xxyw
					            mad r1.yz, r1, c6.x, c6
					            dp2add r0.w, r1.yzzw, c6.w, c6.z
					            mul r1.yz, r1, r0.w
					            frc r1.yz, r1
					            mad r1.yz, r1, c8.x, c8.y
					            add r10, r0.z, c13
					            add r11, r0.z, c14
					            add r12, r0.z, c15
					            add r13, r0.z, c16
					            add r14, r0.z, c17
					            add r15, r0.z, c18
					            cmp r3.yz, -r10_abs.x, c22.xxyw, c22.z
					            cmp r3.yz, -r10_abs.y, c12.xzww, r3
					            cmp r3.yz, -r10_abs.z, c23.xxyw, r3
					            cmp r3.yz, -r10_abs.w, c22.xwzw, r3
					            cmp r3.yz, -r11_abs.x, c23.xxzw, r3
					            cmp r3.yz, -r11_abs.y, c24.xxyw, r3
					            cmp r3.yz, -r11_abs.z, c22.xyxw, r3
					            cmp r3.yz, -r11_abs.w, c24.xzww, r3
					            cmp r3.yz, -r12_abs.x, c25.xxyw, r3
					            cmp r3.yz, -r12_abs.y, c23.xzww, r3
					            cmp r3.yz, -r12_abs.z, c25.xzww, r3
					            cmp r3.yz, -r12_abs.w, c22.xzww, r3
					            cmp r3.yz, -r13_abs.x, c4.xyxw, r3
					            cmp r3.yz, -r13_abs.y, c26.xxyw, r3
					            cmp r3.yz, -r13_abs.z, c26.xzww, r3
					            cmp r3.yz, -r13_abs.w, c12.xwzw, r3
					            cmp r3.yz, -r14_abs.x, -c24.xzxw, r3
					            cmp r3.yz, -r14_abs.y, -c5.w, r3
					            cmp r3.yz, -r14_abs.z, c19.xxyw, r3
					            cmp r3.yz, -r14_abs.w, -c23.xwzw, r3
					            cmp r3.yz, -r15_abs.x, c4.xxyw, r3
					            cmp r3.yz, -r15_abs.y, -c23.xwyw, r3
					            cmp r3.yz, -r15_abs.z, c25.xyxw, r3
					            cmp r3.yz, -r15_abs.w, c22.xyxw, r3
					            mad r1.yz, r1, c6.y, r3
					            mul r1.yz, r0.y, r1
					            mad r5.xy, r1.yzzw, c1, v0
					            texldl r10, r5.xyww, s1
					            texldl r11, r5, s2
					            dp2add r0.w, r1.yzzw, r1.yzzw, c4.y
					            rsq r0.w, r0.w
					            rcp r0.w, r0.w
					            mad r0.w, r11.x, c3.x, -r0.w
					            add r0.w, r0.w, c6.y
					            mul_sat r0.w, r0.w, -c8.w
					            mul r0.w, r0.x, r0.w
					            add_sat r1.y, r3.x, -r10.w
					            mul r1.z, r11.y, r0.w
					            add r1.y, r1.y, c4.x
					            mad r12.w, r1.z, r1.y, c3.y
					            mad r11.w, r0.w, r11.z, c3.y
					            mul r12.xyz, r10, r12.w
					            mul r11.xyz, r10, r11.w
					            add r9, r9, r12
					            add r8, r8, r11
					            add r0.z, r0.z, c4.x
					          endrep
					          mov r6, r8
					          mov r7, r9
					        endif
					      endif
					      max r0.x, r1.x, c4.z
					      mul r0.x, r0.x, r0.x
					      mul r0.x, r0.x, r7.w
					      mul r0.x, r0.x, c19.z
					      mov_sat r0, r0.x
					      add r1.x, r6.w, c19.w
					      rcp r1.x, r1.x
					      mul r1.xyz, r1.x, r6
					      add r1.w, r7.w, c19.w
					      rcp r1.w, r1.w
					      mad r3.xyz, r7, r1.w, -r1
					      mad r2.xyz, r0.w, r3, r1
					      mov oC1, r0
					    endif
					    mov oC0, r2
					
					// approximately 243 instruction slots used (20 texture, 223 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _ScionResolutionParameters1;
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_3[16];
						float _TemporalUVOffset;
					};
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _AvgCenterDepth;
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _PresortTexture;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					layout(location = 1) out vec4 SV_Target1;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec4 u_xlat12;
					vec2 u_xlat13;
					bool u_xlatb13;
					float u_xlat14;
					vec2 u_xlat15;
					vec2 u_xlat26;
					float u_xlat39;
					void main()
					{
					    u_xlat0 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlatb13 = u_xlat0.x<1.0;
					    if(u_xlatb13){
					        SV_Target0 = u_xlat1;
					        SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
					        return;
					    }
					    u_xlat2 = textureLod(_AvgCenterDepth, vec2(0.5, 0.5), 0.0);
					    u_xlat3 = textureLod(_PresortTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat13.x = (-u_xlat1.w) + u_xlat2.x;
					    u_xlat13.x = clamp(u_xlat13.x, 0.0, 1.0);
					    u_xlat13.x = u_xlat13.x + 1.0;
					    u_xlat4.w = u_xlat3.y * u_xlat13.x + 9.99999975e-05;
					    u_xlat3.w = u_xlat3.z + 9.99999975e-05;
					    u_xlat4.xyz = u_xlat1.xyz * u_xlat4.www;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat3.www;
					    u_xlat13.x = u_xlat0.x * 0.285714298;
					    u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(1.37, 2.74000001, 4.11000013, 5.48000002);
					    u_xlat6 = vs_TEXCOORD0.xyxy * _ScionResolutionParameters1.xyxy;
					    u_xlat7 = u_xlat5.xxyy * u_xlat6.zwzw;
					    u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat26.x = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					    u_xlat26.xy = u_xlat7.xy * u_xlat26.xx;
					    u_xlat26.xy = fract(u_xlat26.xy);
					    u_xlat26.xy = u_xlat26.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat26.xy = u_xlat26.xy * vec2(0.25, 0.25) + vec2(0.707106829, -0.707106829);
					    u_xlat26.xy = u_xlat13.xx * u_xlat26.xy;
					    u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					    u_xlat26.x = sqrt(u_xlat26.x);
					    u_xlat26.x = u_xlat9.x * 10.0 + (-u_xlat26.x);
					    u_xlat26.x = u_xlat26.x + 0.25;
					    u_xlat26.x = u_xlat26.x * 4.0;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat39 = u_xlat2.x + (-u_xlat8.w);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat9.y * u_xlat26.x;
					    u_xlat39 = u_xlat39 + 1.0;
					    u_xlat10.w = u_xlat1.x * u_xlat39 + 0.00100000005;
					    u_xlat9.w = u_xlat26.x * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat4 = u_xlat4 + u_xlat10;
					    u_xlat3 = u_xlat3 + u_xlat9;
					    u_xlat26.x = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					    u_xlat26.xy = u_xlat7.zw * u_xlat26.xx;
					    u_xlat26.xy = fract(u_xlat26.xy);
					    u_xlat26.xy = u_xlat26.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat26.xy = u_xlat26.xy * vec2(0.25, 0.25) + vec2(-1.0, 0.0);
					    u_xlat26.xy = u_xlat13.xx * u_xlat26.xy;
					    u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					    u_xlat26.x = sqrt(u_xlat26.x);
					    u_xlat26.x = u_xlat8.x * 10.0 + (-u_xlat26.x);
					    u_xlat26.x = u_xlat26.x + 0.25;
					    u_xlat26.x = u_xlat26.x * 4.0;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat39 = u_xlat2.x + (-u_xlat7.w);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat8.y * u_xlat26.x;
					    u_xlat39 = u_xlat39 + 1.0;
					    u_xlat9.w = u_xlat1.x * u_xlat39 + 0.00100000005;
					    u_xlat8.w = u_xlat26.x * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat4 = u_xlat4 + u_xlat9;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					    u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat26.x = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					    u_xlat26.xy = u_xlat5.xy * u_xlat26.xx;
					    u_xlat26.xy = fract(u_xlat26.xy);
					    u_xlat26.xy = u_xlat26.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat26.xy = u_xlat26.xy * vec2(0.25, 0.25) + vec2(0.707106829, 0.707106829);
					    u_xlat26.xy = u_xlat13.xx * u_xlat26.xy;
					    u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					    u_xlat26.x = sqrt(u_xlat26.x);
					    u_xlat26.x = u_xlat8.x * 10.0 + (-u_xlat26.x);
					    u_xlat26.x = u_xlat26.x + 0.25;
					    u_xlat26.x = u_xlat26.x * 4.0;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat39 = u_xlat2.x + (-u_xlat7.w);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat8.y * u_xlat26.x;
					    u_xlat39 = u_xlat39 + 1.0;
					    u_xlat9.w = u_xlat1.x * u_xlat39 + 0.00100000005;
					    u_xlat8.w = u_xlat26.x * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat4 = u_xlat4 + u_xlat9;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat26.x = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					    u_xlat26.xy = u_xlat5.zw * u_xlat26.xx;
					    u_xlat26.xy = fract(u_xlat26.xy);
					    u_xlat26.xy = u_xlat26.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat26.xy = u_xlat26.xy * vec2(0.25, 0.25) + vec2(0.0, -1.0);
					    u_xlat26.xy = u_xlat13.xx * u_xlat26.xy;
					    u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					    u_xlat26.x = sqrt(u_xlat26.x);
					    u_xlat26.x = u_xlat7.x * 10.0 + (-u_xlat26.x);
					    u_xlat26.x = u_xlat26.x + 0.25;
					    u_xlat26.x = u_xlat26.x * 4.0;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat39 = u_xlat2.x + (-u_xlat5.w);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat7.y * u_xlat26.x;
					    u_xlat39 = u_xlat39 + 1.0;
					    u_xlat8.w = u_xlat1.x * u_xlat39 + 0.00100000005;
					    u_xlat7.w = u_xlat26.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat5.xyz * u_xlat7.www;
					    u_xlat4 = u_xlat4 + u_xlat8;
					    u_xlat3 = u_xlat3 + u_xlat7;
					    u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(6.8499999, 8.22000027, 9.59000015, 10.96);
					    u_xlat7 = u_xlat5.xxyy * u_xlat6.zwzw;
					    u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat26.x = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					    u_xlat26.xy = u_xlat7.xy * u_xlat26.xx;
					    u_xlat26.xy = fract(u_xlat26.xy);
					    u_xlat26.xy = u_xlat26.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat26.xy = u_xlat26.xy * vec2(0.25, 0.25) + vec2(0.0, 1.0);
					    u_xlat26.xy = u_xlat13.xx * u_xlat26.xy;
					    u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					    u_xlat26.x = sqrt(u_xlat26.x);
					    u_xlat26.x = u_xlat9.x * 10.0 + (-u_xlat26.x);
					    u_xlat26.x = u_xlat26.x + 0.25;
					    u_xlat26.x = u_xlat26.x * 4.0;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat39 = u_xlat2.x + (-u_xlat8.w);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat9.y * u_xlat26.x;
					    u_xlat39 = u_xlat39 + 1.0;
					    u_xlat10.w = u_xlat1.x * u_xlat39 + 0.00100000005;
					    u_xlat9.w = u_xlat26.x * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat4 = u_xlat4 + u_xlat10;
					    u_xlat3 = u_xlat3 + u_xlat9;
					    u_xlat26.x = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					    u_xlat26.xy = u_xlat7.zw * u_xlat26.xx;
					    u_xlat26.xy = fract(u_xlat26.xy);
					    u_xlat26.xy = u_xlat26.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat26.xy = u_xlat26.xy * vec2(0.25, 0.25) + vec2(-0.707106829, -0.707106829);
					    u_xlat26.xy = u_xlat13.xx * u_xlat26.xy;
					    u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					    u_xlat26.x = sqrt(u_xlat26.x);
					    u_xlat26.x = u_xlat8.x * 10.0 + (-u_xlat26.x);
					    u_xlat26.x = u_xlat26.x + 0.25;
					    u_xlat26.x = u_xlat26.x * 4.0;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat39 = u_xlat2.x + (-u_xlat7.w);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat8.y * u_xlat26.x;
					    u_xlat39 = u_xlat39 + 1.0;
					    u_xlat9.w = u_xlat1.x * u_xlat39 + 0.00100000005;
					    u_xlat8.w = u_xlat26.x * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat4 = u_xlat4 + u_xlat9;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					    u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat26.x = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					    u_xlat26.xy = u_xlat5.xy * u_xlat26.xx;
					    u_xlat26.xy = fract(u_xlat26.xy);
					    u_xlat26.xy = u_xlat26.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat26.xy = u_xlat26.xy * vec2(0.25, 0.25) + vec2(1.0, 0.0);
					    u_xlat26.xy = u_xlat13.xx * u_xlat26.xy;
					    u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					    u_xlat26.x = sqrt(u_xlat26.x);
					    u_xlat26.x = u_xlat8.x * 10.0 + (-u_xlat26.x);
					    u_xlat26.x = u_xlat26.x + 0.25;
					    u_xlat26.x = u_xlat26.x * 4.0;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat39 = u_xlat2.x + (-u_xlat7.w);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat8.y * u_xlat26.x;
					    u_xlat39 = u_xlat39 + 1.0;
					    u_xlat9.w = u_xlat1.x * u_xlat39 + 0.00100000005;
					    u_xlat8.w = u_xlat26.x * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat4 = u_xlat4 + u_xlat9;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat26.x = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					    u_xlat26.xy = u_xlat5.zw * u_xlat26.xx;
					    u_xlat26.xy = fract(u_xlat26.xy);
					    u_xlat26.xy = u_xlat26.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat26.xy = u_xlat26.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					    u_xlat13.xy = u_xlat13.xx * u_xlat26.xy;
					    u_xlat1.xy = u_xlat13.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat13.x = dot(u_xlat13.xy, u_xlat13.xy);
					    u_xlat13.x = sqrt(u_xlat13.x);
					    u_xlat13.x = u_xlat7.x * 10.0 + (-u_xlat13.x);
					    u_xlat13.x = u_xlat13.x + 0.25;
					    u_xlat13.x = u_xlat13.x * 4.0;
					    u_xlat13.x = clamp(u_xlat13.x, 0.0, 1.0);
					    u_xlat26.x = u_xlat2.x + (-u_xlat5.w);
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat39 = u_xlat7.y * u_xlat13.x;
					    u_xlat26.x = u_xlat26.x + 1.0;
					    u_xlat8.w = u_xlat39 * u_xlat26.x + 0.00100000005;
					    u_xlat7.w = u_xlat13.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat5.xyz * u_xlat7.www;
					    u_xlat4 = u_xlat4 + u_xlat8;
					    u_xlat3 = u_xlat3 + u_xlat7;
					    u_xlatb13 = 2.0<u_xlat0.x;
					    if(u_xlatb13){
					        u_xlat13.x = u_xlat0.x + -2.0;
					        u_xlat13.x = clamp(u_xlat13.x, 0.0, 1.0);
					        u_xlat26.x = u_xlat0.x * 0.571428478;
					        u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(12.3299999, 13.6999998, 15.0699997, 16.4400005);
					        u_xlat7 = u_xlat5.xxyy * u_xlat6.zwzw;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, -0.707106829);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat8.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat9.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = u_xlat4 + u_xlat10;
					        u_xlat9 = u_xlat3 + u_xlat9;
					        u_xlat39 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.923879385, -0.382683486);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat7.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat7.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat7.xyz * u_xlat10.www;
					        u_xlat7 = u_xlat8 + u_xlat11;
					        u_xlat8 = u_xlat9 + u_xlat10;
					        u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					        u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-1.0, 0.0);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat7 = u_xlat7 + u_xlat11;
					        u_xlat8 = u_xlat8 + u_xlat10;
					        u_xlat39 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.923879385, 0.382683486);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat5.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat9.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat5.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat5.xyz * u_xlat9.www;
					        u_xlat5 = u_xlat7 + u_xlat10;
					        u_xlat7 = u_xlat8 + u_xlat9;
					        u_xlat8 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(17.8099995, 19.1800003, 20.5499992, 21.9200001);
					        u_xlat9 = u_xlat6.zwzw * u_xlat8.xxyy;
					        u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, 0.707106829);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat11.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat10.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat11.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat12.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat11.w = u_xlat39 * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					        u_xlat5 = u_xlat5 + u_xlat12;
					        u_xlat7 = u_xlat7 + u_xlat11;
					        u_xlat39 = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.382683486, -0.923879385);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat5 = u_xlat5 + u_xlat11;
					        u_xlat7 = u_xlat7 + u_xlat10;
					        u_xlat8 = u_xlat6.zwzw * u_xlat8.zzww;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.382683396, 0.923879385);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat5 = u_xlat5 + u_xlat11;
					        u_xlat7 = u_xlat7 + u_xlat10;
					        u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, -1.0);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat8.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat9.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat5 = u_xlat5 + u_xlat10;
					        u_xlat7 = u_xlat7 + u_xlat9;
					        u_xlat8 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(23.2900009, 24.6599998, 26.0300007, 27.3999996);
					        u_xlat9 = u_xlat6.zwzw * u_xlat8.xxyy;
					        u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, 1.0);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat11.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat10.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat11.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat12.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat11.w = u_xlat39 * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					        u_xlat5 = u_xlat5 + u_xlat12;
					        u_xlat7 = u_xlat7 + u_xlat11;
					        u_xlat39 = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.382683396, -0.923879385);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat5 = u_xlat5 + u_xlat11;
					        u_xlat7 = u_xlat7 + u_xlat10;
					        u_xlat8 = u_xlat6.zwzw * u_xlat8.zzww;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.382683486, 0.923879385);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat5 = u_xlat5 + u_xlat11;
					        u_xlat7 = u_xlat7 + u_xlat10;
					        u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, -0.707106829);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat8.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat9.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat5 = u_xlat5 + u_xlat10;
					        u_xlat7 = u_xlat7 + u_xlat9;
					        u_xlat8 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(28.7700005, 30.1399994, 31.5100002, 32.8800011);
					        u_xlat9 = u_xlat6.zwzw * u_xlat8.xxyy;
					        u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.923879385, -0.382683486);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat11.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat10.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat11.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat12.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat11.w = u_xlat39 * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					        u_xlat5 = u_xlat5 + u_xlat12;
					        u_xlat7 = u_xlat7 + u_xlat11;
					        u_xlat39 = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(1.0, 0.0);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat5 = u_xlat5 + u_xlat11;
					        u_xlat7 = u_xlat7 + u_xlat10;
					        u_xlat8 = u_xlat6.zwzw * u_xlat8.zzww;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.923879385, 0.382683486);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat5 = u_xlat5 + u_xlat11;
					        u_xlat7 = u_xlat7 + u_xlat10;
					        u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					        u_xlat26.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					        u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					        u_xlat26.x = sqrt(u_xlat26.x);
					        u_xlat26.x = u_xlat9.x * 10.0 + (-u_xlat26.x);
					        u_xlat26.x = u_xlat26.x + 0.25;
					        u_xlat26.x = u_xlat26.x * 4.0;
					        u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					        u_xlat13.x = u_xlat13.x * u_xlat26.x;
					        u_xlat26.x = u_xlat2.x + (-u_xlat8.w);
					        u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					        u_xlat39 = u_xlat9.y * u_xlat13.x;
					        u_xlat26.x = u_xlat26.x + 1.0;
					        u_xlat10.w = u_xlat39 * u_xlat26.x + 0.00100000005;
					        u_xlat9.w = u_xlat13.x * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat4 = u_xlat5 + u_xlat10;
					        u_xlat3 = u_xlat7 + u_xlat9;
					        u_xlatb13 = 4.0<u_xlat0.x;
					        if(u_xlatb13){
					            u_xlat13.x = u_xlat0.x + -4.0;
					            u_xlat13.x = clamp(u_xlat13.x, 0.0, 1.0);
					            u_xlat26.x = u_xlat0.x * 0.857142925;
					            u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(34.25, 35.6199989, 36.9900017, 38.3600006);
					            u_xlat7 = u_xlat5.xxyy * u_xlat6.zwzw;
					            u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat7.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, -0.707106829);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat8.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = u_xlat4 + u_xlat10;
					            u_xlat9 = u_xlat3 + u_xlat9;
					            u_xlat39 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat7.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.866025388, -0.499999911);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat7.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat7.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat7.xyz * u_xlat10.www;
					            u_xlat7 = u_xlat8 + u_xlat11;
					            u_xlat8 = u_xlat9 + u_xlat10;
					            u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					            u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.965925872, -0.258819014);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat7 = u_xlat7 + u_xlat11;
					            u_xlat8 = u_xlat8 + u_xlat10;
					            u_xlat39 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat5.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-1.0, 0.0);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat5.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat5.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat5.xyz * u_xlat9.www;
					            u_xlat5 = u_xlat7 + u_xlat10;
					            u_xlat7 = u_xlat8 + u_xlat9;
					            u_xlat8 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(39.7299995, 41.0999985, 42.4700012, 43.8400002);
					            u_xlat9 = u_xlat6.zwzw * u_xlat8.xxyy;
					            u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.965925872, 0.258819014);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat11 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat11.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat10.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat11.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat12.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat11.w = u_xlat39 * u_xlat11.z + 0.00100000005;
					            u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					            u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					            u_xlat5 = u_xlat5 + u_xlat12;
					            u_xlat7 = u_xlat7 + u_xlat11;
					            u_xlat39 = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.866025388, 0.499999911);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat5 = u_xlat5 + u_xlat11;
					            u_xlat7 = u_xlat7 + u_xlat10;
					            u_xlat8 = u_xlat6.zwzw * u_xlat8.zzww;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat5 = u_xlat5 + u_xlat11;
					            u_xlat7 = u_xlat7 + u_xlat10;
					            u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.500000119, -0.866025329);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat8.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat5 = u_xlat5 + u_xlat10;
					            u_xlat7 = u_xlat7 + u_xlat9;
					            u_xlat8 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(45.2099991, 46.5800018, 47.9500008, 49.3199997);
					            u_xlat9 = u_xlat6.zwzw * u_xlat8.xxyy;
					            u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.5, 0.866025388);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat11 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat11.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat10.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat11.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat12.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat11.w = u_xlat39 * u_xlat11.z + 0.00100000005;
					            u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					            u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					            u_xlat5 = u_xlat5 + u_xlat12;
					            u_xlat7 = u_xlat7 + u_xlat11;
					            u_xlat39 = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.258819014, -0.965925813);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat5 = u_xlat5 + u_xlat11;
					            u_xlat7 = u_xlat7 + u_xlat10;
					            u_xlat8 = u_xlat6.zwzw * u_xlat8.zzww;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.258819103, 0.965925813);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat5 = u_xlat5 + u_xlat11;
					            u_xlat7 = u_xlat7 + u_xlat10;
					            u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, -1.0);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat8.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat5 = u_xlat5 + u_xlat10;
					            u_xlat7 = u_xlat7 + u_xlat9;
					            u_xlat8 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(50.6899986, 52.0600014, 53.4300003, 54.7999992);
					            u_xlat9 = u_xlat6.zwzw * u_xlat8.xxyy;
					            u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, 1.0);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat11 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat11.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat10.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat11.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat12.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat11.w = u_xlat39 * u_xlat11.z + 0.00100000005;
					            u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					            u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					            u_xlat5 = u_xlat5 + u_xlat12;
					            u_xlat7 = u_xlat7 + u_xlat11;
					            u_xlat39 = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.258818895, -0.965925813);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat5 = u_xlat5 + u_xlat11;
					            u_xlat7 = u_xlat7 + u_xlat10;
					            u_xlat8 = u_xlat6.zwzw * u_xlat8.zzww;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.258819193, 0.965925813);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat5 = u_xlat5 + u_xlat11;
					            u_xlat7 = u_xlat7 + u_xlat10;
					            u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.499999911, -0.866025388);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat8.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat5 = u_xlat5 + u_xlat10;
					            u_xlat7 = u_xlat7 + u_xlat9;
					            u_xlat8 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(56.170002, 57.5400009, 58.9099998, 60.2799988);
					            u_xlat9 = u_xlat6.zwzw * u_xlat8.xxyy;
					            u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.500000119, 0.866025388);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat11 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat11.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat10.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat11.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat12.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat11.w = u_xlat39 * u_xlat11.z + 0.00100000005;
					            u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					            u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					            u_xlat5 = u_xlat5 + u_xlat12;
					            u_xlat7 = u_xlat7 + u_xlat11;
					            u_xlat39 = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, -0.707106829);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat5 = u_xlat5 + u_xlat11;
					            u_xlat7 = u_xlat7 + u_xlat10;
					            u_xlat8 = u_xlat6.zwzw * u_xlat8.zzww;
					            u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.866025388, -0.5);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat5 = u_xlat5 + u_xlat11;
					            u_xlat7 = u_xlat7 + u_xlat10;
					            u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.965925813, -0.258819014);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat8.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat5 = u_xlat5 + u_xlat10;
					            u_xlat7 = u_xlat7 + u_xlat9;
					            u_xlat8 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(61.6500015, 63.0200005, 64.3899994, 65.7600021);
					            u_xlat9 = u_xlat6.zwzw * u_xlat8.xxyy;
					            u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(1.0, 0.0);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat11 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat11.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat10.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat11.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat12.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat11.w = u_xlat39 * u_xlat11.z + 0.00100000005;
					            u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					            u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					            u_xlat5 = u_xlat5 + u_xlat12;
					            u_xlat7 = u_xlat7 + u_xlat11;
					            u_xlat39 = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.965925813, 0.258819014);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat10.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat5 = u_xlat5 + u_xlat11;
					            u_xlat7 = u_xlat7 + u_xlat10;
					            u_xlat6 = u_xlat6 * u_xlat8.zzww;
					            u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat39 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat6.xy * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.866025388, 0.5);
					            u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					            u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat39 = sqrt(u_xlat39);
					            u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					            u_xlat39 = u_xlat39 + 0.25;
					            u_xlat39 = u_xlat39 * 4.0;
					            u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					            u_xlat39 = u_xlat13.x * u_xlat39;
					            u_xlat1.x = u_xlat2.x + (-u_xlat8.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat14 = u_xlat9.y * u_xlat39;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat5 = u_xlat5 + u_xlat10;
					            u_xlat7 = u_xlat7 + u_xlat9;
					            u_xlat39 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat6.zw * vec2(u_xlat39);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					            u_xlat26.xy = u_xlat26.xx * u_xlat1.xy;
					            u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					            u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					            u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					            u_xlat26.x = sqrt(u_xlat26.x);
					            u_xlat26.x = u_xlat8.x * 10.0 + (-u_xlat26.x);
					            u_xlat26.x = u_xlat26.x + 0.25;
					            u_xlat26.x = u_xlat26.x * 4.0;
					            u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					            u_xlat13.x = u_xlat13.x * u_xlat26.x;
					            u_xlat26.x = u_xlat2.x + (-u_xlat6.w);
					            u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					            u_xlat39 = u_xlat8.y * u_xlat13.x;
					            u_xlat26.x = u_xlat26.x + 1.0;
					            u_xlat2.w = u_xlat39 * u_xlat26.x + 0.00100000005;
					            u_xlat8.w = u_xlat13.x * u_xlat8.z + 0.00100000005;
					            u_xlat2.xyz = u_xlat2.www * u_xlat6.xyz;
					            u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					            u_xlat4 = u_xlat2 + u_xlat5;
					            u_xlat3 = u_xlat7 + u_xlat8;
					        }
					    }
					    u_xlat0.x = max(u_xlat0.x, 0.5);
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat4.w;
					    u_xlat0.x = u_xlat0.x * 0.0641141385;
					    u_xlat0 = u_xlat0.xxxx;
					    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.w + 9.99999994e-09;
					    u_xlat1.xyz = u_xlat3.xyz / u_xlat1.xxx;
					    u_xlat2.x = u_xlat4.w + 9.99999994e-09;
					    u_xlat2.xyz = u_xlat4.xyz / u_xlat2.xxx;
					    u_xlat2.xyz = (-u_xlat1.xyz) + u_xlat2.xyz;
					    SV_Target0.xyz = u_xlat0.www * u_xlat2.xyz + u_xlat1.xyz;
					    SV_Target0.w = u_xlat1.w;
					    SV_Target1 = u_xlat0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" "SC_DOF_MASK_ON" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _AvgCenterDepth;
					//   sampler2D _ExclusionMask;
					//   sampler2D _HalfResSourceDepthTexture;
					//   sampler2D _PresortTexture;
					//   float4 _ScionResolutionParameters1;
					//   float4 _ScionResolutionParameters2;
					//   float _TemporalUVOffset;
					//   sampler2D _TiledNeighbourhoodData;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters1 c0       1
					//   _ScionResolutionParameters2 c1       1
					//   _TemporalUVOffset           c2       1
					//   _TiledNeighbourhoodData     s0       1
					//   _ExclusionMask              s1       1
					//   _HalfResSourceDepthTexture  s2       1
					//   _PresortTexture             s3       1
					//   _AvgCenterDepth             s4       1
					//
					
					    ps_3_0
					    def c3, 1, 0, 0.5, 9.99999975e-005
					    def c4, 10, 0.00100000005, 0.571428478, 0
					    def c5, 0.285714298, 0, 1.37, 0.707106829
					    def c6, 0.000231481477, 0.25, 0, 3571
					    def c7, 2, -1, -3, -4
					    def c8, -5, -6, -7, -8
					    def c9, -13, -14, -15, -16
					    def c10, -17, -18, -19, -20
					    def c11, -21, -22, -23, -24
					    def c12, 0.857142925, 25, -0.866025388, -0.499999911
					    def c13, -25, -26, -27, -28
					    def c14, -29, -30, -31, -32
					    def c15, -33, -34, -35, -36
					    def c16, -37, -38, -39, -40
					    def c17, -41, -42, -43, -44
					    def c18, -45, -46, -47, -48
					    def c19, 0.866025388, -0.5, 0.0641141385, 9.99999994e-009
					    def c20, 9, 10, 11, 12
					    def c21, -0.923879385, -0.382683486, 0.382683486, -0.382683396
					    def c22, 0.707106829, -0.707106829, 0, -1
					    def c23, -0.965925872, -0.258819014, 0.258819014, -0.965925813
					    def c24, -0.866025388, 0.499999911, 0.500000119, -0.866025329
					    def c25, 0.5, 0.866025388, 0.258819103, 0.965925813
					    def c26, -0.258818895, -0.965925813, -0.258819193, 0.965925813
					    defi i0, 8, 0, 0, 0
					    defi i1, 16, 0, 0, 0
					    defi i2, 24, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    dcl_2d s3
					    dcl_2d s4
					    mul r0, c3.xxyy, v0.xyxx
					    texldl r1, r0, s0
					    texldl r2, r0, s2
					    texldl r3, r0, s1
					    mul r1.y, r1.x, r3.x
					    if_lt r1.y, c3.x
					      mov oC1, c3.y
					    else
					      texldl r4, c3.zzyy, s4
					      texldl r0, r0, s3
					      add_sat r0.x, -r2.w, r4.x
					      add r0.x, r0.x, c3.x
					      mad r0.x, r0.y, r0.x, c3.w
					      add r0.y, r0.z, c3.w
					      mul r3.yzw, r0.x, r2.xxyz
					      mul r4.yzw, r0.y, r2.xxyz
					      mul r0.z, r1.y, c5.x
					      mul r1.zw, c0.xyxy, v0.xyxy
					      mov r5.zw, c3.y
					      mov r6.xyz, r4.yzww
					      mov r6.w, r0.y
					      mov r7.xyz, r3.yzww
					      mov r7.w, r0.x
					      mov r0.w, c3.x
					      rep i0
					        mov r8.z, c5.z
					        mad r8.x, r0.w, r8.z, c2.x
					        mul r8.xy, r1.zwzw, r8.x
					        mad r8.xy, r8, c6.x, c6.yzzw
					        dp2add r8.z, r8, c6.w, c6.z
					        mul r8.xy, r8, r8.z
					        frc r8.xy, r8
					        mad r8.xy, r8, c7.x, c7.y
					        add r9, r0.w, -c7_abs.yxzw
					        add r10, r0.w, c8
					        cmp r8.zw, -r9_abs.x, c22.xyxy, c22.z
					        cmp r8.zw, -r9_abs.y, c22.xywz, r8
					        cmp r8.zw, -r9_abs.z, c5.w, r8
					        cmp r8.zw, -r9_abs.w, c22, r8
					        cmp r8.zw, -r10_abs.x, c3.xyyx, r8
					        cmp r8.zw, -r10_abs.y, -c5.w, r8
					        cmp r8.zw, -r10_abs.z, c3.xyxy, r8
					        cmp r8.zw, -r10_abs.w, c22.xyyx, r8
					        mad r8.xy, r8, c6.y, r8.zwzw
					        mul r8.xy, r0.z, r8
					        mad r5.xy, r8, c1, v0
					        texldl r9, r5.xyww, s2
					        texldl r10, r5.xyww, s3
					        dp2add r8.x, r8, r8, c3.y
					        rsq r8.x, r8.x
					        rcp r8.x, r8.x
					        mad r8.x, r10.x, c4.x, -r8.x
					        add r8.x, r8.x, c6.y
					        mul_sat r8.x, r8.x, -c7.w
					        add_sat r8.y, r4.x, -r9.w
					        mul r8.z, r10.y, r8.x
					        add r8.y, r8.y, c3.x
					        mad r11.w, r8.z, r8.y, c4.y
					        mad r8.w, r8.x, r10.z, c4.y
					        mul r11.xyz, r9, r11.w
					        mul r8.xyz, r8.w, r9
					        texldl r9, r5, s1
					        mad r7, r11, r9.x, r7
					        mad r6, r8, r9.x, r6
					        add r0.w, r0.w, c3.x
					      endrep
					      if_lt c7.x, r1.y
					        mad_sat r0.x, r1.x, r3.x, -c7.x
					        mul r0.y, r1.y, c4.z
					        mov r5.zw, c3.y
					        mov r8, r6
					        mov r9, r7
					        mov r0.z, c20.x
					        rep i1
					          mov r3.z, c5.z
					          mad r0.w, r0.z, r3.z, c2.x
					          mul r3.yz, r0.w, r1.xzww
					          mad r3.yz, r3, c6.x, c6
					          dp2add r0.w, r3.yzzw, c6.w, c6.z
					          mul r3.yz, r3, r0.w
					          frc r3.yz, r3
					          mad r3.yz, r3, c7.x, c7.y
					          add r10, r0.z, -c20
					          add r11, r0.z, c9
					          add r12, r0.z, c10
					          add r13, r0.z, c11
					          cmp r4.yz, -r10_abs.x, c22.xxyw, c22.z
					          cmp r4.yz, -r10_abs.y, c21.xxyw, r4
					          cmp r4.yz, -r10_abs.z, c22.xwzw, r4
					          cmp r4.yz, -r10_abs.w, c21.xxzw, r4
					          cmp r4.yz, -r11_abs.x, c5.w, r4
					          cmp r4.yz, -r11_abs.y, c21.xzxw, r4
					          cmp r4.yz, -r11_abs.z, -c21.xwxw, r4
					          cmp r4.yz, -r11_abs.w, c22.xzww, r4
					          cmp r4.yz, -r12_abs.x, c3.xyxw, r4
					          cmp r4.yz, -r12_abs.y, c21.xwxw, r4
					          cmp r4.yz, -r12_abs.z, -c21.xzxw, r4
					          cmp r4.yz, -r12_abs.w, -c5.w, r4
					          cmp r4.yz, -r13_abs.x, -c21.xxzw, r4
					          cmp r4.yz, -r13_abs.y, c3.xxyw, r4
					          cmp r4.yz, -r13_abs.z, -c21.xxyw, r4
					          cmp r4.yz, -r13_abs.w, c22.xyxw, r4
					          mad r3.yz, r3, c6.y, r4
					          mul r3.yz, r0.y, r3
					          mad r5.xy, r3.yzzw, c1, v0
					          texldl r10, r5.xyww, s2
					          texldl r11, r5.xyww, s3
					          dp2add r0.w, r3.yzzw, r3.yzzw, c3.y
					          rsq r0.w, r0.w
					          rcp r0.w, r0.w
					          mad r0.w, r11.x, c4.x, -r0.w
					          add r0.w, r0.w, c6.y
					          mul_sat r0.w, r0.w, -c7.w
					          mul r0.w, r0.x, r0.w
					          add_sat r3.y, r4.x, -r10.w
					          mul r3.z, r11.y, r0.w
					          add r3.y, r3.y, c3.x
					          mad r12.w, r3.z, r3.y, c4.y
					          mad r11.w, r0.w, r11.z, c4.y
					          mul r12.xyz, r10, r12.w
					          mul r11.xyz, r10, r11.w
					          texldl r10, r5, s1
					          mad r9, r12, r10.x, r9
					          mad r8, r11, r10.x, r8
					          add r0.z, r0.z, c3.x
					        endrep
					        mov r6, r8
					        mov r7, r9
					        if_lt -c7.w, r1.y
					          mad_sat r0.x, r1.x, r3.x, c7.w
					          mul r0.y, r1.y, c12.x
					          mov r3.zw, c3.y
					          mov r5, r6
					          mov r8, r7
					          mov r0.z, c12.y
					          rep i2
					            mov r4.z, c5.z
					            mad r0.w, r0.z, r4.z, c2.x
					            mul r4.yz, r0.w, r1.xzww
					            mad r4.yz, r4, c6.x, c6
					            dp2add r0.w, r4.yzzw, c6.w, c6.z
					            mul r4.yz, r4, r0.w
					            frc r4.yz, r4
					            mad r4.yz, r4, c7.x, c7.y
					            add r9, r0.z, c13
					            add r10, r0.z, c14
					            add r11, r0.z, c15
					            add r12, r0.z, c16
					            add r13, r0.z, c17
					            add r14, r0.z, c18
					            cmp r15.xy, -r9_abs.x, c22, c22.z
					            cmp r9.xy, -r9_abs.y, c12.zwzw, r15
					            cmp r9.xy, -r9_abs.z, c23, r9
					            cmp r9.xy, -r9_abs.w, c22.wzzw, r9
					            cmp r9.xy, -r10_abs.x, c23.xzzw, r9
					            cmp r9.xy, -r10_abs.y, c24, r9
					            cmp r9.xy, -r10_abs.z, c22.yxzw, r9
					            cmp r9.xy, -r10_abs.w, c24.zwzw, r9
					            cmp r9.xy, -r11_abs.x, c25, r9
					            cmp r9.xy, -r11_abs.y, c23.zwzw, r9
					            cmp r9.xy, -r11_abs.z, c25.zwzw, r9
					            cmp r9.xy, -r11_abs.w, c22.zwzw, r9
					            cmp r9.xy, -r12_abs.x, c3.yxzw, r9
					            cmp r9.xy, -r12_abs.y, c26, r9
					            cmp r9.xy, -r12_abs.z, c26.zwzw, r9
					            cmp r9.xy, -r12_abs.w, c12.wzzw, r9
					            cmp r9.xy, -r13_abs.x, -c24.zxzw, r9
					            cmp r9.xy, -r13_abs.y, -c5.w, r9
					            cmp r9.xy, -r13_abs.z, c19, r9
					            cmp r9.xy, -r13_abs.w, -c23.wzzw, r9
					            cmp r9.xy, -r14_abs.x, c3, r9
					            cmp r9.xy, -r14_abs.y, -c23.wyzw, r9
					            cmp r9.xy, -r14_abs.z, c25.yxzw, r9
					            cmp r9.xy, -r14_abs.w, c22.yxzw, r9
					            mad r4.yz, r4, c6.y, r9.xxyw
					            mul r4.yz, r0.y, r4
					            mad r3.xy, r4.yzzw, c1, v0
					            texldl r9, r3.xyww, s2
					            texldl r10, r3.xyww, s3
					            dp2add r0.w, r4.yzzw, r4.yzzw, c3.y
					            rsq r0.w, r0.w
					            rcp r0.w, r0.w
					            mad r0.w, r10.x, c4.x, -r0.w
					            add r0.w, r0.w, c6.y
					            mul_sat r0.w, r0.w, -c7.w
					            mul r0.w, r0.x, r0.w
					            add_sat r1.x, r4.x, -r9.w
					            mul r4.y, r10.y, r0.w
					            add r1.x, r1.x, c3.x
					            mad r11.w, r4.y, r1.x, c4.y
					            mad r10.w, r0.w, r10.z, c4.y
					            mul r11.xyz, r9, r11.w
					            mul r10.xyz, r9, r10.w
					            texldl r9, r3, s1
					            mad r8, r11, r9.x, r8
					            mad r5, r10, r9.x, r5
					            add r0.z, r0.z, c3.x
					          endrep
					          mov r6, r5
					          mov r7, r8
					        endif
					      endif
					      max r0.x, r1.y, c3.z
					      mul r0.x, r0.x, r0.x
					      mul r0.x, r0.x, r7.w
					      mul r0.x, r0.x, c19.z
					      mov_sat r0, r0.x
					      add r1.x, r6.w, c19.w
					      rcp r1.x, r1.x
					      mul r1.xyz, r1.x, r6
					      add r1.w, r7.w, c19.w
					      rcp r1.w, r1.w
					      mad r3.xyz, r7, r1.w, -r1
					      mad r2.xyz, r0.w, r3, r1
					      mov oC1, r0
					    endif
					    mov oC0, r2
					
					// approximately 252 instruction slots used (28 texture, 224 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" "SC_DOF_MASK_ON" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _ScionResolutionParameters1;
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_3[16];
						float _TemporalUVOffset;
					};
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _AvgCenterDepth;
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _ExclusionMask;
					uniform  sampler2D _PresortTexture;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					layout(location = 1) out vec4 SV_Target1;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec4 u_xlat12;
					vec4 u_xlat13;
					float u_xlat14;
					float u_xlat15;
					vec2 u_xlat16;
					vec2 u_xlat17;
					vec2 u_xlat28;
					bool u_xlatb28;
					float u_xlat29;
					float u_xlat42;
					void main()
					{
					    u_xlat0 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat2 = textureLod(_ExclusionMask, vs_TEXCOORD0.xy, 0.0);
					    u_xlat14 = u_xlat0.x * u_xlat2.x;
					    u_xlatb28 = u_xlat14<1.0;
					    if(u_xlatb28){
					        SV_Target0 = u_xlat1;
					        SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
					        return;
					    }
					    u_xlat3 = textureLod(_AvgCenterDepth, vec2(0.5, 0.5), 0.0);
					    u_xlat4 = textureLod(_PresortTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat28.x = (-u_xlat1.w) + u_xlat3.x;
					    u_xlat28.x = clamp(u_xlat28.x, 0.0, 1.0);
					    u_xlat28.x = u_xlat28.x + 1.0;
					    u_xlat5.w = u_xlat4.y * u_xlat28.x + 9.99999975e-05;
					    u_xlat4.w = u_xlat4.z + 9.99999975e-05;
					    u_xlat5.xyz = u_xlat1.xyz * u_xlat5.www;
					    u_xlat4.xyz = u_xlat1.xyz * u_xlat4.www;
					    u_xlat28.x = u_xlat14 * 0.285714298;
					    u_xlat6 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(1.37, 2.74000001, 4.11000013, 5.48000002);
					    u_xlat7 = vs_TEXCOORD0.xyxy * _ScionResolutionParameters1.xyxy;
					    u_xlat8 = u_xlat6.xxyy * u_xlat7.zwzw;
					    u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat42 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat8.xy * vec2(u_xlat42);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, -0.707106829);
					    u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					    u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					    u_xlat10 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					    u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat42 = sqrt(u_xlat42);
					    u_xlat42 = u_xlat10.x * 10.0 + (-u_xlat42);
					    u_xlat42 = u_xlat42 + 0.25;
					    u_xlat42 = u_xlat42 * 4.0;
					    u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.x + (-u_xlat9.w);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat15 = u_xlat10.y * u_xlat42;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat11.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					    u_xlat10.w = u_xlat42 * u_xlat10.z + 0.00100000005;
					    u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					    u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					    u_xlat9 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					    u_xlat5 = u_xlat11 * u_xlat9.xxxx + u_xlat5;
					    u_xlat4 = u_xlat10 * u_xlat9.xxxx + u_xlat4;
					    u_xlat42 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat8.zw * vec2(u_xlat42);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-1.0, 0.0);
					    u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					    u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					    u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat42 = sqrt(u_xlat42);
					    u_xlat42 = u_xlat9.x * 10.0 + (-u_xlat42);
					    u_xlat42 = u_xlat42 + 0.25;
					    u_xlat42 = u_xlat42 * 4.0;
					    u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.x + (-u_xlat8.w);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat15 = u_xlat9.y * u_xlat42;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat10.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					    u_xlat9.w = u_xlat42 * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat8 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					    u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					    u_xlat4 = u_xlat9 * u_xlat8.xxxx + u_xlat4;
					    u_xlat6 = u_xlat6.zzww * u_xlat7.zwzw;
					    u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat42 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat6.xy * vec2(u_xlat42);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, 0.707106829);
					    u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					    u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					    u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat42 = sqrt(u_xlat42);
					    u_xlat42 = u_xlat9.x * 10.0 + (-u_xlat42);
					    u_xlat42 = u_xlat42 + 0.25;
					    u_xlat42 = u_xlat42 * 4.0;
					    u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.x + (-u_xlat8.w);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat15 = u_xlat9.y * u_xlat42;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat10.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					    u_xlat9.w = u_xlat42 * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat8 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					    u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					    u_xlat4 = u_xlat9 * u_xlat8.xxxx + u_xlat4;
					    u_xlat42 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat6.zw * vec2(u_xlat42);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, -1.0);
					    u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					    u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					    u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat42 = sqrt(u_xlat42);
					    u_xlat42 = u_xlat8.x * 10.0 + (-u_xlat42);
					    u_xlat42 = u_xlat42 + 0.25;
					    u_xlat42 = u_xlat42 * 4.0;
					    u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.x + (-u_xlat6.w);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat15 = u_xlat8.y * u_xlat42;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat9.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					    u_xlat8.w = u_xlat42 * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat6 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					    u_xlat5 = u_xlat9 * u_xlat6.xxxx + u_xlat5;
					    u_xlat4 = u_xlat8 * u_xlat6.xxxx + u_xlat4;
					    u_xlat6 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(6.8499999, 8.22000027, 9.59000015, 10.96);
					    u_xlat8 = u_xlat6.xxyy * u_xlat7.zwzw;
					    u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat42 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat8.xy * vec2(u_xlat42);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, 1.0);
					    u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					    u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					    u_xlat10 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					    u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat42 = sqrt(u_xlat42);
					    u_xlat42 = u_xlat10.x * 10.0 + (-u_xlat42);
					    u_xlat42 = u_xlat42 + 0.25;
					    u_xlat42 = u_xlat42 * 4.0;
					    u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.x + (-u_xlat9.w);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat15 = u_xlat10.y * u_xlat42;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat11.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					    u_xlat10.w = u_xlat42 * u_xlat10.z + 0.00100000005;
					    u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					    u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					    u_xlat9 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					    u_xlat5 = u_xlat11 * u_xlat9.xxxx + u_xlat5;
					    u_xlat4 = u_xlat10 * u_xlat9.xxxx + u_xlat4;
					    u_xlat42 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat8.zw * vec2(u_xlat42);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, -0.707106829);
					    u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					    u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					    u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat42 = sqrt(u_xlat42);
					    u_xlat42 = u_xlat9.x * 10.0 + (-u_xlat42);
					    u_xlat42 = u_xlat42 + 0.25;
					    u_xlat42 = u_xlat42 * 4.0;
					    u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.x + (-u_xlat8.w);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat15 = u_xlat9.y * u_xlat42;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat10.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					    u_xlat9.w = u_xlat42 * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat8 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					    u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					    u_xlat4 = u_xlat9 * u_xlat8.xxxx + u_xlat4;
					    u_xlat6 = u_xlat6.zzww * u_xlat7.zwzw;
					    u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat42 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat6.xy * vec2(u_xlat42);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(1.0, 0.0);
					    u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					    u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					    u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat42 = sqrt(u_xlat42);
					    u_xlat42 = u_xlat9.x * 10.0 + (-u_xlat42);
					    u_xlat42 = u_xlat42 + 0.25;
					    u_xlat42 = u_xlat42 * 4.0;
					    u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.x + (-u_xlat8.w);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat15 = u_xlat9.y * u_xlat42;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat10.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					    u_xlat9.w = u_xlat42 * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat8 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					    u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					    u_xlat4 = u_xlat9 * u_xlat8.xxxx + u_xlat4;
					    u_xlat42 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat6.zw * vec2(u_xlat42);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					    u_xlat28.xy = u_xlat28.xx * u_xlat1.xy;
					    u_xlat1.xy = u_xlat28.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat28.x = dot(u_xlat28.xy, u_xlat28.xy);
					    u_xlat28.x = sqrt(u_xlat28.x);
					    u_xlat28.x = u_xlat8.x * 10.0 + (-u_xlat28.x);
					    u_xlat28.x = u_xlat28.x + 0.25;
					    u_xlat28.x = u_xlat28.x * 4.0;
					    u_xlat28.x = clamp(u_xlat28.x, 0.0, 1.0);
					    u_xlat42 = u_xlat3.x + (-u_xlat6.w);
					    u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					    u_xlat29 = u_xlat8.y * u_xlat28.x;
					    u_xlat42 = u_xlat42 + 1.0;
					    u_xlat9.w = u_xlat29 * u_xlat42 + 0.00100000005;
					    u_xlat8.w = u_xlat28.x * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat6 = textureLod(_ExclusionMask, u_xlat1.xy, 0.0);
					    u_xlat5 = u_xlat9 * u_xlat6.xxxx + u_xlat5;
					    u_xlat4 = u_xlat8 * u_xlat6.xxxx + u_xlat4;
					    u_xlatb28 = 2.0<u_xlat14;
					    if(u_xlatb28){
					        u_xlat28.x = u_xlat0.x * u_xlat2.x + -2.0;
					        u_xlat28.x = clamp(u_xlat28.x, 0.0, 1.0);
					        u_xlat42 = u_xlat14 * 0.571428478;
					        u_xlat6 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(12.3299999, 13.6999998, 15.0699997, 16.4400005);
					        u_xlat8 = u_xlat6.xxyy * u_xlat7.zwzw;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, -0.707106829);
					        u_xlat1.xy = vec2(u_xlat42) * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat10.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat28.x * u_xlat1.x;
					        u_xlat15 = u_xlat3.x + (-u_xlat9.w);
					        u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					        u_xlat29 = u_xlat10.y * u_xlat1.x;
					        u_xlat15 = u_xlat15 + 1.0;
					        u_xlat11.w = u_xlat29 * u_xlat15 + 0.00100000005;
					        u_xlat10.w = u_xlat1.x * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat9 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat11 = u_xlat11 * u_xlat9.xxxx + u_xlat5;
					        u_xlat9 = u_xlat10 * u_xlat9.xxxx + u_xlat4;
					        u_xlat1.x = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.923879385, -0.382683486);
					        u_xlat1.xy = vec2(u_xlat42) * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat10.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat28.x * u_xlat1.x;
					        u_xlat15 = u_xlat3.x + (-u_xlat8.w);
					        u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					        u_xlat29 = u_xlat10.y * u_xlat1.x;
					        u_xlat15 = u_xlat15 + 1.0;
					        u_xlat12.w = u_xlat29 * u_xlat15 + 0.00100000005;
					        u_xlat10.w = u_xlat1.x * u_xlat10.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat8.xyz * u_xlat12.www;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat11 = u_xlat12 * u_xlat8.xxxx + u_xlat11;
					        u_xlat8 = u_xlat10 * u_xlat8.xxxx + u_xlat9;
					        u_xlat6 = u_xlat6.zzww * u_xlat7.zwzw;
					        u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-1.0, 0.0);
					        u_xlat1.xy = vec2(u_xlat42) * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat10.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat28.x * u_xlat1.x;
					        u_xlat15 = u_xlat3.x + (-u_xlat9.w);
					        u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					        u_xlat29 = u_xlat10.y * u_xlat1.x;
					        u_xlat15 = u_xlat15 + 1.0;
					        u_xlat12.w = u_xlat29 * u_xlat15 + 0.00100000005;
					        u_xlat10.w = u_xlat1.x * u_xlat10.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat9.xyz * u_xlat12.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat9 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat11 = u_xlat12 * u_xlat9.xxxx + u_xlat11;
					        u_xlat8 = u_xlat10 * u_xlat9.xxxx + u_xlat8;
					        u_xlat1.x = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.923879385, 0.382683486);
					        u_xlat1.xy = vec2(u_xlat42) * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat9.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat28.x * u_xlat1.x;
					        u_xlat15 = u_xlat3.x + (-u_xlat6.w);
					        u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					        u_xlat29 = u_xlat9.y * u_xlat1.x;
					        u_xlat15 = u_xlat15 + 1.0;
					        u_xlat10.w = u_xlat29 * u_xlat15 + 0.00100000005;
					        u_xlat9.w = u_xlat1.x * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat6.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					        u_xlat6 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat10 = u_xlat10 * u_xlat6.xxxx + u_xlat11;
					        u_xlat6 = u_xlat9 * u_xlat6.xxxx + u_xlat8;
					        u_xlat8 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(17.8099995, 19.1800003, 20.5499992, 21.9200001);
					        u_xlat9 = u_xlat7.zwzw * u_xlat8.xxyy;
					        u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, 0.707106829);
					        u_xlat1.xy = vec2(u_xlat42) * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat11 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat12 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat12.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat28.x * u_xlat1.x;
					        u_xlat15 = u_xlat3.x + (-u_xlat11.w);
					        u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					        u_xlat29 = u_xlat12.y * u_xlat1.x;
					        u_xlat15 = u_xlat15 + 1.0;
					        u_xlat13.w = u_xlat29 * u_xlat15 + 0.00100000005;
					        u_xlat12.w = u_xlat1.x * u_xlat12.z + 0.00100000005;
					        u_xlat13.xyz = u_xlat11.xyz * u_xlat13.www;
					        u_xlat12.xyz = u_xlat11.xyz * u_xlat12.www;
					        u_xlat11 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat10 = u_xlat13 * u_xlat11.xxxx + u_xlat10;
					        u_xlat6 = u_xlat12 * u_xlat11.xxxx + u_xlat6;
					        u_xlat1.x = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.382683486, -0.923879385);
					        u_xlat1.xy = vec2(u_xlat42) * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat11.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat28.x * u_xlat1.x;
					        u_xlat15 = u_xlat3.x + (-u_xlat9.w);
					        u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					        u_xlat29 = u_xlat11.y * u_xlat1.x;
					        u_xlat15 = u_xlat15 + 1.0;
					        u_xlat12.w = u_xlat29 * u_xlat15 + 0.00100000005;
					        u_xlat11.w = u_xlat1.x * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat9.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat9 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat10 = u_xlat12 * u_xlat9.xxxx + u_xlat10;
					        u_xlat6 = u_xlat11 * u_xlat9.xxxx + u_xlat6;
					        u_xlat8 = u_xlat7.zwzw * u_xlat8.zzww;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.382683396, 0.923879385);
					        u_xlat1.xy = vec2(u_xlat42) * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat11.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat28.x * u_xlat1.x;
					        u_xlat15 = u_xlat3.x + (-u_xlat9.w);
					        u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					        u_xlat29 = u_xlat11.y * u_xlat1.x;
					        u_xlat15 = u_xlat15 + 1.0;
					        u_xlat12.w = u_xlat29 * u_xlat15 + 0.00100000005;
					        u_xlat11.w = u_xlat1.x * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat9.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat9 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat10 = u_xlat12 * u_xlat9.xxxx + u_xlat10;
					        u_xlat6 = u_xlat11 * u_xlat9.xxxx + u_xlat6;
					        u_xlat1.x = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, -1.0);
					        u_xlat1.xy = vec2(u_xlat42) * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat9.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat28.x * u_xlat1.x;
					        u_xlat15 = u_xlat3.x + (-u_xlat8.w);
					        u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					        u_xlat29 = u_xlat9.y * u_xlat1.x;
					        u_xlat15 = u_xlat15 + 1.0;
					        u_xlat11.w = u_xlat29 * u_xlat15 + 0.00100000005;
					        u_xlat9.w = u_xlat1.x * u_xlat9.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat10 = u_xlat11 * u_xlat8.xxxx + u_xlat10;
					        u_xlat6 = u_xlat9 * u_xlat8.xxxx + u_xlat6;
					        u_xlat8 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(23.2900009, 24.6599998, 26.0300007, 27.3999996);
					        u_xlat9 = u_xlat7.zwzw * u_xlat8.xxyy;
					        u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, 1.0);
					        u_xlat1.xy = vec2(u_xlat42) * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat11 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat12 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat12.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat28.x * u_xlat1.x;
					        u_xlat15 = u_xlat3.x + (-u_xlat11.w);
					        u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					        u_xlat29 = u_xlat12.y * u_xlat1.x;
					        u_xlat15 = u_xlat15 + 1.0;
					        u_xlat13.w = u_xlat29 * u_xlat15 + 0.00100000005;
					        u_xlat12.w = u_xlat1.x * u_xlat12.z + 0.00100000005;
					        u_xlat13.xyz = u_xlat11.xyz * u_xlat13.www;
					        u_xlat12.xyz = u_xlat11.xyz * u_xlat12.www;
					        u_xlat11 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat10 = u_xlat13 * u_xlat11.xxxx + u_xlat10;
					        u_xlat6 = u_xlat12 * u_xlat11.xxxx + u_xlat6;
					        u_xlat1.x = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.382683396, -0.923879385);
					        u_xlat1.xy = vec2(u_xlat42) * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat11.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat28.x * u_xlat1.x;
					        u_xlat15 = u_xlat3.x + (-u_xlat9.w);
					        u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					        u_xlat29 = u_xlat11.y * u_xlat1.x;
					        u_xlat15 = u_xlat15 + 1.0;
					        u_xlat12.w = u_xlat29 * u_xlat15 + 0.00100000005;
					        u_xlat11.w = u_xlat1.x * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat9.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat9 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat10 = u_xlat12 * u_xlat9.xxxx + u_xlat10;
					        u_xlat6 = u_xlat11 * u_xlat9.xxxx + u_xlat6;
					        u_xlat8 = u_xlat7.zwzw * u_xlat8.zzww;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.382683486, 0.923879385);
					        u_xlat1.xy = vec2(u_xlat42) * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat11.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat28.x * u_xlat1.x;
					        u_xlat15 = u_xlat3.x + (-u_xlat9.w);
					        u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					        u_xlat29 = u_xlat11.y * u_xlat1.x;
					        u_xlat15 = u_xlat15 + 1.0;
					        u_xlat12.w = u_xlat29 * u_xlat15 + 0.00100000005;
					        u_xlat11.w = u_xlat1.x * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat9.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat9 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat10 = u_xlat12 * u_xlat9.xxxx + u_xlat10;
					        u_xlat6 = u_xlat11 * u_xlat9.xxxx + u_xlat6;
					        u_xlat1.x = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, -0.707106829);
					        u_xlat1.xy = vec2(u_xlat42) * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat9.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat28.x * u_xlat1.x;
					        u_xlat15 = u_xlat3.x + (-u_xlat8.w);
					        u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					        u_xlat29 = u_xlat9.y * u_xlat1.x;
					        u_xlat15 = u_xlat15 + 1.0;
					        u_xlat11.w = u_xlat29 * u_xlat15 + 0.00100000005;
					        u_xlat9.w = u_xlat1.x * u_xlat9.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat10 = u_xlat11 * u_xlat8.xxxx + u_xlat10;
					        u_xlat6 = u_xlat9 * u_xlat8.xxxx + u_xlat6;
					        u_xlat8 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(28.7700005, 30.1399994, 31.5100002, 32.8800011);
					        u_xlat9 = u_xlat7.zwzw * u_xlat8.xxyy;
					        u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.923879385, -0.382683486);
					        u_xlat1.xy = vec2(u_xlat42) * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat11 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat12 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat12.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat28.x * u_xlat1.x;
					        u_xlat15 = u_xlat3.x + (-u_xlat11.w);
					        u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					        u_xlat29 = u_xlat12.y * u_xlat1.x;
					        u_xlat15 = u_xlat15 + 1.0;
					        u_xlat13.w = u_xlat29 * u_xlat15 + 0.00100000005;
					        u_xlat12.w = u_xlat1.x * u_xlat12.z + 0.00100000005;
					        u_xlat13.xyz = u_xlat11.xyz * u_xlat13.www;
					        u_xlat12.xyz = u_xlat11.xyz * u_xlat12.www;
					        u_xlat11 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat10 = u_xlat13 * u_xlat11.xxxx + u_xlat10;
					        u_xlat6 = u_xlat12 * u_xlat11.xxxx + u_xlat6;
					        u_xlat1.x = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(1.0, 0.0);
					        u_xlat1.xy = vec2(u_xlat42) * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat11.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat28.x * u_xlat1.x;
					        u_xlat15 = u_xlat3.x + (-u_xlat9.w);
					        u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					        u_xlat29 = u_xlat11.y * u_xlat1.x;
					        u_xlat15 = u_xlat15 + 1.0;
					        u_xlat12.w = u_xlat29 * u_xlat15 + 0.00100000005;
					        u_xlat11.w = u_xlat1.x * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat9.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat9 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat10 = u_xlat12 * u_xlat9.xxxx + u_xlat10;
					        u_xlat6 = u_xlat11 * u_xlat9.xxxx + u_xlat6;
					        u_xlat8 = u_xlat7.zwzw * u_xlat8.zzww;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat1.x = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.923879385, 0.382683486);
					        u_xlat1.xy = vec2(u_xlat42) * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat1.x = sqrt(u_xlat1.x);
					        u_xlat1.x = u_xlat11.x * 10.0 + (-u_xlat1.x);
					        u_xlat1.x = u_xlat1.x + 0.25;
					        u_xlat1.x = u_xlat1.x * 4.0;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat1.x = u_xlat28.x * u_xlat1.x;
					        u_xlat15 = u_xlat3.x + (-u_xlat9.w);
					        u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					        u_xlat29 = u_xlat11.y * u_xlat1.x;
					        u_xlat15 = u_xlat15 + 1.0;
					        u_xlat12.w = u_xlat29 * u_xlat15 + 0.00100000005;
					        u_xlat11.w = u_xlat1.x * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat9.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat9 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat10 = u_xlat12 * u_xlat9.xxxx + u_xlat10;
					        u_xlat6 = u_xlat11 * u_xlat9.xxxx + u_xlat6;
					        u_xlat1.x = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * u_xlat1.xx;
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					        u_xlat1.xy = vec2(u_xlat42) * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat42 = sqrt(u_xlat42);
					        u_xlat42 = u_xlat9.x * 10.0 + (-u_xlat42);
					        u_xlat42 = u_xlat42 + 0.25;
					        u_xlat42 = u_xlat42 * 4.0;
					        u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					        u_xlat28.x = u_xlat28.x * u_xlat42;
					        u_xlat42 = u_xlat3.x + (-u_xlat8.w);
					        u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					        u_xlat1.x = u_xlat9.y * u_xlat28.x;
					        u_xlat42 = u_xlat42 + 1.0;
					        u_xlat11.w = u_xlat1.x * u_xlat42 + 0.00100000005;
					        u_xlat9.w = u_xlat28.x * u_xlat9.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat5 = u_xlat11 * u_xlat8.xxxx + u_xlat10;
					        u_xlat4 = u_xlat9 * u_xlat8.xxxx + u_xlat6;
					        u_xlatb28 = 4.0<u_xlat14;
					        if(u_xlatb28){
					            u_xlat0.x = u_xlat0.x * u_xlat2.x + -4.0;
					            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					            u_xlat28.x = u_xlat14 * 0.857142925;
					            u_xlat2 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(34.25, 35.6199989, 36.9900017, 38.3600006);
					            u_xlat6 = u_xlat2.xxyy * u_xlat7.zwzw;
					            u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat42 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat6.xy * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.707106829, -0.707106829);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat9.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat8.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat9.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat42 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					            u_xlat10 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					            u_xlat8 = u_xlat9 * u_xlat8.xxxx + u_xlat4;
					            u_xlat42 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat6.zw * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.866025388, -0.499999911);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat9.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat6.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat9.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat42 * u_xlat9.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat6.xyz * u_xlat11.www;
					            u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					            u_xlat6 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					            u_xlat10 = u_xlat11 * u_xlat6.xxxx + u_xlat10;
					            u_xlat6 = u_xlat9 * u_xlat6.xxxx + u_xlat8;
					            u_xlat2 = u_xlat2.zzww * u_xlat7.zwzw;
					            u_xlat2 = u_xlat2 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat42 = dot(u_xlat2.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat2.xy * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.965925872, -0.258819014);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat9.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat8.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat9.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat42 * u_xlat9.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat8 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					            u_xlat10 = u_xlat11 * u_xlat8.xxxx + u_xlat10;
					            u_xlat6 = u_xlat9 * u_xlat8.xxxx + u_xlat6;
					            u_xlat42 = dot(u_xlat2.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat2.zw * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-1.0, 0.0);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat9.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat8.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat9.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat42 * u_xlat9.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					            u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					            u_xlat2 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					            u_xlat8 = u_xlat11 * u_xlat2.xxxx + u_xlat10;
					            u_xlat2 = u_xlat9 * u_xlat2.xxxx + u_xlat6;
					            u_xlat6 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(39.7299995, 41.0999985, 42.4700012, 43.8400002);
					            u_xlat9 = u_xlat6.xxyy * u_xlat7.zwzw;
					            u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat42 = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.xy * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.965925872, 0.258819014);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat17.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat17.xy, 0.0);
					            u_xlat11 = textureLod(_PresortTexture, u_xlat17.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat11.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat10.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat11.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat12.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat11.w = u_xlat42 * u_xlat11.z + 0.00100000005;
					            u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					            u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					            u_xlat10 = textureLod(_ExclusionMask, u_xlat17.xy, 0.0);
					            u_xlat8 = u_xlat12 * u_xlat10.xxxx + u_xlat8;
					            u_xlat2 = u_xlat11 * u_xlat10.xxxx + u_xlat2;
					            u_xlat42 = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.zw * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.866025388, 0.499999911);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat17.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat17.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat17.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat10.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat9.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat10.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat42 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat9 = textureLod(_ExclusionMask, u_xlat17.xy, 0.0);
					            u_xlat8 = u_xlat11 * u_xlat9.xxxx + u_xlat8;
					            u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					            u_xlat6 = u_xlat6.zzww * u_xlat7.zwzw;
					            u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat42 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat6.xy * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat17.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat17.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat17.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat10.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat9.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat10.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat42 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat9 = textureLod(_ExclusionMask, u_xlat17.xy, 0.0);
					            u_xlat8 = u_xlat11 * u_xlat9.xxxx + u_xlat8;
					            u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					            u_xlat42 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat6.zw * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.500000119, -0.866025329);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat17.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat17.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat17.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat9.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat6.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat9.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat42 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat6.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					            u_xlat6 = textureLod(_ExclusionMask, u_xlat17.xy, 0.0);
					            u_xlat8 = u_xlat10 * u_xlat6.xxxx + u_xlat8;
					            u_xlat2 = u_xlat9 * u_xlat6.xxxx + u_xlat2;
					            u_xlat6 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(45.2099991, 46.5800018, 47.9500008, 49.3199997);
					            u_xlat9 = u_xlat6.xxyy * u_xlat7.zwzw;
					            u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat42 = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.xy * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.5, 0.866025388);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat17.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat17.xy, 0.0);
					            u_xlat11 = textureLod(_PresortTexture, u_xlat17.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat11.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat10.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat11.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat12.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat11.w = u_xlat42 * u_xlat11.z + 0.00100000005;
					            u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					            u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					            u_xlat10 = textureLod(_ExclusionMask, u_xlat17.xy, 0.0);
					            u_xlat8 = u_xlat12 * u_xlat10.xxxx + u_xlat8;
					            u_xlat2 = u_xlat11 * u_xlat10.xxxx + u_xlat2;
					            u_xlat42 = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.zw * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.258819014, -0.965925813);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat17.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat17.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat17.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat10.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat9.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat10.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat42 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat9 = textureLod(_ExclusionMask, u_xlat17.xy, 0.0);
					            u_xlat8 = u_xlat11 * u_xlat9.xxxx + u_xlat8;
					            u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					            u_xlat6 = u_xlat6.zzww * u_xlat7.zwzw;
					            u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat42 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat6.xy * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.258819103, 0.965925813);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat17.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat17.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat17.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat10.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat9.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat10.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat42 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat9 = textureLod(_ExclusionMask, u_xlat17.xy, 0.0);
					            u_xlat8 = u_xlat11 * u_xlat9.xxxx + u_xlat8;
					            u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					            u_xlat42 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat6.zw * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, -1.0);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat17.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat17.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat17.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat9.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat6.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat9.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat42 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat6.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					            u_xlat6 = textureLod(_ExclusionMask, u_xlat17.xy, 0.0);
					            u_xlat8 = u_xlat10 * u_xlat6.xxxx + u_xlat8;
					            u_xlat2 = u_xlat9 * u_xlat6.xxxx + u_xlat2;
					            u_xlat6 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(50.6899986, 52.0600014, 53.4300003, 54.7999992);
					            u_xlat9 = u_xlat6.xxyy * u_xlat7.zwzw;
					            u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat42 = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.xy * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.0, 1.0);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat17.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat17.xy, 0.0);
					            u_xlat11 = textureLod(_PresortTexture, u_xlat17.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat11.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat10.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat11.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat12.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat11.w = u_xlat42 * u_xlat11.z + 0.00100000005;
					            u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					            u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					            u_xlat10 = textureLod(_ExclusionMask, u_xlat17.xy, 0.0);
					            u_xlat8 = u_xlat12 * u_xlat10.xxxx + u_xlat8;
					            u_xlat2 = u_xlat11 * u_xlat10.xxxx + u_xlat2;
					            u_xlat42 = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.zw * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.258818895, -0.965925813);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat17.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat17.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat17.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat10.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat9.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat10.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat42 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat9 = textureLod(_ExclusionMask, u_xlat17.xy, 0.0);
					            u_xlat8 = u_xlat11 * u_xlat9.xxxx + u_xlat8;
					            u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					            u_xlat6 = u_xlat6.zzww * u_xlat7.zwzw;
					            u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat42 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat6.xy * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.258819193, 0.965925813);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat17.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat17.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat17.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat10.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat9.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat10.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat42 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat9 = textureLod(_ExclusionMask, u_xlat17.xy, 0.0);
					            u_xlat8 = u_xlat11 * u_xlat9.xxxx + u_xlat8;
					            u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					            u_xlat42 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat6.zw * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.499999911, -0.866025388);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat17.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat17.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat17.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat9.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat6.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat9.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat42 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat6.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					            u_xlat6 = textureLod(_ExclusionMask, u_xlat17.xy, 0.0);
					            u_xlat8 = u_xlat10 * u_xlat6.xxxx + u_xlat8;
					            u_xlat2 = u_xlat9 * u_xlat6.xxxx + u_xlat2;
					            u_xlat6 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(56.170002, 57.5400009, 58.9099998, 60.2799988);
					            u_xlat9 = u_xlat6.xxyy * u_xlat7.zwzw;
					            u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat42 = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.xy * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.500000119, 0.866025388);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat17.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat17.xy, 0.0);
					            u_xlat11 = textureLod(_PresortTexture, u_xlat17.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat11.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat10.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat11.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat12.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat11.w = u_xlat42 * u_xlat11.z + 0.00100000005;
					            u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					            u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					            u_xlat10 = textureLod(_ExclusionMask, u_xlat17.xy, 0.0);
					            u_xlat8 = u_xlat12 * u_xlat10.xxxx + u_xlat8;
					            u_xlat2 = u_xlat11 * u_xlat10.xxxx + u_xlat2;
					            u_xlat42 = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.zw * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, -0.707106829);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat17.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat17.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat17.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat10.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat9.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat10.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat42 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat9 = textureLod(_ExclusionMask, u_xlat17.xy, 0.0);
					            u_xlat8 = u_xlat11 * u_xlat9.xxxx + u_xlat8;
					            u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					            u_xlat6 = u_xlat6.zzww * u_xlat7.zwzw;
					            u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat42 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat6.xy * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.866025388, -0.5);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat17.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat17.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat17.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat10.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat9.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat10.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat42 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat9 = textureLod(_ExclusionMask, u_xlat17.xy, 0.0);
					            u_xlat8 = u_xlat11 * u_xlat9.xxxx + u_xlat8;
					            u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					            u_xlat42 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat6.zw * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.965925813, -0.258819014);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat17.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat17.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat17.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat9.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat6.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat9.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat42 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat6.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					            u_xlat6 = textureLod(_ExclusionMask, u_xlat17.xy, 0.0);
					            u_xlat8 = u_xlat10 * u_xlat6.xxxx + u_xlat8;
					            u_xlat2 = u_xlat9 * u_xlat6.xxxx + u_xlat2;
					            u_xlat6 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(61.6500015, 63.0200005, 64.3899994, 65.7600021);
					            u_xlat9 = u_xlat6.xxyy * u_xlat7.zwzw;
					            u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat42 = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.xy * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(1.0, 0.0);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat17.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat17.xy, 0.0);
					            u_xlat11 = textureLod(_PresortTexture, u_xlat17.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat11.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat10.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat11.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat12.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat11.w = u_xlat42 * u_xlat11.z + 0.00100000005;
					            u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					            u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					            u_xlat10 = textureLod(_ExclusionMask, u_xlat17.xy, 0.0);
					            u_xlat8 = u_xlat12 * u_xlat10.xxxx + u_xlat8;
					            u_xlat2 = u_xlat11 * u_xlat10.xxxx + u_xlat2;
					            u_xlat42 = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat9.zw * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.965925813, 0.258819014);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat17.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat17.xy, 0.0);
					            u_xlat10 = textureLod(_PresortTexture, u_xlat17.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat10.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat9.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat10.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat11.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat10.w = u_xlat42 * u_xlat10.z + 0.00100000005;
					            u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					            u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					            u_xlat9 = textureLod(_ExclusionMask, u_xlat17.xy, 0.0);
					            u_xlat8 = u_xlat11 * u_xlat9.xxxx + u_xlat8;
					            u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					            u_xlat6 = u_xlat6.zzww * u_xlat7;
					            u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					            u_xlat42 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat6.xy * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(0.866025388, 0.5);
					            u_xlat1.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat17.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat17.xy, 0.0);
					            u_xlat9 = textureLod(_PresortTexture, u_xlat17.xy, 0.0);
					            u_xlat42 = dot(u_xlat1.xy, u_xlat1.xy);
					            u_xlat42 = sqrt(u_xlat42);
					            u_xlat42 = u_xlat9.x * 10.0 + (-u_xlat42);
					            u_xlat42 = u_xlat42 + 0.25;
					            u_xlat42 = u_xlat42 * 4.0;
					            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					            u_xlat42 = u_xlat0.x * u_xlat42;
					            u_xlat1.x = u_xlat3.x + (-u_xlat7.w);
					            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					            u_xlat15 = u_xlat9.y * u_xlat42;
					            u_xlat1.x = u_xlat1.x + 1.0;
					            u_xlat10.w = u_xlat15 * u_xlat1.x + 0.00100000005;
					            u_xlat9.w = u_xlat42 * u_xlat9.z + 0.00100000005;
					            u_xlat10.xyz = u_xlat7.xyz * u_xlat10.www;
					            u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					            u_xlat7 = textureLod(_ExclusionMask, u_xlat17.xy, 0.0);
					            u_xlat8 = u_xlat10 * u_xlat7.xxxx + u_xlat8;
					            u_xlat2 = u_xlat9 * u_xlat7.xxxx + u_xlat2;
					            u_xlat42 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					            u_xlat1.xy = u_xlat6.zw * vec2(u_xlat42);
					            u_xlat1.xy = fract(u_xlat1.xy);
					            u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					            u_xlat1.xy = u_xlat1.xy * vec2(0.25, 0.25) + vec2(-0.707106829, 0.707106829);
					            u_xlat28.xy = u_xlat28.xx * u_xlat1.xy;
					            u_xlat1.xy = u_xlat28.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					            u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					            u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					            u_xlat28.x = dot(u_xlat28.xy, u_xlat28.xy);
					            u_xlat28.x = sqrt(u_xlat28.x);
					            u_xlat28.x = u_xlat7.x * 10.0 + (-u_xlat28.x);
					            u_xlat28.x = u_xlat28.x + 0.25;
					            u_xlat28.x = u_xlat28.x * 4.0;
					            u_xlat28.x = clamp(u_xlat28.x, 0.0, 1.0);
					            u_xlat0.x = u_xlat0.x * u_xlat28.x;
					            u_xlat28.x = u_xlat3.x + (-u_xlat6.w);
					            u_xlat28.x = clamp(u_xlat28.x, 0.0, 1.0);
					            u_xlat42 = u_xlat7.y * u_xlat0.x;
					            u_xlat28.x = u_xlat28.x + 1.0;
					            u_xlat3.w = u_xlat42 * u_xlat28.x + 0.00100000005;
					            u_xlat7.w = u_xlat0.x * u_xlat7.z + 0.00100000005;
					            u_xlat3.xyz = u_xlat3.www * u_xlat6.xyz;
					            u_xlat7.xyz = u_xlat6.xyz * u_xlat7.www;
					            u_xlat6 = textureLod(_ExclusionMask, u_xlat1.xy, 0.0);
					            u_xlat5 = u_xlat3 * u_xlat6.xxxx + u_xlat8;
					            u_xlat4 = u_xlat7 * u_xlat6.xxxx + u_xlat2;
					        }
					    }
					    u_xlat0.x = max(u_xlat14, 0.5);
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat5.w;
					    u_xlat0.x = u_xlat0.x * 0.0641141385;
					    u_xlat0 = u_xlat0.xxxx;
					    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
					    u_xlat1.x = u_xlat4.w + 9.99999994e-09;
					    u_xlat1.xyz = u_xlat4.xyz / u_xlat1.xxx;
					    u_xlat2.x = u_xlat5.w + 9.99999994e-09;
					    u_xlat2.xyz = u_xlat5.xyz / u_xlat2.xxx;
					    u_xlat2.xyz = (-u_xlat1.xyz) + u_xlat2.xyz;
					    SV_Target0.xyz = u_xlat0.www * u_xlat2.xyz + u_xlat1.xyz;
					    SV_Target0.w = u_xlat1.w;
					    SV_Target1 = u_xlat0;
					    return;
					}"
				}
			}
		}
		Pass {
			Name "UPSAMPLEPASS"
			ZClip Off
			ZWrite Off
			Cull Off
			Fog {
				Mode Off
			}
			GpuProgramID 404615
			Program "vp" {
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" "SC_DOF_MASK_ON" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" "SC_DOF_MASK_ON" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" "SC_DOF_MASK_ON" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" "SC_DOF_MASK_ON" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" "SC_DOF_MASK_ON" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" "SC_DOF_MASK_ON" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" "SC_DOF_MASK_ON" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" "SC_DOF_MASK_ON" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" "SC_DOF_MASK_ON" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" "SC_DOF_MASK_ON" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" "SC_DOF_MASK_ON" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" "SC_DOF_MASK_ON" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _AlphaTexture;
					//   sampler2D _CameraDepthTexture;
					//   float4 _CoCParams2;
					//   sampler2D _FullResolutionSource;
					//   float _ScionForwardMSAAFix;
					//   float4 _ScionResolutionParameters1;
					//   float4 _ScionResolutionParameters2;
					//   sampler2D _TapsTexture;
					//   sampler2D _TiledNeighbourhoodData;
					//   sampler2D _VirtualCameraTexture2;
					//   float4 _ZBufferParams;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ZBufferParams              c0       1
					//   _ScionResolutionParameters1 c1       1
					//   _ScionResolutionParameters2 c2       1
					//   _CoCParams2                 c3       1
					//   _ScionForwardMSAAFix        c4       1
					//   _VirtualCameraTexture2      s0       1
					//   _TiledNeighbourhoodData     s1       1
					//   _TapsTexture                s2       1
					//   _AlphaTexture               s3       1
					//   _CameraDepthTexture         s4       1
					//   _FullResolutionSource       s5       1
					//
					
					    ps_3_0
					    def c5, 0.5, 0, 1, 9.99999975e-006
					    def c6, 0.5625, 0.0625, 0.1875, 0.349999994
					    def c7, -2, 1, 3, 0.25
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    dcl_2d s3
					    dcl_2d s4
					    dcl_2d s5
					    mul r0.xy, c1, v0
					    frc r0.zw, r0.xyxy
					    add r0.xy, -r0.zwzw, r0
					    add r0.xy, r0, c5.x
					    mad r0.zw, r0.xyxy, -c2.xyxy, v0.xyxy
					    mul r1.xy, r0, c2
					    cmp r0.xy, -r0.zwzw, c5.y, c5.z
					    cmp r0.zw, r0, -c5.y, -c5.z
					    add r0.xy, r0.zwzw, r0
					    mad r0.xy, r0, c2, r1
					    mov r0.z, c5.y
					    texldl r2, r0.xyzz, s3
					    mov r2.w, r2.x
					    texldl r3, r0.xyzz, s2
					    texld r4, v0, s4
					    mad r4.x, c0.z, r4.x, c0.w
					    rcp r4.y, r4.x
					    add r3.w, -r3.w, r4.y
					    mov r2.xyz, r3
					    add r3.x, r3_abs.w, c5.w
					    rcp r3.x, r3.x
					    mul r3.x, r3.x, c6.y
					    mul r2, r2, r3.x
					    mov r1.z, c5.y
					    texldl r5, r1.xyzz, s2
					    add r3.y, r4.y, -r5.w
					    add r3.y, r3_abs.y, c5.w
					    rcp r3.y, r3.y
					    mul r3.z, r3.y, c6.x
					    mad r3.x, r3.y, c6.x, r3.x
					    texldl r6, r1.xyzz, s3
					    mov r5.w, r6.x
					    mad r2, r5, r3.z, r2
					    mov r0.w, r1.y
					    texldl r5, r0.xwzz, s3
					    texldl r6, r0.xwzz, s2
					    mov r1.w, r0.y
					    mov r0.w, r5.x
					    add r1.y, r4.y, -r6.w
					    mov r0.xyz, r6
					    add r1.y, r1_abs.y, c5.w
					    rcp r1.y, r1.y
					    mul r3.y, r1.y, c6.z
					    mad r1.y, r1.y, c6.z, r3.x
					    mad r0, r0, r3.y, r2
					    texldl r2, r1.xwzz, s3
					    texldl r3, r1.xwzz, s2
					    mov r2.w, r2.x
					    add r1.x, -r3.w, r4.y
					    mov r2.xyz, r3
					    add r1.x, r1_abs.x, c5.w
					    rcp r1.x, r1.x
					    mul r1.z, r1.x, c6.z
					    mad r1.x, r1.x, c6.z, r1.y
					    rcp r1.x, r1.x
					    mad r0, r2, r1.z, r0
					    mul r2.x, r1.x, r0.w
					    mov_sat r2.x, r2.x
					    mad r0.w, r2.x, c7.x, c7.z
					    mul r1.y, r2.x, r2.x
					    mul r0.w, r0.w, r1.y
					    texldl r2, c5.xxyy, s0
					    mad r1.y, r4.x, r2.y, r2.z
					    min r2.x, c3.x, r1_abs.y
					    mul r1.y, r2.x, c6.w
					    rsq r1.y, r1.y
					    rcp r1.y, r1.y
					    mul r2, c5.zzyy, v0.xyxx
					    texldl r2, r2, s1
					    mad r1.z, r2.x, c7.w, -r1.y
					    mad_sat r0.w, r0.w, r1.z, r1.y
					    mad r1.y, v0.y, c7.x, c7.y
					    mad r2.y, c4.x, r1.y, v0.y
					    mul r2.xzw, c5.zyyy, v0.x
					    texldl r2, r2, s5
					    mad r0.xyz, r0, r1.x, -r2
					    mad oC0.xyz, r0.w, r0, r2
					    mov oC0.w, c5.z
					
					// approximately 89 instruction slots used (23 texture, 66 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _ScionResolutionParameters1;
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_3[7];
						vec4 _CoCParams2;
						vec4 unused_0_5[4];
						float _ScionForwardMSAAFix;
						vec4 unused_0_7[4];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 unused_1_0[7];
						vec4 _ZBufferParams;
						vec4 unused_1_2;
					};
					uniform  sampler2D _CameraDepthTexture;
					uniform  sampler2D _TapsTexture;
					uniform  sampler2D _AlphaTexture;
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _FullResolutionSource;
					uniform  sampler2D _VirtualCameraTexture2;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					ivec2 u_xlati0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec3 u_xlat6;
					float u_xlat7;
					float u_xlat8;
					float u_xlat9;
					vec2 u_xlat12;
					ivec2 u_xlati12;
					float u_xlat20;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD0.xy * _ScionResolutionParameters1.xy;
					    u_xlat0.xy = floor(u_xlat0.xy);
					    u_xlat0.xy = u_xlat0.xy + vec2(0.5, 0.5);
					    u_xlat12.xy = (-u_xlat0.xy) * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat1.zw = u_xlat0.xy * _ScionResolutionParameters2.xy;
					    u_xlati0.xy = ivec2(uvec2(lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat12.xyxx).xy) * 0xFFFFFFFFu);
					    u_xlati12.xy = ivec2(uvec2(lessThan(u_xlat12.xyxy, vec4(0.0, 0.0, 0.0, 0.0)).xy) * 0xFFFFFFFFu);
					    u_xlati0.xy = (-u_xlati0.xy) + u_xlati12.xy;
					    u_xlat0.xy = vec2(u_xlati0.xy);
					    u_xlat1.xy = u_xlat0.xy * _ScionResolutionParameters2.xy + u_xlat1.zw;
					    u_xlat0 = textureLod(_AlphaTexture, u_xlat1.xy, 0.0).yzwx;
					    u_xlat2 = textureLod(_TapsTexture, u_xlat1.xy, 0.0);
					    u_xlat3 = texture(_CameraDepthTexture, vs_TEXCOORD0.xy);
					    u_xlat3.x = _ZBufferParams.z * u_xlat3.x + _ZBufferParams.w;
					    u_xlat9 = float(1.0) / u_xlat3.x;
					    u_xlat20 = (-u_xlat2.w) + u_xlat9;
					    u_xlat0.xyz = u_xlat2.xyz;
					    u_xlat2.x = abs(u_xlat20) + 9.99999975e-06;
					    u_xlat2.x = 0.0625 / u_xlat2.x;
					    u_xlat0 = u_xlat0 * u_xlat2.xxxx;
					    u_xlat4 = textureLod(_AlphaTexture, u_xlat1.zw, 0.0).yzwx;
					    u_xlat5 = textureLod(_TapsTexture, u_xlat1.zw, 0.0);
					    u_xlat8 = u_xlat9 + (-u_xlat5.w);
					    u_xlat4.xyz = u_xlat5.xyz;
					    u_xlat8 = abs(u_xlat8) + 9.99999975e-06;
					    u_xlat8 = 0.5625 / u_xlat8;
					    u_xlat0 = u_xlat4 * vec4(u_xlat8) + u_xlat0;
					    u_xlat2.x = u_xlat2.x + u_xlat8;
					    u_xlat4 = textureLod(_AlphaTexture, u_xlat1.xw, 0.0).yzwx;
					    u_xlat5 = textureLod(_TapsTexture, u_xlat1.xw, 0.0);
					    u_xlat4.xyz = u_xlat5.xyz;
					    u_xlat1.x = u_xlat9 + (-u_xlat5.w);
					    u_xlat1.x = abs(u_xlat1.x) + 9.99999975e-06;
					    u_xlat1.x = 0.1875 / u_xlat1.x;
					    u_xlat0 = u_xlat4 * u_xlat1.xxxx + u_xlat0;
					    u_xlat1.x = u_xlat1.x + u_xlat2.x;
					    u_xlat2 = textureLod(_AlphaTexture, u_xlat1.zy, 0.0).yzwx;
					    u_xlat4 = textureLod(_TapsTexture, u_xlat1.zy, 0.0);
					    u_xlat2.xyz = u_xlat4.xyz;
					    u_xlat7 = u_xlat9 + (-u_xlat4.w);
					    u_xlat7 = abs(u_xlat7) + 9.99999975e-06;
					    u_xlat7 = 0.1875 / u_xlat7;
					    u_xlat0 = u_xlat2 * vec4(u_xlat7) + u_xlat0;
					    u_xlat1.x = u_xlat7 + u_xlat1.x;
					    u_xlat0 = u_xlat0.wxyz / u_xlat1.xxxx;
					    u_xlat0.x = u_xlat0.x;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat1.x = u_xlat0.x * -2.0 + 3.0;
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat1.x;
					    u_xlat1 = textureLod(_VirtualCameraTexture2, vec2(0.5, 0.5), 0.0);
					    u_xlat1.x = u_xlat3.x * u_xlat1.y + u_xlat1.z;
					    u_xlat1.x = min(abs(u_xlat1.x), _CoCParams2.x);
					    u_xlat1.x = u_xlat1.x * 0.349999994;
					    u_xlat1.x = sqrt(u_xlat1.x);
					    u_xlat2 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat7 = u_xlat2.x * 0.25 + (-u_xlat1.x);
					    u_xlat0.x = u_xlat0.x * u_xlat7 + u_xlat1.x;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat1.x = vs_TEXCOORD0.y * -2.0 + 1.0;
					    u_xlat1.y = _ScionForwardMSAAFix * u_xlat1.x + vs_TEXCOORD0.y;
					    u_xlat1.x = vs_TEXCOORD0.x;
					    u_xlat1 = textureLod(_FullResolutionSource, u_xlat1.xy, 0.0);
					    u_xlat6.xyz = u_xlat0.yzw + (-u_xlat1.xyz);
					    SV_Target0.xyz = u_xlat0.xxx * u_xlat6.xyz + u_xlat1.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" "SC_DOF_MASK_ON" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _AlphaTexture;
					//   float4 _CoCParams2;
					//   sampler2D _ExclusionMask;
					//   sampler2D _FullResolutionSource;
					//   sampler2D _ScionCopiedFullResDepth;
					//   float _ScionForwardMSAAFix;
					//   float4 _ScionResolutionParameters1;
					//   float4 _ScionResolutionParameters2;
					//   sampler2D _TapsTexture;
					//   sampler2D _TiledNeighbourhoodData;
					//   sampler2D _VirtualCameraTexture2;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters1 c0       1
					//   _ScionResolutionParameters2 c1       1
					//   _CoCParams2                 c2       1
					//   _ScionForwardMSAAFix        c3       1
					//   _VirtualCameraTexture2      s0       1
					//   _TiledNeighbourhoodData     s1       1
					//   _ExclusionMask              s2       1
					//   _TapsTexture                s3       1
					//   _AlphaTexture               s4       1
					//   _FullResolutionSource       s5       1
					//   _ScionCopiedFullResDepth    s6       1
					//
					
					    ps_3_0
					    def c4, 1, 0, 0.5, 9.99999975e-006
					    def c5, 0.5625, 0.0625, 0.1875, 0.349999994
					    def c6, -2, 1, 3, 0.25
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    dcl_2d s3
					    dcl_2d s4
					    dcl_2d s5
					    dcl_2d s6
					    mul r0.xy, c0, v0
					    frc r0.zw, r0.xyxy
					    add r0.xy, -r0.zwzw, r0
					    add r0.xy, r0, c4.z
					    mad r0.zw, r0.xyxy, -c1.xyxy, v0.xyxy
					    mul r1.xy, r0, c1
					    cmp r0.xy, -r0.zwzw, c4.y, c4.x
					    cmp r0.zw, r0, -c4.y, -c4.x
					    add r0.xy, r0.zwzw, r0
					    mad r0.xy, r0, c1, r1
					    mov r0.z, c4.y
					    texldl r2, r0.xyzz, s4
					    mov r2.w, r2.x
					    texldl r3, r0.xyzz, s3
					    mul r4, c4.xxyy, v0.xyxx
					    texldl r5, r4, s6
					    texldl r4, r4, s1
					    add r3.w, -r3.w, r5.x
					    mov r2.xyz, r3
					    add r3.x, r3_abs.w, c4.w
					    rcp r3.x, r3.x
					    mul r3.x, r3.x, c5.y
					    mul r2, r2, r3.x
					    mov r1.z, c4.y
					    texldl r6, r1.xyzz, s4
					    mov r6.w, r6.x
					    texldl r7, r1.xyzz, s3
					    add r3.y, r5.x, -r7.w
					    mov r6.xyz, r7
					    add r3.y, r3_abs.y, c4.w
					    rcp r3.y, r3.y
					    mul r3.z, r3.y, c5.x
					    mad r3.y, r3.y, c5.x, r3.x
					    mad r2, r6, r3.z, r2
					    mov r0.w, r1.y
					    texldl r6, r0.xwzz, s4
					    mov r6.w, r6.x
					    texldl r7, r0.xwzz, s3
					    texldl r8, r0.xwzz, s2
					    texldl r9, r0.xyzz, s2
					    mov r1.w, r0.y
					    mul r0.x, r3.x, r9.x
					    add r0.y, r5.x, -r7.w
					    mov r6.xyz, r7
					    add r0.y, r0_abs.y, c4.w
					    rcp r0.y, r0.y
					    mul r0.z, r0.y, c5.z
					    mad r0.y, r0.y, c5.z, r3.y
					    mad r2, r6, r0.z, r2
					    texldl r6, r1.xwzz, s4
					    mov r6.w, r6.x
					    texldl r7, r1.xwzz, s3
					    texldl r9, r1.xwzz, s2
					    texldl r1, r1.xyzz, s2
					    mad r0.x, r1.x, r3.z, r0.x
					    mad r0.x, r8.x, r0.z, r0.x
					    add r0.z, r5.x, -r7.w
					    mov r6.xyz, r7
					    rcp r0.w, r5.x
					    add r0.z, r0_abs.z, c4.w
					    rcp r0.z, r0.z
					    mul r1.x, r0.z, c5.z
					    mad r0.y, r0.z, c5.z, r0.y
					    rcp r0.y, r0.y
					    mad r2, r6, r1.x, r2
					    mad r0.x, r9.x, r1.x, r0.x
					    mul r0.x, r0.y, r0.x
					    mul r1.x, r0.y, r2.w
					    mov_sat r1.x, r1.x
					    mad r0.z, r1.x, c6.x, c6.z
					    mul r1.x, r1.x, r1.x
					    mul r0.z, r0.z, r1.x
					    texldl r1, c4.zzyy, s0
					    mad r0.w, r0.w, r1.y, r1.z
					    min r1.x, c2.x, r0_abs.w
					    mul r0.w, r1.x, c5.w
					    rsq r0.w, r0.w
					    rcp r0.w, r0.w
					    mad r1.x, r4.x, c6.w, -r0.w
					    mad_sat r0.z, r0.z, r1.x, r0.w
					    mul r0.x, r0.x, r0.z
					    mad r0.z, v0.y, c6.x, c6.y
					    mad r1.y, c3.x, r0.z, v0.y
					    mul r1.xzw, c4.xyyy, v0.x
					    texldl r1, r1, s5
					    mad r0.yzw, r2.xxyz, r0.y, -r1.xxyz
					    mad oC0.xyz, r0.x, r0.yzww, r1
					    mov oC0.w, c4.x
					
					// approximately 104 instruction slots used (32 texture, 72 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" "SC_DOF_MASK_ON" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _ScionResolutionParameters1;
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_3[7];
						vec4 _CoCParams2;
						vec4 unused_0_5[4];
						float _ScionForwardMSAAFix;
						vec4 unused_0_7[4];
					};
					uniform  sampler2D _ScionCopiedFullResDepth;
					uniform  sampler2D _TapsTexture;
					uniform  sampler2D _AlphaTexture;
					uniform  sampler2D _ExclusionMask;
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _FullResolutionSource;
					uniform  sampler2D _VirtualCameraTexture2;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					ivec2 u_xlati0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					float u_xlat7;
					float u_xlat8;
					float u_xlat9;
					vec2 u_xlat12;
					ivec2 u_xlati12;
					float u_xlat14;
					float u_xlat15;
					float u_xlat18;
					float u_xlat20;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD0.xy * _ScionResolutionParameters1.xy;
					    u_xlat0.xy = floor(u_xlat0.xy);
					    u_xlat0.xy = u_xlat0.xy + vec2(0.5, 0.5);
					    u_xlat12.xy = (-u_xlat0.xy) * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat1.zw = u_xlat0.xy * _ScionResolutionParameters2.xy;
					    u_xlati0.xy = ivec2(uvec2(lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat12.xyxx).xy) * 0xFFFFFFFFu);
					    u_xlati12.xy = ivec2(uvec2(lessThan(u_xlat12.xyxy, vec4(0.0, 0.0, 0.0, 0.0)).xy) * 0xFFFFFFFFu);
					    u_xlati0.xy = (-u_xlati0.xy) + u_xlati12.xy;
					    u_xlat0.xy = vec2(u_xlati0.xy);
					    u_xlat1.xy = u_xlat0.xy * _ScionResolutionParameters2.xy + u_xlat1.zw;
					    u_xlat0 = textureLod(_AlphaTexture, u_xlat1.xy, 0.0).yzwx;
					    u_xlat2 = textureLod(_TapsTexture, u_xlat1.xy, 0.0);
					    u_xlat0.xyz = u_xlat2.xyz;
					    u_xlat3 = textureLod(_ScionCopiedFullResDepth, vs_TEXCOORD0.xy, 0.0);
					    u_xlat2.x = (-u_xlat2.w) + u_xlat3.x;
					    u_xlat2.x = abs(u_xlat2.x) + 9.99999975e-06;
					    u_xlat2.x = 0.0625 / u_xlat2.x;
					    u_xlat0 = u_xlat0 * u_xlat2.xxxx;
					    u_xlat4 = textureLod(_AlphaTexture, u_xlat1.zw, 0.0).yzwx;
					    u_xlat5 = textureLod(_TapsTexture, u_xlat1.zw, 0.0);
					    u_xlat4.xyz = u_xlat5.xyz;
					    u_xlat8 = u_xlat3.x + (-u_xlat5.w);
					    u_xlat8 = abs(u_xlat8) + 9.99999975e-06;
					    u_xlat8 = 0.5625 / u_xlat8;
					    u_xlat0 = u_xlat4 * vec4(u_xlat8) + u_xlat0;
					    u_xlat4 = textureLod(_AlphaTexture, u_xlat1.xw, 0.0).yzwx;
					    u_xlat5 = textureLod(_TapsTexture, u_xlat1.xw, 0.0);
					    u_xlat4.xyz = u_xlat5.xyz;
					    u_xlat14 = u_xlat3.x + (-u_xlat5.w);
					    u_xlat14 = abs(u_xlat14) + 9.99999975e-06;
					    u_xlat14 = 0.1875 / u_xlat14;
					    u_xlat0 = u_xlat4 * vec4(u_xlat14) + u_xlat0;
					    u_xlat4 = textureLod(_AlphaTexture, u_xlat1.zy, 0.0).yzwx;
					    u_xlat5 = textureLod(_TapsTexture, u_xlat1.zy, 0.0);
					    u_xlat4.xyz = u_xlat5.xyz;
					    u_xlat20 = u_xlat3.x + (-u_xlat5.w);
					    u_xlat3.x = float(1.0) / u_xlat3.x;
					    u_xlat20 = abs(u_xlat20) + 9.99999975e-06;
					    u_xlat20 = 0.1875 / u_xlat20;
					    u_xlat0 = u_xlat4 * vec4(u_xlat20) + u_xlat0;
					    u_xlat9 = u_xlat2.x + u_xlat8;
					    u_xlat9 = u_xlat14 + u_xlat9;
					    u_xlat9 = u_xlat20 + u_xlat9;
					    u_xlat9 = float(1.0) / u_xlat9;
					    u_xlat4.x = u_xlat0.w * u_xlat9;
					    u_xlat4.x = u_xlat4.x;
					    u_xlat4.x = clamp(u_xlat4.x, 0.0, 1.0);
					    u_xlat18 = u_xlat4.x * -2.0 + 3.0;
					    u_xlat15 = u_xlat4.x * u_xlat4.x;
					    u_xlat18 = u_xlat18 * u_xlat15;
					    u_xlat4 = textureLod(_VirtualCameraTexture2, vec2(0.5, 0.5), 0.0);
					    u_xlat3.x = u_xlat3.x * u_xlat4.y + u_xlat4.z;
					    u_xlat3.x = min(abs(u_xlat3.x), _CoCParams2.x);
					    u_xlat3.x = u_xlat3.x * 0.349999994;
					    u_xlat3.x = sqrt(u_xlat3.x);
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat15 = u_xlat4.x * 0.25 + (-u_xlat3.x);
					    u_xlat18 = u_xlat18 * u_xlat15 + u_xlat3.x;
					    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
					    u_xlat4 = textureLod(_ExclusionMask, u_xlat1.xy, 0.0);
					    u_xlat2.x = u_xlat2.x * u_xlat4.x;
					    u_xlat4 = textureLod(_ExclusionMask, u_xlat1.zw, 0.0);
					    u_xlat2.x = u_xlat4.x * u_xlat8 + u_xlat2.x;
					    u_xlat4 = textureLod(_ExclusionMask, u_xlat1.xw, 0.0);
					    u_xlat1 = textureLod(_ExclusionMask, u_xlat1.zy, 0.0);
					    u_xlat7 = u_xlat4.x * u_xlat14 + u_xlat2.x;
					    u_xlat1.x = u_xlat1.x * u_xlat20 + u_xlat7;
					    u_xlat1.x = u_xlat9 * u_xlat1.x;
					    u_xlat18 = u_xlat18 * u_xlat1.x;
					    u_xlat1.x = vs_TEXCOORD0.y * -2.0 + 1.0;
					    u_xlat1.y = _ScionForwardMSAAFix * u_xlat1.x + vs_TEXCOORD0.y;
					    u_xlat1.x = vs_TEXCOORD0.x;
					    u_xlat1 = textureLod(_FullResolutionSource, u_xlat1.xy, 0.0);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat9) + (-u_xlat1.xyz);
					    SV_Target0.xyz = vec3(u_xlat18) * u_xlat0.xyz + u_xlat1.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _AlphaTexture;
					//   sampler2D _CameraDepthTexture;
					//   float4 _CoCParams1;
					//   float4 _CoCParams2;
					//   sampler2D _FullResolutionSource;
					//   float _ScionForwardMSAAFix;
					//   float4 _ScionResolutionParameters1;
					//   float4 _ScionResolutionParameters2;
					//   sampler2D _TapsTexture;
					//   sampler2D _TiledNeighbourhoodData;
					//   sampler2D _VirtualCameraTexture2;
					//   float4 _ZBufferParams;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ZBufferParams              c0       1
					//   _ScionResolutionParameters1 c1       1
					//   _ScionResolutionParameters2 c2       1
					//   _CoCParams1                 c3       1
					//   _CoCParams2                 c4       1
					//   _ScionForwardMSAAFix        c5       1
					//   _VirtualCameraTexture2      s0       1
					//   _TiledNeighbourhoodData     s1       1
					//   _TapsTexture                s2       1
					//   _AlphaTexture               s3       1
					//   _CameraDepthTexture         s4       1
					//   _FullResolutionSource       s5       1
					//
					
					    ps_3_0
					    def c6, 0.5, 0, 1, 9.99999975e-006
					    def c7, 0.5625, 0.0625, 0.1875, 0.349999994
					    def c8, -2, 1, 3, 0.25
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    dcl_2d s3
					    dcl_2d s4
					    dcl_2d s5
					    mul r0.xy, c1, v0
					    frc r0.zw, r0.xyxy
					    add r0.xy, -r0.zwzw, r0
					    add r0.xy, r0, c6.x
					    mad r0.zw, r0.xyxy, -c2.xyxy, v0.xyxy
					    mul r1.xy, r0, c2
					    cmp r0.xy, -r0.zwzw, c6.y, c6.z
					    cmp r0.zw, r0, -c6.y, -c6.z
					    add r0.xy, r0.zwzw, r0
					    mad r0.xy, r0, c2, r1
					    mov r0.z, c6.y
					    texldl r2, r0.xyzz, s3
					    mov r2.w, r2.x
					    texldl r3, r0.xyzz, s2
					    texld r4, v0, s4
					    mad r4.x, c0.z, r4.x, c0.w
					    rcp r4.x, r4.x
					    add r3.w, -r3.w, r4.x
					    mov r2.xyz, r3
					    add r3.x, r3_abs.w, c6.w
					    rcp r3.x, r3.x
					    mul r3.x, r3.x, c7.y
					    mul r2, r2, r3.x
					    mov r1.z, c6.y
					    texldl r5, r1.xyzz, s3
					    mov r5.w, r5.x
					    texldl r6, r1.xyzz, s2
					    add r3.y, r4.x, -r6.w
					    mov r5.xyz, r6
					    add r3.y, r3_abs.y, c6.w
					    rcp r3.y, r3.y
					    mul r3.z, r3.y, c7.x
					    mad r3.x, r3.y, c7.x, r3.x
					    mad r2, r5, r3.z, r2
					    mov r0.w, r1.y
					    texldl r5, r0.xwzz, s3
					    texldl r6, r0.xwzz, s2
					    mov r1.w, r0.y
					    mov r0.w, r5.x
					    mov r0.xyz, r6
					    add r1.y, r4.x, -r6.w
					    add r1.y, r1_abs.y, c6.w
					    rcp r1.y, r1.y
					    mul r3.y, r1.y, c7.z
					    mad r1.y, r1.y, c7.z, r3.x
					    mad r0, r0, r3.y, r2
					    texldl r2, r1.xwzz, s3
					    texldl r3, r1.xwzz, s2
					    mov r2.w, r2.x
					    mov r2.xyz, r3
					    add r1.x, -r3.w, r4.x
					    add r1.x, r1_abs.x, c6.w
					    rcp r1.x, r1.x
					    mul r1.z, r1.x, c7.z
					    mad r1.x, r1.x, c7.z, r1.y
					    rcp r1.x, r1.x
					    mad r0, r2, r1.z, r0
					    mul r2.x, r1.x, r0.w
					    mov_sat r2.x, r2.x
					    mad r0.w, r2.x, c8.x, c8.z
					    mul r1.y, r2.x, r2.x
					    mul r0.w, r0.w, r1.y
					    add r1.y, -r4.x, c3.z
					    max r2.x, r1.y, -c3.w
					    min r1.y, c3.w, r2.x
					    add r1.y, r1.y, r4.x
					    rcp r1.y, r1.y
					    texldl r2, c6.xxyy, s0
					    mad r1.y, r1.y, r2.y, r2.z
					    min r2.x, c4.x, r1_abs.y
					    mul r1.y, r2.x, c7.w
					    rsq r1.y, r1.y
					    rcp r1.y, r1.y
					    mul r2, c6.zzyy, v0.xyxx
					    texldl r2, r2, s1
					    mad r1.z, r2.x, c8.w, -r1.y
					    mad_sat r0.w, r0.w, r1.z, r1.y
					    mad r1.y, v0.y, c8.x, c8.y
					    mad r2.y, c5.x, r1.y, v0.y
					    mul r2.xzw, c6.zyyy, v0.x
					    texldl r2, r2, s5
					    mad r0.xyz, r0, r1.x, -r2
					    mad oC0.xyz, r0.w, r0, r2
					    mov oC0.w, c6.z
					
					// approximately 95 instruction slots used (23 texture, 72 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _ScionResolutionParameters1;
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_3[6];
						vec4 _CoCParams1;
						vec4 _CoCParams2;
						vec4 unused_0_6[4];
						float _ScionForwardMSAAFix;
						vec4 unused_0_8[4];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 unused_1_0[7];
						vec4 _ZBufferParams;
						vec4 unused_1_2;
					};
					uniform  sampler2D _CameraDepthTexture;
					uniform  sampler2D _TapsTexture;
					uniform  sampler2D _AlphaTexture;
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _FullResolutionSource;
					uniform  sampler2D _VirtualCameraTexture2;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					ivec2 u_xlati0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec3 u_xlat5;
					float u_xlat6;
					float u_xlat7;
					vec2 u_xlat10;
					ivec2 u_xlati10;
					float u_xlat12;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD0.xy * _ScionResolutionParameters1.xy;
					    u_xlat0.xy = floor(u_xlat0.xy);
					    u_xlat0.xy = u_xlat0.xy + vec2(0.5, 0.5);
					    u_xlat10.xy = (-u_xlat0.xy) * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat1.zw = u_xlat0.xy * _ScionResolutionParameters2.xy;
					    u_xlati0.xy = ivec2(uvec2(lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat10.xyxx).xy) * 0xFFFFFFFFu);
					    u_xlati10.xy = ivec2(uvec2(lessThan(u_xlat10.xyxy, vec4(0.0, 0.0, 0.0, 0.0)).xy) * 0xFFFFFFFFu);
					    u_xlati0.xy = (-u_xlati0.xy) + u_xlati10.xy;
					    u_xlat0.xy = vec2(u_xlati0.xy);
					    u_xlat1.xy = u_xlat0.xy * _ScionResolutionParameters2.xy + u_xlat1.zw;
					    u_xlat0 = textureLod(_AlphaTexture, u_xlat1.xy, 0.0).yzwx;
					    u_xlat2 = textureLod(_TapsTexture, u_xlat1.xy, 0.0);
					    u_xlat0.xyz = u_xlat2.xyz;
					    u_xlat3 = texture(_CameraDepthTexture, vs_TEXCOORD0.xy);
					    u_xlat2.x = _ZBufferParams.z * u_xlat3.x + _ZBufferParams.w;
					    u_xlat2.x = float(1.0) / u_xlat2.x;
					    u_xlat7 = (-u_xlat2.w) + u_xlat2.x;
					    u_xlat7 = abs(u_xlat7) + 9.99999975e-06;
					    u_xlat7 = 0.0625 / u_xlat7;
					    u_xlat0 = u_xlat0 * vec4(u_xlat7);
					    u_xlat3 = textureLod(_AlphaTexture, u_xlat1.zw, 0.0).yzwx;
					    u_xlat4 = textureLod(_TapsTexture, u_xlat1.zw, 0.0);
					    u_xlat12 = u_xlat2.x + (-u_xlat4.w);
					    u_xlat3.xyz = u_xlat4.xyz;
					    u_xlat12 = abs(u_xlat12) + 9.99999975e-06;
					    u_xlat12 = 0.5625 / u_xlat12;
					    u_xlat0 = u_xlat3 * vec4(u_xlat12) + u_xlat0;
					    u_xlat7 = u_xlat7 + u_xlat12;
					    u_xlat3 = textureLod(_AlphaTexture, u_xlat1.xw, 0.0).yzwx;
					    u_xlat4 = textureLod(_TapsTexture, u_xlat1.xw, 0.0);
					    u_xlat3.xyz = u_xlat4.xyz;
					    u_xlat1.x = u_xlat2.x + (-u_xlat4.w);
					    u_xlat1.x = abs(u_xlat1.x) + 9.99999975e-06;
					    u_xlat1.x = 0.1875 / u_xlat1.x;
					    u_xlat0 = u_xlat3 * u_xlat1.xxxx + u_xlat0;
					    u_xlat1.x = u_xlat1.x + u_xlat7;
					    u_xlat3 = textureLod(_AlphaTexture, u_xlat1.zy, 0.0).yzwx;
					    u_xlat4 = textureLod(_TapsTexture, u_xlat1.zy, 0.0);
					    u_xlat3.xyz = u_xlat4.xyz;
					    u_xlat6 = u_xlat2.x + (-u_xlat4.w);
					    u_xlat6 = abs(u_xlat6) + 9.99999975e-06;
					    u_xlat6 = 0.1875 / u_xlat6;
					    u_xlat0 = u_xlat3 * vec4(u_xlat6) + u_xlat0;
					    u_xlat1.x = u_xlat6 + u_xlat1.x;
					    u_xlat0 = u_xlat0.wxyz / u_xlat1.xxxx;
					    u_xlat0.x = u_xlat0.x;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat1.x = u_xlat0.x * -2.0 + 3.0;
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat1.x;
					    u_xlat1.x = (-u_xlat2.x) + _CoCParams1.z;
					    u_xlat1.x = max(u_xlat1.x, (-_CoCParams1.w));
					    u_xlat1.x = min(u_xlat1.x, _CoCParams1.w);
					    u_xlat1.x = u_xlat1.x + u_xlat2.x;
					    u_xlat1.x = float(1.0) / u_xlat1.x;
					    u_xlat2 = textureLod(_VirtualCameraTexture2, vec2(0.5, 0.5), 0.0);
					    u_xlat1.x = u_xlat1.x * u_xlat2.y + u_xlat2.z;
					    u_xlat1.x = min(abs(u_xlat1.x), _CoCParams2.x);
					    u_xlat1.x = u_xlat1.x * 0.349999994;
					    u_xlat1.x = sqrt(u_xlat1.x);
					    u_xlat2 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat6 = u_xlat2.x * 0.25 + (-u_xlat1.x);
					    u_xlat0.x = u_xlat0.x * u_xlat6 + u_xlat1.x;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat1.x = vs_TEXCOORD0.y * -2.0 + 1.0;
					    u_xlat1.y = _ScionForwardMSAAFix * u_xlat1.x + vs_TEXCOORD0.y;
					    u_xlat1.x = vs_TEXCOORD0.x;
					    u_xlat1 = textureLod(_FullResolutionSource, u_xlat1.xy, 0.0);
					    u_xlat5.xyz = u_xlat0.yzw + (-u_xlat1.xyz);
					    SV_Target0.xyz = u_xlat0.xxx * u_xlat5.xyz + u_xlat1.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" "SC_DOF_MASK_ON" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _AlphaTexture;
					//   float4 _CoCParams1;
					//   float4 _CoCParams2;
					//   sampler2D _ExclusionMask;
					//   sampler2D _FullResolutionSource;
					//   sampler2D _ScionCopiedFullResDepth;
					//   float _ScionForwardMSAAFix;
					//   float4 _ScionResolutionParameters1;
					//   float4 _ScionResolutionParameters2;
					//   sampler2D _TapsTexture;
					//   sampler2D _TiledNeighbourhoodData;
					//   sampler2D _VirtualCameraTexture2;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters1 c0       1
					//   _ScionResolutionParameters2 c1       1
					//   _CoCParams1                 c2       1
					//   _CoCParams2                 c3       1
					//   _ScionForwardMSAAFix        c4       1
					//   _VirtualCameraTexture2      s0       1
					//   _TiledNeighbourhoodData     s1       1
					//   _ExclusionMask              s2       1
					//   _TapsTexture                s3       1
					//   _AlphaTexture               s4       1
					//   _FullResolutionSource       s5       1
					//   _ScionCopiedFullResDepth    s6       1
					//
					
					    ps_3_0
					    def c5, 1, 0, 0.5, 9.99999975e-006
					    def c6, 0.5625, 0.0625, 0.1875, 0.349999994
					    def c7, -2, 1, 3, 0.25
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    dcl_2d s3
					    dcl_2d s4
					    dcl_2d s5
					    dcl_2d s6
					    mul r0.xy, c0, v0
					    frc r0.zw, r0.xyxy
					    add r0.xy, -r0.zwzw, r0
					    add r0.xy, r0, c5.z
					    mad r0.zw, r0.xyxy, -c1.xyxy, v0.xyxy
					    mul r1.xy, r0, c1
					    cmp r0.xy, -r0.zwzw, c5.y, c5.x
					    cmp r0.zw, r0, -c5.y, -c5.x
					    add r0.xy, r0.zwzw, r0
					    mad r0.xy, r0, c1, r1
					    mov r0.z, c5.y
					    texldl r2, r0.xyzz, s4
					    mov r2.w, r2.x
					    texldl r3, r0.xyzz, s3
					    mov r2.xyz, r3
					    mul r4, c5.xxyy, v0.xyxx
					    texldl r5, r4, s6
					    texldl r4, r4, s1
					    add r3.x, -r3.w, r5.x
					    add r3.x, r3_abs.x, c5.w
					    rcp r3.x, r3.x
					    mul r3.x, r3.x, c6.y
					    mul r2, r2, r3.x
					    mov r1.z, c5.y
					    texldl r6, r1.xyzz, s4
					    mov r6.w, r6.x
					    texldl r7, r1.xyzz, s3
					    add r3.y, r5.x, -r7.w
					    mov r6.xyz, r7
					    add r3.y, r3_abs.y, c5.w
					    rcp r3.y, r3.y
					    mul r3.z, r3.y, c6.x
					    mad r3.y, r3.y, c6.x, r3.x
					    mad r2, r6, r3.z, r2
					    mov r0.w, r1.y
					    texldl r6, r0.xwzz, s4
					    mov r6.w, r6.x
					    texldl r7, r0.xwzz, s3
					    texldl r8, r0.xwzz, s2
					    texldl r9, r0.xyzz, s2
					    mov r1.w, r0.y
					    mul r0.x, r3.x, r9.x
					    mov r6.xyz, r7
					    add r0.y, r5.x, -r7.w
					    add r0.y, r0_abs.y, c5.w
					    rcp r0.y, r0.y
					    mul r0.z, r0.y, c6.z
					    mad r0.y, r0.y, c6.z, r3.y
					    mad r2, r6, r0.z, r2
					    texldl r6, r1.xwzz, s4
					    mov r6.w, r6.x
					    texldl r7, r1.xwzz, s3
					    texldl r9, r1.xwzz, s2
					    texldl r1, r1.xyzz, s2
					    mad r0.x, r1.x, r3.z, r0.x
					    mad r0.x, r8.x, r0.z, r0.x
					    mov r6.xyz, r7
					    add r0.z, r5.x, -r7.w
					    add r0.z, r0_abs.z, c5.w
					    rcp r0.z, r0.z
					    mul r0.w, r0.z, c6.z
					    mad r0.y, r0.z, c6.z, r0.y
					    rcp r0.y, r0.y
					    mad r1, r6, r0.w, r2
					    mad r0.x, r9.x, r0.w, r0.x
					    mul r2.x, r0.y, r1.w
					    mov_sat r2.x, r2.x
					    mad r0.z, r2.x, c7.x, c7.z
					    mul r0.w, r2.x, r2.x
					    mul r0.xz, r0.yyww, r0
					    add r0.w, -r5.x, c2.z
					    max r1.w, r0.w, -c2.w
					    min r0.w, c2.w, r1.w
					    add r0.w, r0.w, r5.x
					    rcp r0.w, r0.w
					    texldl r2, c5.zzyy, s0
					    mad r0.w, r0.w, r2.y, r2.z
					    min r1.w, c3.x, r0_abs.w
					    mul r0.w, r1.w, c6.w
					    rsq r0.w, r0.w
					    rcp r0.w, r0.w
					    mad r1.w, r4.x, c7.w, -r0.w
					    mad_sat r0.z, r0.z, r1.w, r0.w
					    mul r0.x, r0.x, r0.z
					    mad r0.z, v0.y, c7.x, c7.y
					    mad r2.y, c4.x, r0.z, v0.y
					    mul r2.xzw, c5.xyyy, v0.x
					    texldl r2, r2, s5
					    mad r0.yzw, r1.xxyz, r0.y, -r2.xxyz
					    mad oC0.xyz, r0.x, r0.yzww, r2
					    mov oC0.w, c5.x
					
					// approximately 107 instruction slots used (32 texture, 75 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" "SC_DOF_MASK_ON" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _ScionResolutionParameters1;
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_3[6];
						vec4 _CoCParams1;
						vec4 _CoCParams2;
						vec4 unused_0_6[4];
						float _ScionForwardMSAAFix;
						vec4 unused_0_8[4];
					};
					uniform  sampler2D _ScionCopiedFullResDepth;
					uniform  sampler2D _TapsTexture;
					uniform  sampler2D _AlphaTexture;
					uniform  sampler2D _ExclusionMask;
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _FullResolutionSource;
					uniform  sampler2D _VirtualCameraTexture2;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					ivec2 u_xlati0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					float u_xlat7;
					float u_xlat8;
					float u_xlat9;
					vec2 u_xlat12;
					ivec2 u_xlati12;
					float u_xlat14;
					float u_xlat15;
					float u_xlat18;
					float u_xlat20;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD0.xy * _ScionResolutionParameters1.xy;
					    u_xlat0.xy = floor(u_xlat0.xy);
					    u_xlat0.xy = u_xlat0.xy + vec2(0.5, 0.5);
					    u_xlat12.xy = (-u_xlat0.xy) * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat1.zw = u_xlat0.xy * _ScionResolutionParameters2.xy;
					    u_xlati0.xy = ivec2(uvec2(lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat12.xyxx).xy) * 0xFFFFFFFFu);
					    u_xlati12.xy = ivec2(uvec2(lessThan(u_xlat12.xyxy, vec4(0.0, 0.0, 0.0, 0.0)).xy) * 0xFFFFFFFFu);
					    u_xlati0.xy = (-u_xlati0.xy) + u_xlati12.xy;
					    u_xlat0.xy = vec2(u_xlati0.xy);
					    u_xlat1.xy = u_xlat0.xy * _ScionResolutionParameters2.xy + u_xlat1.zw;
					    u_xlat0 = textureLod(_AlphaTexture, u_xlat1.xy, 0.0).yzwx;
					    u_xlat2 = textureLod(_TapsTexture, u_xlat1.xy, 0.0);
					    u_xlat0.xyz = u_xlat2.xyz;
					    u_xlat3 = textureLod(_ScionCopiedFullResDepth, vs_TEXCOORD0.xy, 0.0);
					    u_xlat2.x = (-u_xlat2.w) + u_xlat3.x;
					    u_xlat2.x = abs(u_xlat2.x) + 9.99999975e-06;
					    u_xlat2.x = 0.0625 / u_xlat2.x;
					    u_xlat0 = u_xlat0 * u_xlat2.xxxx;
					    u_xlat4 = textureLod(_AlphaTexture, u_xlat1.zw, 0.0).yzwx;
					    u_xlat5 = textureLod(_TapsTexture, u_xlat1.zw, 0.0);
					    u_xlat4.xyz = u_xlat5.xyz;
					    u_xlat8 = u_xlat3.x + (-u_xlat5.w);
					    u_xlat8 = abs(u_xlat8) + 9.99999975e-06;
					    u_xlat8 = 0.5625 / u_xlat8;
					    u_xlat0 = u_xlat4 * vec4(u_xlat8) + u_xlat0;
					    u_xlat4 = textureLod(_AlphaTexture, u_xlat1.xw, 0.0).yzwx;
					    u_xlat5 = textureLod(_TapsTexture, u_xlat1.xw, 0.0);
					    u_xlat4.xyz = u_xlat5.xyz;
					    u_xlat14 = u_xlat3.x + (-u_xlat5.w);
					    u_xlat14 = abs(u_xlat14) + 9.99999975e-06;
					    u_xlat14 = 0.1875 / u_xlat14;
					    u_xlat0 = u_xlat4 * vec4(u_xlat14) + u_xlat0;
					    u_xlat4 = textureLod(_AlphaTexture, u_xlat1.zy, 0.0).yzwx;
					    u_xlat5 = textureLod(_TapsTexture, u_xlat1.zy, 0.0);
					    u_xlat4.xyz = u_xlat5.xyz;
					    u_xlat20 = u_xlat3.x + (-u_xlat5.w);
					    u_xlat20 = abs(u_xlat20) + 9.99999975e-06;
					    u_xlat20 = 0.1875 / u_xlat20;
					    u_xlat0 = u_xlat4 * vec4(u_xlat20) + u_xlat0;
					    u_xlat9 = u_xlat2.x + u_xlat8;
					    u_xlat9 = u_xlat14 + u_xlat9;
					    u_xlat9 = u_xlat20 + u_xlat9;
					    u_xlat9 = float(1.0) / u_xlat9;
					    u_xlat4.x = u_xlat0.w * u_xlat9;
					    u_xlat4.x = u_xlat4.x;
					    u_xlat4.x = clamp(u_xlat4.x, 0.0, 1.0);
					    u_xlat18 = u_xlat4.x * -2.0 + 3.0;
					    u_xlat15 = u_xlat4.x * u_xlat4.x;
					    u_xlat18 = u_xlat18 * u_xlat15;
					    u_xlat15 = (-u_xlat3.x) + _CoCParams1.z;
					    u_xlat15 = max(u_xlat15, (-_CoCParams1.w));
					    u_xlat15 = min(u_xlat15, _CoCParams1.w);
					    u_xlat3.x = u_xlat15 + u_xlat3.x;
					    u_xlat3.x = float(1.0) / u_xlat3.x;
					    u_xlat4 = textureLod(_VirtualCameraTexture2, vec2(0.5, 0.5), 0.0);
					    u_xlat3.x = u_xlat3.x * u_xlat4.y + u_xlat4.z;
					    u_xlat3.x = min(abs(u_xlat3.x), _CoCParams2.x);
					    u_xlat3.x = u_xlat3.x * 0.349999994;
					    u_xlat3.x = sqrt(u_xlat3.x);
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat15 = u_xlat4.x * 0.25 + (-u_xlat3.x);
					    u_xlat18 = u_xlat18 * u_xlat15 + u_xlat3.x;
					    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
					    u_xlat4 = textureLod(_ExclusionMask, u_xlat1.xy, 0.0);
					    u_xlat2.x = u_xlat2.x * u_xlat4.x;
					    u_xlat4 = textureLod(_ExclusionMask, u_xlat1.zw, 0.0);
					    u_xlat2.x = u_xlat4.x * u_xlat8 + u_xlat2.x;
					    u_xlat4 = textureLod(_ExclusionMask, u_xlat1.xw, 0.0);
					    u_xlat1 = textureLod(_ExclusionMask, u_xlat1.zy, 0.0);
					    u_xlat7 = u_xlat4.x * u_xlat14 + u_xlat2.x;
					    u_xlat1.x = u_xlat1.x * u_xlat20 + u_xlat7;
					    u_xlat1.x = u_xlat9 * u_xlat1.x;
					    u_xlat18 = u_xlat18 * u_xlat1.x;
					    u_xlat1.x = vs_TEXCOORD0.y * -2.0 + 1.0;
					    u_xlat1.y = _ScionForwardMSAAFix * u_xlat1.x + vs_TEXCOORD0.y;
					    u_xlat1.x = vs_TEXCOORD0.x;
					    u_xlat1 = textureLod(_FullResolutionSource, u_xlat1.xy, 0.0);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat9) + (-u_xlat1.xyz);
					    SV_Target0.xyz = vec3(u_xlat18) * u_xlat0.xyz + u_xlat1.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _AlphaTexture;
					//   sampler2D _AvgCenterDepth;
					//   sampler2D _CameraDepthTexture;
					//   float4 _CoCParams2;
					//   sampler2D _FullResolutionSource;
					//   float _ScionForwardMSAAFix;
					//   float4 _ScionResolutionParameters1;
					//   float4 _ScionResolutionParameters2;
					//   sampler2D _TapsTexture;
					//   sampler2D _TiledNeighbourhoodData;
					//   float4 _VirtualCameraParams2;
					//   sampler2D _VirtualCameraTexture1;
					//   float4 _ZBufferParams;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ZBufferParams              c0       1
					//   _ScionResolutionParameters1 c1       1
					//   _ScionResolutionParameters2 c2       1
					//   _VirtualCameraParams2       c3       1
					//   _CoCParams2                 c4       1
					//   _ScionForwardMSAAFix        c5       1
					//   _VirtualCameraTexture1      s0       1
					//   _TiledNeighbourhoodData     s1       1
					//   _AvgCenterDepth             s2       1
					//   _TapsTexture                s3       1
					//   _AlphaTexture               s4       1
					//   _CameraDepthTexture         s5       1
					//   _FullResolutionSource       s6       1
					//
					
					    ps_3_0
					    def c6, 0.5, 0, 1, 9.99999975e-006
					    def c7, 0.5625, 0.0625, 0.1875, 0.349999994
					    def c8, -2, 1, 3, 0.25
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    dcl_2d s3
					    dcl_2d s4
					    dcl_2d s5
					    dcl_2d s6
					    mul r0.xy, c1, v0
					    frc r0.zw, r0.xyxy
					    add r0.xy, -r0.zwzw, r0
					    add r0.xy, r0, c6.x
					    mad r0.zw, r0.xyxy, -c2.xyxy, v0.xyxy
					    mul r1.xy, r0, c2
					    cmp r0.xy, -r0.zwzw, c6.y, c6.z
					    cmp r0.zw, r0, -c6.y, -c6.z
					    add r0.xy, r0.zwzw, r0
					    mad r0.xy, r0, c2, r1
					    mov r0.z, c6.y
					    texldl r2, r0.xyzz, s4
					    mov r2.w, r2.x
					    texldl r3, r0.xyzz, s3
					    texld r4, v0, s5
					    mad r4.x, c0.z, r4.x, c0.w
					    rcp r4.y, r4.x
					    add r3.w, -r3.w, r4.y
					    mov r2.xyz, r3
					    add r3.x, r3_abs.w, c6.w
					    rcp r3.x, r3.x
					    mul r3.x, r3.x, c7.y
					    mul r2, r2, r3.x
					    mov r1.z, c6.y
					    texldl r5, r1.xyzz, s3
					    add r3.y, r4.y, -r5.w
					    add r3.y, r3_abs.y, c6.w
					    rcp r3.y, r3.y
					    mul r3.z, r3.y, c7.x
					    mad r3.x, r3.y, c7.x, r3.x
					    texldl r6, r1.xyzz, s4
					    mov r5.w, r6.x
					    mad r2, r5, r3.z, r2
					    mov r0.w, r1.y
					    texldl r5, r0.xwzz, s4
					    texldl r6, r0.xwzz, s3
					    mov r1.w, r0.y
					    mov r0.w, r5.x
					    add r1.y, r4.y, -r6.w
					    mov r0.xyz, r6
					    add r1.y, r1_abs.y, c6.w
					    rcp r1.y, r1.y
					    mul r3.y, r1.y, c7.z
					    mad r1.y, r1.y, c7.z, r3.x
					    mad r0, r0, r3.y, r2
					    texldl r2, r1.xwzz, s4
					    texldl r3, r1.xwzz, s3
					    mov r2.w, r2.x
					    add r1.x, -r3.w, r4.y
					    mov r2.xyz, r3
					    add r1.x, r1_abs.x, c6.w
					    rcp r1.x, r1.x
					    mul r1.z, r1.x, c7.z
					    mad r1.x, r1.x, c7.z, r1.y
					    rcp r1.x, r1.x
					    mad r0, r2, r1.z, r0
					    mul r2.x, r1.x, r0.w
					    mov_sat r2.x, r2.x
					    mad r0.w, r2.x, c8.x, c8.z
					    mul r1.y, r2.x, r2.x
					    mul r0.w, r0.w, r1.y
					    texldl r2, c6.xxyy, s0
					    rcp r1.y, r2.w
					    mul r1.z, c3.y, c3.y
					    mul r1.y, r1.y, r1.z
					    texldl r2, c6.xxyy, s2
					    mul r1.z, r1.y, r2.x
					    add r1.w, r2.x, -c3.y
					    rcp r1.w, r1.w
					    mul r2.x, r1.w, r1.z
					    mul r2.y, r1.w, -r1.y
					    mul r1.yz, r2.xxyw, c3.w
					    mad r1.y, r4.x, r1.y, r1.z
					    min r2.x, c4.x, r1_abs.y
					    mul r1.y, r2.x, c7.w
					    rsq r1.y, r1.y
					    rcp r1.y, r1.y
					    mul r2, c6.zzyy, v0.xyxx
					    texldl r2, r2, s1
					    mad r1.z, r2.x, c8.w, -r1.y
					    mad_sat r0.w, r0.w, r1.z, r1.y
					    mad r1.y, v0.y, c8.x, c8.y
					    mad r2.y, c5.x, r1.y, v0.y
					    mul r2.xzw, c6.zyyy, v0.x
					    texldl r2, r2, s6
					    mad r0.xyz, r0, r1.x, -r2
					    mad oC0.xyz, r0.w, r0, r2
					    mov oC0.w, c6.z
					
					// approximately 100 instruction slots used (25 texture, 75 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _ScionResolutionParameters1;
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_3[4];
						vec4 _VirtualCameraParams2;
						vec4 unused_0_5[2];
						vec4 _CoCParams2;
						vec4 unused_0_7[4];
						float _ScionForwardMSAAFix;
						vec4 unused_0_9[4];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 unused_1_0[7];
						vec4 _ZBufferParams;
						vec4 unused_1_2;
					};
					uniform  sampler2D _CameraDepthTexture;
					uniform  sampler2D _TapsTexture;
					uniform  sampler2D _AlphaTexture;
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _FullResolutionSource;
					uniform  sampler2D _AvgCenterDepth;
					uniform  sampler2D _VirtualCameraTexture1;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					ivec2 u_xlati0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec3 u_xlat6;
					float u_xlat7;
					float u_xlat8;
					float u_xlat9;
					vec2 u_xlat12;
					ivec2 u_xlati12;
					float u_xlat13;
					float u_xlat20;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD0.xy * _ScionResolutionParameters1.xy;
					    u_xlat0.xy = floor(u_xlat0.xy);
					    u_xlat0.xy = u_xlat0.xy + vec2(0.5, 0.5);
					    u_xlat12.xy = (-u_xlat0.xy) * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat1.zw = u_xlat0.xy * _ScionResolutionParameters2.xy;
					    u_xlati0.xy = ivec2(uvec2(lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat12.xyxx).xy) * 0xFFFFFFFFu);
					    u_xlati12.xy = ivec2(uvec2(lessThan(u_xlat12.xyxy, vec4(0.0, 0.0, 0.0, 0.0)).xy) * 0xFFFFFFFFu);
					    u_xlati0.xy = (-u_xlati0.xy) + u_xlati12.xy;
					    u_xlat0.xy = vec2(u_xlati0.xy);
					    u_xlat1.xy = u_xlat0.xy * _ScionResolutionParameters2.xy + u_xlat1.zw;
					    u_xlat0 = textureLod(_AlphaTexture, u_xlat1.xy, 0.0).yzwx;
					    u_xlat2 = textureLod(_TapsTexture, u_xlat1.xy, 0.0);
					    u_xlat3 = texture(_CameraDepthTexture, vs_TEXCOORD0.xy);
					    u_xlat3.x = _ZBufferParams.z * u_xlat3.x + _ZBufferParams.w;
					    u_xlat9 = float(1.0) / u_xlat3.x;
					    u_xlat20 = (-u_xlat2.w) + u_xlat9;
					    u_xlat0.xyz = u_xlat2.xyz;
					    u_xlat2.x = abs(u_xlat20) + 9.99999975e-06;
					    u_xlat2.x = 0.0625 / u_xlat2.x;
					    u_xlat0 = u_xlat0 * u_xlat2.xxxx;
					    u_xlat4 = textureLod(_AlphaTexture, u_xlat1.zw, 0.0).yzwx;
					    u_xlat5 = textureLod(_TapsTexture, u_xlat1.zw, 0.0);
					    u_xlat8 = u_xlat9 + (-u_xlat5.w);
					    u_xlat4.xyz = u_xlat5.xyz;
					    u_xlat8 = abs(u_xlat8) + 9.99999975e-06;
					    u_xlat8 = 0.5625 / u_xlat8;
					    u_xlat0 = u_xlat4 * vec4(u_xlat8) + u_xlat0;
					    u_xlat2.x = u_xlat2.x + u_xlat8;
					    u_xlat4 = textureLod(_AlphaTexture, u_xlat1.xw, 0.0).yzwx;
					    u_xlat5 = textureLod(_TapsTexture, u_xlat1.xw, 0.0);
					    u_xlat4.xyz = u_xlat5.xyz;
					    u_xlat1.x = u_xlat9 + (-u_xlat5.w);
					    u_xlat1.x = abs(u_xlat1.x) + 9.99999975e-06;
					    u_xlat1.x = 0.1875 / u_xlat1.x;
					    u_xlat0 = u_xlat4 * u_xlat1.xxxx + u_xlat0;
					    u_xlat1.x = u_xlat1.x + u_xlat2.x;
					    u_xlat2 = textureLod(_AlphaTexture, u_xlat1.zy, 0.0).yzwx;
					    u_xlat4 = textureLod(_TapsTexture, u_xlat1.zy, 0.0);
					    u_xlat2.xyz = u_xlat4.xyz;
					    u_xlat7 = u_xlat9 + (-u_xlat4.w);
					    u_xlat7 = abs(u_xlat7) + 9.99999975e-06;
					    u_xlat7 = 0.1875 / u_xlat7;
					    u_xlat0 = u_xlat2 * vec4(u_xlat7) + u_xlat0;
					    u_xlat1.x = u_xlat7 + u_xlat1.x;
					    u_xlat0 = u_xlat0.wxyz / u_xlat1.xxxx;
					    u_xlat0.x = u_xlat0.x;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat1.x = u_xlat0.x * -2.0 + 3.0;
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat1.x;
					    u_xlat1 = textureLod(_VirtualCameraTexture1, vec2(0.5, 0.5), 0.0);
					    u_xlat1.x = _VirtualCameraParams2.y / u_xlat1.w;
					    u_xlat1.x = u_xlat1.x * _VirtualCameraParams2.y;
					    u_xlat2 = textureLod(_AvgCenterDepth, vec2(0.5, 0.5), 0.0);
					    u_xlat7 = u_xlat1.x * u_xlat2.x;
					    u_xlat13 = u_xlat2.x + (-_VirtualCameraParams2.y);
					    u_xlat13 = float(1.0) / u_xlat13;
					    u_xlat2.x = u_xlat13 * u_xlat7;
					    u_xlat2.y = u_xlat13 * (-u_xlat1.x);
					    u_xlat1.xy = u_xlat2.xy * _VirtualCameraParams2.ww;
					    u_xlat1.x = u_xlat3.x * u_xlat1.x + u_xlat1.y;
					    u_xlat1.x = min(abs(u_xlat1.x), _CoCParams2.x);
					    u_xlat1.x = u_xlat1.x * 0.349999994;
					    u_xlat1.x = sqrt(u_xlat1.x);
					    u_xlat2 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat7 = u_xlat2.x * 0.25 + (-u_xlat1.x);
					    u_xlat0.x = u_xlat0.x * u_xlat7 + u_xlat1.x;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat1.x = vs_TEXCOORD0.y * -2.0 + 1.0;
					    u_xlat1.y = _ScionForwardMSAAFix * u_xlat1.x + vs_TEXCOORD0.y;
					    u_xlat1.x = vs_TEXCOORD0.x;
					    u_xlat1 = textureLod(_FullResolutionSource, u_xlat1.xy, 0.0);
					    u_xlat6.xyz = u_xlat0.yzw + (-u_xlat1.xyz);
					    SV_Target0.xyz = u_xlat0.xxx * u_xlat6.xyz + u_xlat1.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" "SC_DOF_MASK_ON" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _AlphaTexture;
					//   sampler2D _AvgCenterDepth;
					//   float4 _CoCParams2;
					//   sampler2D _ExclusionMask;
					//   sampler2D _FullResolutionSource;
					//   sampler2D _ScionCopiedFullResDepth;
					//   float _ScionForwardMSAAFix;
					//   float4 _ScionResolutionParameters1;
					//   float4 _ScionResolutionParameters2;
					//   sampler2D _TapsTexture;
					//   sampler2D _TiledNeighbourhoodData;
					//   float4 _VirtualCameraParams2;
					//   sampler2D _VirtualCameraTexture1;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters1 c0       1
					//   _ScionResolutionParameters2 c1       1
					//   _VirtualCameraParams2       c2       1
					//   _CoCParams2                 c3       1
					//   _ScionForwardMSAAFix        c4       1
					//   _VirtualCameraTexture1      s0       1
					//   _TiledNeighbourhoodData     s1       1
					//   _ExclusionMask              s2       1
					//   _AvgCenterDepth             s3       1
					//   _TapsTexture                s4       1
					//   _AlphaTexture               s5       1
					//   _FullResolutionSource       s6       1
					//   _ScionCopiedFullResDepth    s7       1
					//
					
					    ps_3_0
					    def c5, 1, 0, 0.5, 9.99999975e-006
					    def c6, 0.5625, 0.0625, 0.1875, 0.349999994
					    def c7, -2, 1, 3, 0.25
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    dcl_2d s3
					    dcl_2d s4
					    dcl_2d s5
					    dcl_2d s6
					    dcl_2d s7
					    texldl r0, c5.zzyy, s0
					    rcp r0.x, r0.w
					    mul r0.y, c2.y, c2.y
					    mul r0.x, r0.x, r0.y
					    texldl r1, c5.zzyy, s3
					    mul r0.y, r0.x, r1.x
					    add r0.z, r1.x, -c2.y
					    rcp r0.z, r0.z
					    mul r1.x, r0.z, r0.y
					    mul r1.y, r0.z, -r0.x
					    mul r0.xy, r1, c2.w
					    mul r1, c5.xxyy, v0.xyxx
					    texldl r2, r1, s7
					    texldl r1, r1, s1
					    rcp r0.z, r2.x
					    mad r0.x, r0.z, r0.x, r0.y
					    min r1.y, c3.x, r0_abs.x
					    mul r0.x, r1.y, c6.w
					    rsq r0.x, r0.x
					    rcp r0.x, r0.x
					    mad r0.y, r1.x, c7.w, -r0.x
					    mul r0.zw, c0.xyxy, v0.xyxy
					    frc r1.xy, r0.zwzw
					    add r0.zw, r0, -r1.xyxy
					    add r0.zw, r0, c5.z
					    mad r1.xy, r0.zwzw, -c1, v0
					    mul r3.xy, r0.zwzw, c1
					    cmp r0.zw, -r1.xyxy, c5.y, c5.x
					    cmp r1.xy, r1, -c5.y, -c5.x
					    add r0.zw, r0, r1.xyxy
					    mad r1.xy, r0.zwzw, c1, r3
					    mov r1.z, c5.y
					    texldl r4, r1.xyzz, s4
					    add r0.z, r2.x, -r4.w
					    add r0.z, r0_abs.z, c5.w
					    rcp r0.z, r0.z
					    mul r0.z, r0.z, c6.y
					    texldl r5, r1.xyzz, s5
					    mov r4.w, r5.x
					    mul r4, r0.z, r4
					    mov r3.z, c5.y
					    texldl r5, r3.xyzz, s4
					    add r0.w, r2.x, -r5.w
					    add r0.w, r0_abs.w, c5.w
					    rcp r0.w, r0.w
					    mul r2.y, r0.w, c6.x
					    mad r0.w, r0.w, c6.x, r0.z
					    texldl r6, r3.xyzz, s5
					    mov r5.w, r6.x
					    mad r4, r5, r2.y, r4
					    mov r1.w, r3.y
					    texldl r5, r1.xwzz, s4
					    add r2.z, r2.x, -r5.w
					    add r2.z, r2_abs.z, c5.w
					    rcp r2.z, r2.z
					    mul r2.w, r2.z, c6.z
					    mad r0.w, r2.z, c6.z, r0.w
					    texldl r6, r1.xwzz, s5
					    texldl r7, r1.xwzz, s2
					    texldl r8, r1.xyzz, s2
					    mov r3.w, r1.y
					    mul r0.z, r0.z, r8.x
					    mov r5.w, r6.x
					    mad r1, r5, r2.w, r4
					    texldl r4, r3.xwzz, s4
					    add r2.x, r2.x, -r4.w
					    add r2.x, r2_abs.x, c5.w
					    rcp r2.x, r2.x
					    mul r2.z, r2.x, c6.z
					    mad r0.w, r2.x, c6.z, r0.w
					    rcp r0.w, r0.w
					    texldl r5, r3.xwzz, s5
					    texldl r6, r3.xwzz, s2
					    texldl r3, r3.xyzz, s2
					    mad r0.z, r3.x, r2.y, r0.z
					    mad r0.z, r7.x, r2.w, r0.z
					    mad r0.z, r6.x, r2.z, r0.z
					    mul r0.z, r0.w, r0.z
					    mov r4.w, r5.x
					    mad r1, r4, r2.z, r1
					    mul r2.x, r0.w, r1.w
					    mov_sat r2.x, r2.x
					    mad r1.w, r2.x, c7.x, c7.z
					    mul r2.x, r2.x, r2.x
					    mul r1.w, r1.w, r2.x
					    mad_sat r0.x, r1.w, r0.y, r0.x
					    mul r0.x, r0.z, r0.x
					    mad r0.y, v0.y, c7.x, c7.y
					    mad r2.y, c4.x, r0.y, v0.y
					    mul r2.xzw, c5.xyyy, v0.x
					    texldl r2, r2, s6
					    mad r0.yzw, r1.xxyz, r0.w, -r2.xxyz
					    mad oC0.xyz, r0.x, r0.yzww, r2
					    mov oC0.w, c5.x
					
					// approximately 111 instruction slots used (34 texture, 77 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" "SC_DOF_MASK_ON" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _ScionResolutionParameters1;
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_3[4];
						vec4 _VirtualCameraParams2;
						vec4 unused_0_5[2];
						vec4 _CoCParams2;
						vec4 unused_0_7[4];
						float _ScionForwardMSAAFix;
						vec4 unused_0_9[4];
					};
					uniform  sampler2D _ScionCopiedFullResDepth;
					uniform  sampler2D _TapsTexture;
					uniform  sampler2D _AlphaTexture;
					uniform  sampler2D _ExclusionMask;
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _FullResolutionSource;
					uniform  sampler2D _AvgCenterDepth;
					uniform  sampler2D _VirtualCameraTexture1;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					ivec2 u_xlati0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					float u_xlat7;
					float u_xlat8;
					float u_xlat9;
					vec2 u_xlat12;
					ivec2 u_xlati12;
					float u_xlat14;
					vec2 u_xlat15;
					float u_xlat18;
					float u_xlat20;
					float u_xlat21;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD0.xy * _ScionResolutionParameters1.xy;
					    u_xlat0.xy = floor(u_xlat0.xy);
					    u_xlat0.xy = u_xlat0.xy + vec2(0.5, 0.5);
					    u_xlat12.xy = (-u_xlat0.xy) * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat1.zw = u_xlat0.xy * _ScionResolutionParameters2.xy;
					    u_xlati0.xy = ivec2(uvec2(lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat12.xyxx).xy) * 0xFFFFFFFFu);
					    u_xlati12.xy = ivec2(uvec2(lessThan(u_xlat12.xyxy, vec4(0.0, 0.0, 0.0, 0.0)).xy) * 0xFFFFFFFFu);
					    u_xlati0.xy = (-u_xlati0.xy) + u_xlati12.xy;
					    u_xlat0.xy = vec2(u_xlati0.xy);
					    u_xlat1.xy = u_xlat0.xy * _ScionResolutionParameters2.xy + u_xlat1.zw;
					    u_xlat0 = textureLod(_AlphaTexture, u_xlat1.xy, 0.0).yzwx;
					    u_xlat2 = textureLod(_TapsTexture, u_xlat1.xy, 0.0);
					    u_xlat0.xyz = u_xlat2.xyz;
					    u_xlat3 = textureLod(_ScionCopiedFullResDepth, vs_TEXCOORD0.xy, 0.0);
					    u_xlat2.x = (-u_xlat2.w) + u_xlat3.x;
					    u_xlat2.x = abs(u_xlat2.x) + 9.99999975e-06;
					    u_xlat2.x = 0.0625 / u_xlat2.x;
					    u_xlat0 = u_xlat0 * u_xlat2.xxxx;
					    u_xlat4 = textureLod(_AlphaTexture, u_xlat1.zw, 0.0).yzwx;
					    u_xlat5 = textureLod(_TapsTexture, u_xlat1.zw, 0.0);
					    u_xlat4.xyz = u_xlat5.xyz;
					    u_xlat8 = u_xlat3.x + (-u_xlat5.w);
					    u_xlat8 = abs(u_xlat8) + 9.99999975e-06;
					    u_xlat8 = 0.5625 / u_xlat8;
					    u_xlat0 = u_xlat4 * vec4(u_xlat8) + u_xlat0;
					    u_xlat4 = textureLod(_AlphaTexture, u_xlat1.xw, 0.0).yzwx;
					    u_xlat5 = textureLod(_TapsTexture, u_xlat1.xw, 0.0);
					    u_xlat4.xyz = u_xlat5.xyz;
					    u_xlat14 = u_xlat3.x + (-u_xlat5.w);
					    u_xlat14 = abs(u_xlat14) + 9.99999975e-06;
					    u_xlat14 = 0.1875 / u_xlat14;
					    u_xlat0 = u_xlat4 * vec4(u_xlat14) + u_xlat0;
					    u_xlat4 = textureLod(_AlphaTexture, u_xlat1.zy, 0.0).yzwx;
					    u_xlat5 = textureLod(_TapsTexture, u_xlat1.zy, 0.0);
					    u_xlat4.xyz = u_xlat5.xyz;
					    u_xlat20 = u_xlat3.x + (-u_xlat5.w);
					    u_xlat3.x = float(1.0) / u_xlat3.x;
					    u_xlat20 = abs(u_xlat20) + 9.99999975e-06;
					    u_xlat20 = 0.1875 / u_xlat20;
					    u_xlat0 = u_xlat4 * vec4(u_xlat20) + u_xlat0;
					    u_xlat9 = u_xlat2.x + u_xlat8;
					    u_xlat9 = u_xlat14 + u_xlat9;
					    u_xlat9 = u_xlat20 + u_xlat9;
					    u_xlat9 = float(1.0) / u_xlat9;
					    u_xlat4.x = u_xlat0.w * u_xlat9;
					    u_xlat4.x = u_xlat4.x;
					    u_xlat4.x = clamp(u_xlat4.x, 0.0, 1.0);
					    u_xlat18 = u_xlat4.x * -2.0 + 3.0;
					    u_xlat15.x = u_xlat4.x * u_xlat4.x;
					    u_xlat18 = u_xlat18 * u_xlat15.x;
					    u_xlat4 = textureLod(_VirtualCameraTexture1, vec2(0.5, 0.5), 0.0);
					    u_xlat15.x = _VirtualCameraParams2.y / u_xlat4.w;
					    u_xlat15.x = u_xlat15.x * _VirtualCameraParams2.y;
					    u_xlat4 = textureLod(_AvgCenterDepth, vec2(0.5, 0.5), 0.0);
					    u_xlat21 = u_xlat15.x * u_xlat4.x;
					    u_xlat4.x = u_xlat4.x + (-_VirtualCameraParams2.y);
					    u_xlat4.x = float(1.0) / u_xlat4.x;
					    u_xlat5.x = u_xlat21 * u_xlat4.x;
					    u_xlat5.y = (-u_xlat15.x) * u_xlat4.x;
					    u_xlat15.xy = u_xlat5.xy * _VirtualCameraParams2.ww;
					    u_xlat3.x = u_xlat3.x * u_xlat15.x + u_xlat15.y;
					    u_xlat3.x = min(abs(u_xlat3.x), _CoCParams2.x);
					    u_xlat3.x = u_xlat3.x * 0.349999994;
					    u_xlat3.x = sqrt(u_xlat3.x);
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat15.x = u_xlat4.x * 0.25 + (-u_xlat3.x);
					    u_xlat18 = u_xlat18 * u_xlat15.x + u_xlat3.x;
					    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
					    u_xlat4 = textureLod(_ExclusionMask, u_xlat1.xy, 0.0);
					    u_xlat2.x = u_xlat2.x * u_xlat4.x;
					    u_xlat4 = textureLod(_ExclusionMask, u_xlat1.zw, 0.0);
					    u_xlat2.x = u_xlat4.x * u_xlat8 + u_xlat2.x;
					    u_xlat4 = textureLod(_ExclusionMask, u_xlat1.xw, 0.0);
					    u_xlat1 = textureLod(_ExclusionMask, u_xlat1.zy, 0.0);
					    u_xlat7 = u_xlat4.x * u_xlat14 + u_xlat2.x;
					    u_xlat1.x = u_xlat1.x * u_xlat20 + u_xlat7;
					    u_xlat1.x = u_xlat9 * u_xlat1.x;
					    u_xlat18 = u_xlat18 * u_xlat1.x;
					    u_xlat1.x = vs_TEXCOORD0.y * -2.0 + 1.0;
					    u_xlat1.y = _ScionForwardMSAAFix * u_xlat1.x + vs_TEXCOORD0.y;
					    u_xlat1.x = vs_TEXCOORD0.x;
					    u_xlat1 = textureLod(_FullResolutionSource, u_xlat1.xy, 0.0);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat9) + (-u_xlat1.xyz);
					    SV_Target0.xyz = vec3(u_xlat18) * u_xlat0.xyz + u_xlat1.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _AlphaTexture;
					//   sampler2D _CameraDepthTexture;
					//   float4 _CoCParams1;
					//   float4 _CoCParams2;
					//   sampler2D _FullResolutionSource;
					//   float _ScionForwardMSAAFix;
					//   float4 _ScionResolutionParameters1;
					//   float4 _ScionResolutionParameters2;
					//   sampler2D _TapsTexture;
					//   sampler2D _TiledNeighbourhoodData;
					//   float4 _ZBufferParams;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ZBufferParams              c0       1
					//   _ScionResolutionParameters1 c1       1
					//   _ScionResolutionParameters2 c2       1
					//   _CoCParams1                 c3       1
					//   _CoCParams2                 c4       1
					//   _ScionForwardMSAAFix        c5       1
					//   _TiledNeighbourhoodData     s0       1
					//   _TapsTexture                s1       1
					//   _AlphaTexture               s2       1
					//   _CameraDepthTexture         s3       1
					//   _FullResolutionSource       s4       1
					//
					
					    ps_3_0
					    def c6, 0.5, 0, 1, 9.99999975e-006
					    def c7, 0.5625, 0.0625, 0.1875, 0.349999994
					    def c8, -2, 1, 3, 0.25
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    dcl_2d s3
					    dcl_2d s4
					    mul r0.xy, c1, v0
					    frc r0.zw, r0.xyxy
					    add r0.xy, -r0.zwzw, r0
					    add r0.xy, r0, c6.x
					    mad r0.zw, r0.xyxy, -c2.xyxy, v0.xyxy
					    mul r1.xy, r0, c2
					    cmp r0.xy, -r0.zwzw, c6.y, c6.z
					    cmp r0.zw, r0, -c6.y, -c6.z
					    add r0.xy, r0.zwzw, r0
					    mad r0.xy, r0, c2, r1
					    mov r0.z, c6.y
					    texldl r2, r0.xyzz, s2
					    mov r2.w, r2.x
					    texldl r3, r0.xyzz, s1
					    texld r4, v0, s3
					    mad r4.x, c0.z, r4.x, c0.w
					    rcp r4.y, r4.x
					    mad r4.x, r4.x, c3.x, c3.y
					    min r5.x, c4.x, r4_abs.x
					    mul r4.x, r5.x, c7.w
					    rsq r4.x, r4.x
					    rcp r4.x, r4.x
					    add r3.w, -r3.w, r4.y
					    mov r2.xyz, r3
					    add r3.x, r3_abs.w, c6.w
					    rcp r3.x, r3.x
					    mul r3.x, r3.x, c7.y
					    mul r2, r2, r3.x
					    mov r1.z, c6.y
					    texldl r5, r1.xyzz, s1
					    add r3.y, r4.y, -r5.w
					    add r3.y, r3_abs.y, c6.w
					    rcp r3.y, r3.y
					    mul r3.z, r3.y, c7.x
					    mad r3.x, r3.y, c7.x, r3.x
					    texldl r6, r1.xyzz, s2
					    mov r5.w, r6.x
					    mad r2, r5, r3.z, r2
					    mov r0.w, r1.y
					    texldl r5, r0.xwzz, s2
					    texldl r6, r0.xwzz, s1
					    mov r1.w, r0.y
					    mov r0.w, r5.x
					    add r1.y, r4.y, -r6.w
					    mov r0.xyz, r6
					    add r1.y, r1_abs.y, c6.w
					    rcp r1.y, r1.y
					    mul r3.y, r1.y, c7.z
					    mad r1.y, r1.y, c7.z, r3.x
					    mad r0, r0, r3.y, r2
					    texldl r2, r1.xwzz, s2
					    texldl r3, r1.xwzz, s1
					    mov r2.w, r2.x
					    add r1.x, -r3.w, r4.y
					    mov r2.xyz, r3
					    add r1.x, r1_abs.x, c6.w
					    rcp r1.x, r1.x
					    mul r1.z, r1.x, c7.z
					    mad r1.x, r1.x, c7.z, r1.y
					    rcp r1.x, r1.x
					    mad r0, r2, r1.z, r0
					    mul r2.x, r1.x, r0.w
					    mov_sat r2.x, r2.x
					    mad r0.w, r2.x, c8.x, c8.z
					    mul r1.y, r2.x, r2.x
					    mul r0.w, r0.w, r1.y
					    mul r2, c6.zzyy, v0.xyxx
					    texldl r2, r2, s0
					    mad r1.y, r2.x, c8.w, -r4.x
					    mad_sat r0.w, r0.w, r1.y, r4.x
					    mad r1.y, v0.y, c8.x, c8.y
					    mad r2.y, c5.x, r1.y, v0.y
					    mul r2.xzw, c6.zyyy, v0.x
					    texldl r2, r2, s4
					    mad r0.xyz, r0, r1.x, -r2
					    mad oC0.xyz, r0.w, r0, r2
					    mov oC0.w, c6.z
					
					// approximately 87 instruction slots used (21 texture, 66 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _ScionResolutionParameters1;
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_3[6];
						vec4 _CoCParams1;
						vec4 _CoCParams2;
						vec4 unused_0_6[4];
						float _ScionForwardMSAAFix;
						vec4 unused_0_8[4];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 unused_1_0[7];
						vec4 _ZBufferParams;
						vec4 unused_1_2;
					};
					uniform  sampler2D _CameraDepthTexture;
					uniform  sampler2D _TapsTexture;
					uniform  sampler2D _AlphaTexture;
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _FullResolutionSource;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					ivec2 u_xlati0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec3 u_xlat6;
					float u_xlat7;
					float u_xlat8;
					float u_xlat9;
					vec2 u_xlat12;
					ivec2 u_xlati12;
					float u_xlat20;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD0.xy * _ScionResolutionParameters1.xy;
					    u_xlat0.xy = floor(u_xlat0.xy);
					    u_xlat0.xy = u_xlat0.xy + vec2(0.5, 0.5);
					    u_xlat12.xy = (-u_xlat0.xy) * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat1.zw = u_xlat0.xy * _ScionResolutionParameters2.xy;
					    u_xlati0.xy = ivec2(uvec2(lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat12.xyxx).xy) * 0xFFFFFFFFu);
					    u_xlati12.xy = ivec2(uvec2(lessThan(u_xlat12.xyxy, vec4(0.0, 0.0, 0.0, 0.0)).xy) * 0xFFFFFFFFu);
					    u_xlati0.xy = (-u_xlati0.xy) + u_xlati12.xy;
					    u_xlat0.xy = vec2(u_xlati0.xy);
					    u_xlat1.xy = u_xlat0.xy * _ScionResolutionParameters2.xy + u_xlat1.zw;
					    u_xlat0 = textureLod(_AlphaTexture, u_xlat1.xy, 0.0).yzwx;
					    u_xlat2 = textureLod(_TapsTexture, u_xlat1.xy, 0.0);
					    u_xlat3 = texture(_CameraDepthTexture, vs_TEXCOORD0.xy);
					    u_xlat3.x = _ZBufferParams.z * u_xlat3.x + _ZBufferParams.w;
					    u_xlat9 = float(1.0) / u_xlat3.x;
					    u_xlat3.x = u_xlat3.x * _CoCParams1.x + _CoCParams1.y;
					    u_xlat3.x = min(abs(u_xlat3.x), _CoCParams2.x);
					    u_xlat3.x = u_xlat3.x * 0.349999994;
					    u_xlat3.x = sqrt(u_xlat3.x);
					    u_xlat20 = (-u_xlat2.w) + u_xlat9;
					    u_xlat0.xyz = u_xlat2.xyz;
					    u_xlat2.x = abs(u_xlat20) + 9.99999975e-06;
					    u_xlat2.x = 0.0625 / u_xlat2.x;
					    u_xlat0 = u_xlat0 * u_xlat2.xxxx;
					    u_xlat4 = textureLod(_AlphaTexture, u_xlat1.zw, 0.0).yzwx;
					    u_xlat5 = textureLod(_TapsTexture, u_xlat1.zw, 0.0);
					    u_xlat8 = u_xlat9 + (-u_xlat5.w);
					    u_xlat4.xyz = u_xlat5.xyz;
					    u_xlat8 = abs(u_xlat8) + 9.99999975e-06;
					    u_xlat8 = 0.5625 / u_xlat8;
					    u_xlat0 = u_xlat4 * vec4(u_xlat8) + u_xlat0;
					    u_xlat2.x = u_xlat2.x + u_xlat8;
					    u_xlat4 = textureLod(_AlphaTexture, u_xlat1.xw, 0.0).yzwx;
					    u_xlat5 = textureLod(_TapsTexture, u_xlat1.xw, 0.0);
					    u_xlat4.xyz = u_xlat5.xyz;
					    u_xlat1.x = u_xlat9 + (-u_xlat5.w);
					    u_xlat1.x = abs(u_xlat1.x) + 9.99999975e-06;
					    u_xlat1.x = 0.1875 / u_xlat1.x;
					    u_xlat0 = u_xlat4 * u_xlat1.xxxx + u_xlat0;
					    u_xlat1.x = u_xlat1.x + u_xlat2.x;
					    u_xlat2 = textureLod(_AlphaTexture, u_xlat1.zy, 0.0).yzwx;
					    u_xlat4 = textureLod(_TapsTexture, u_xlat1.zy, 0.0);
					    u_xlat2.xyz = u_xlat4.xyz;
					    u_xlat7 = u_xlat9 + (-u_xlat4.w);
					    u_xlat7 = abs(u_xlat7) + 9.99999975e-06;
					    u_xlat7 = 0.1875 / u_xlat7;
					    u_xlat0 = u_xlat2 * vec4(u_xlat7) + u_xlat0;
					    u_xlat1.x = u_xlat7 + u_xlat1.x;
					    u_xlat0 = u_xlat0.wxyz / u_xlat1.xxxx;
					    u_xlat0.x = u_xlat0.x;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat1.x = u_xlat0.x * -2.0 + 3.0;
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat1.x;
					    u_xlat1 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1.x = u_xlat1.x * 0.25 + (-u_xlat3.x);
					    u_xlat0.x = u_xlat0.x * u_xlat1.x + u_xlat3.x;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat1.x = vs_TEXCOORD0.y * -2.0 + 1.0;
					    u_xlat1.y = _ScionForwardMSAAFix * u_xlat1.x + vs_TEXCOORD0.y;
					    u_xlat1.x = vs_TEXCOORD0.x;
					    u_xlat1 = textureLod(_FullResolutionSource, u_xlat1.xy, 0.0);
					    u_xlat6.xyz = u_xlat0.yzw + (-u_xlat1.xyz);
					    SV_Target0.xyz = u_xlat0.xxx * u_xlat6.xyz + u_xlat1.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" "SC_DOF_MASK_ON" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _AlphaTexture;
					//   float4 _CoCParams1;
					//   float4 _CoCParams2;
					//   sampler2D _ExclusionMask;
					//   sampler2D _FullResolutionSource;
					//   sampler2D _ScionCopiedFullResDepth;
					//   float _ScionForwardMSAAFix;
					//   float4 _ScionResolutionParameters1;
					//   float4 _ScionResolutionParameters2;
					//   sampler2D _TapsTexture;
					//   sampler2D _TiledNeighbourhoodData;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters1 c0       1
					//   _ScionResolutionParameters2 c1       1
					//   _CoCParams1                 c2       1
					//   _CoCParams2                 c3       1
					//   _ScionForwardMSAAFix        c4       1
					//   _TiledNeighbourhoodData     s0       1
					//   _ExclusionMask              s1       1
					//   _TapsTexture                s2       1
					//   _AlphaTexture               s3       1
					//   _FullResolutionSource       s4       1
					//   _ScionCopiedFullResDepth    s5       1
					//
					
					    ps_3_0
					    def c5, 1, 0, 0.5, 9.99999975e-006
					    def c6, 0.5625, 0.0625, 0.1875, 0.349999994
					    def c7, -2, 1, 3, 0.25
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    dcl_2d s3
					    dcl_2d s4
					    dcl_2d s5
					    mul r0.xy, c0, v0
					    frc r0.zw, r0.xyxy
					    add r0.xy, -r0.zwzw, r0
					    add r0.xy, r0, c5.z
					    mad r0.zw, r0.xyxy, -c1.xyxy, v0.xyxy
					    mul r1.xy, r0, c1
					    cmp r0.xy, -r0.zwzw, c5.y, c5.x
					    cmp r0.zw, r0, -c5.y, -c5.x
					    add r0.xy, r0.zwzw, r0
					    mad r0.xy, r0, c1, r1
					    mov r0.z, c5.y
					    texldl r2, r0.xyzz, s3
					    mov r2.w, r2.x
					    texldl r3, r0.xyzz, s2
					    mul r4, c5.xxyy, v0.xyxx
					    texldl r5, r4, s5
					    texldl r4, r4, s0
					    add r3.w, -r3.w, r5.x
					    mov r2.xyz, r3
					    add r3.x, r3_abs.w, c5.w
					    rcp r3.x, r3.x
					    mul r3.x, r3.x, c6.y
					    mul r2, r2, r3.x
					    mov r1.z, c5.y
					    texldl r6, r1.xyzz, s3
					    mov r6.w, r6.x
					    texldl r7, r1.xyzz, s2
					    add r3.y, r5.x, -r7.w
					    mov r6.xyz, r7
					    add r3.y, r3_abs.y, c5.w
					    rcp r3.y, r3.y
					    mul r3.z, r3.y, c6.x
					    mad r3.y, r3.y, c6.x, r3.x
					    mad r2, r6, r3.z, r2
					    mov r0.w, r1.y
					    texldl r6, r0.xwzz, s3
					    mov r6.w, r6.x
					    texldl r7, r0.xwzz, s2
					    texldl r8, r0.xwzz, s1
					    texldl r9, r0.xyzz, s1
					    mov r1.w, r0.y
					    mul r0.x, r3.x, r9.x
					    add r0.y, r5.x, -r7.w
					    mov r6.xyz, r7
					    add r0.y, r0_abs.y, c5.w
					    rcp r0.y, r0.y
					    mul r0.z, r0.y, c6.z
					    mad r0.y, r0.y, c6.z, r3.y
					    mad r2, r6, r0.z, r2
					    texldl r6, r1.xwzz, s3
					    mov r6.w, r6.x
					    texldl r7, r1.xwzz, s2
					    texldl r9, r1.xwzz, s1
					    texldl r1, r1.xyzz, s1
					    mad r0.x, r1.x, r3.z, r0.x
					    mad r0.x, r8.x, r0.z, r0.x
					    add r0.z, r5.x, -r7.w
					    mov r6.xyz, r7
					    rcp r0.w, r5.x
					    mad r0.w, r0.w, c2.x, c2.y
					    min r1.x, c3.x, r0_abs.w
					    mul r0.w, r1.x, c6.w
					    rsq r0.w, r0.w
					    rcp r0.w, r0.w
					    add r0.z, r0_abs.z, c5.w
					    rcp r0.z, r0.z
					    mul r1.x, r0.z, c6.z
					    mad r0.y, r0.z, c6.z, r0.y
					    rcp r0.y, r0.y
					    mad r2, r6, r1.x, r2
					    mad r0.x, r9.x, r1.x, r0.x
					    mul r0.x, r0.y, r0.x
					    mul r1.x, r0.y, r2.w
					    mov_sat r1.x, r1.x
					    mad r0.z, r1.x, c7.x, c7.z
					    mul r1.x, r1.x, r1.x
					    mul r0.z, r0.z, r1.x
					    mad r1.x, r4.x, c7.w, -r0.w
					    mad_sat r0.z, r0.z, r1.x, r0.w
					    mul r0.x, r0.x, r0.z
					    mad r0.z, v0.y, c7.x, c7.y
					    mad r1.y, c4.x, r0.z, v0.y
					    mul r1.xzw, c5.xyyy, v0.x
					    texldl r1, r1, s4
					    mad r0.yzw, r2.xxyz, r0.y, -r1.xxyz
					    mad oC0.xyz, r0.x, r0.yzww, r1
					    mov oC0.w, c5.x
					
					// approximately 102 instruction slots used (30 texture, 72 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" "SC_DOF_MASK_ON" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _ScionResolutionParameters1;
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_3[6];
						vec4 _CoCParams1;
						vec4 _CoCParams2;
						vec4 unused_0_6[4];
						float _ScionForwardMSAAFix;
						vec4 unused_0_8[4];
					};
					uniform  sampler2D _ScionCopiedFullResDepth;
					uniform  sampler2D _TapsTexture;
					uniform  sampler2D _AlphaTexture;
					uniform  sampler2D _ExclusionMask;
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _FullResolutionSource;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					ivec2 u_xlati0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					float u_xlat7;
					float u_xlat8;
					float u_xlat9;
					vec2 u_xlat12;
					ivec2 u_xlati12;
					float u_xlat14;
					float u_xlat15;
					float u_xlat18;
					float u_xlat20;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD0.xy * _ScionResolutionParameters1.xy;
					    u_xlat0.xy = floor(u_xlat0.xy);
					    u_xlat0.xy = u_xlat0.xy + vec2(0.5, 0.5);
					    u_xlat12.xy = (-u_xlat0.xy) * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat1.zw = u_xlat0.xy * _ScionResolutionParameters2.xy;
					    u_xlati0.xy = ivec2(uvec2(lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat12.xyxx).xy) * 0xFFFFFFFFu);
					    u_xlati12.xy = ivec2(uvec2(lessThan(u_xlat12.xyxy, vec4(0.0, 0.0, 0.0, 0.0)).xy) * 0xFFFFFFFFu);
					    u_xlati0.xy = (-u_xlati0.xy) + u_xlati12.xy;
					    u_xlat0.xy = vec2(u_xlati0.xy);
					    u_xlat1.xy = u_xlat0.xy * _ScionResolutionParameters2.xy + u_xlat1.zw;
					    u_xlat0 = textureLod(_AlphaTexture, u_xlat1.xy, 0.0).yzwx;
					    u_xlat2 = textureLod(_TapsTexture, u_xlat1.xy, 0.0);
					    u_xlat0.xyz = u_xlat2.xyz;
					    u_xlat3 = textureLod(_ScionCopiedFullResDepth, vs_TEXCOORD0.xy, 0.0);
					    u_xlat2.x = (-u_xlat2.w) + u_xlat3.x;
					    u_xlat2.x = abs(u_xlat2.x) + 9.99999975e-06;
					    u_xlat2.x = 0.0625 / u_xlat2.x;
					    u_xlat0 = u_xlat0 * u_xlat2.xxxx;
					    u_xlat4 = textureLod(_AlphaTexture, u_xlat1.zw, 0.0).yzwx;
					    u_xlat5 = textureLod(_TapsTexture, u_xlat1.zw, 0.0);
					    u_xlat4.xyz = u_xlat5.xyz;
					    u_xlat8 = u_xlat3.x + (-u_xlat5.w);
					    u_xlat8 = abs(u_xlat8) + 9.99999975e-06;
					    u_xlat8 = 0.5625 / u_xlat8;
					    u_xlat0 = u_xlat4 * vec4(u_xlat8) + u_xlat0;
					    u_xlat4 = textureLod(_AlphaTexture, u_xlat1.xw, 0.0).yzwx;
					    u_xlat5 = textureLod(_TapsTexture, u_xlat1.xw, 0.0);
					    u_xlat4.xyz = u_xlat5.xyz;
					    u_xlat14 = u_xlat3.x + (-u_xlat5.w);
					    u_xlat14 = abs(u_xlat14) + 9.99999975e-06;
					    u_xlat14 = 0.1875 / u_xlat14;
					    u_xlat0 = u_xlat4 * vec4(u_xlat14) + u_xlat0;
					    u_xlat4 = textureLod(_AlphaTexture, u_xlat1.zy, 0.0).yzwx;
					    u_xlat5 = textureLod(_TapsTexture, u_xlat1.zy, 0.0);
					    u_xlat4.xyz = u_xlat5.xyz;
					    u_xlat20 = u_xlat3.x + (-u_xlat5.w);
					    u_xlat3.x = float(1.0) / u_xlat3.x;
					    u_xlat3.x = u_xlat3.x * _CoCParams1.x + _CoCParams1.y;
					    u_xlat3.x = min(abs(u_xlat3.x), _CoCParams2.x);
					    u_xlat3.x = u_xlat3.x * 0.349999994;
					    u_xlat3.x = sqrt(u_xlat3.x);
					    u_xlat20 = abs(u_xlat20) + 9.99999975e-06;
					    u_xlat20 = 0.1875 / u_xlat20;
					    u_xlat0 = u_xlat4 * vec4(u_xlat20) + u_xlat0;
					    u_xlat9 = u_xlat2.x + u_xlat8;
					    u_xlat9 = u_xlat14 + u_xlat9;
					    u_xlat9 = u_xlat20 + u_xlat9;
					    u_xlat9 = float(1.0) / u_xlat9;
					    u_xlat4.x = u_xlat0.w * u_xlat9;
					    u_xlat4.x = u_xlat4.x;
					    u_xlat4.x = clamp(u_xlat4.x, 0.0, 1.0);
					    u_xlat18 = u_xlat4.x * -2.0 + 3.0;
					    u_xlat15 = u_xlat4.x * u_xlat4.x;
					    u_xlat18 = u_xlat18 * u_xlat15;
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat15 = u_xlat4.x * 0.25 + (-u_xlat3.x);
					    u_xlat18 = u_xlat18 * u_xlat15 + u_xlat3.x;
					    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
					    u_xlat4 = textureLod(_ExclusionMask, u_xlat1.xy, 0.0);
					    u_xlat2.x = u_xlat2.x * u_xlat4.x;
					    u_xlat4 = textureLod(_ExclusionMask, u_xlat1.zw, 0.0);
					    u_xlat2.x = u_xlat4.x * u_xlat8 + u_xlat2.x;
					    u_xlat4 = textureLod(_ExclusionMask, u_xlat1.xw, 0.0);
					    u_xlat1 = textureLod(_ExclusionMask, u_xlat1.zy, 0.0);
					    u_xlat7 = u_xlat4.x * u_xlat14 + u_xlat2.x;
					    u_xlat1.x = u_xlat1.x * u_xlat20 + u_xlat7;
					    u_xlat1.x = u_xlat9 * u_xlat1.x;
					    u_xlat18 = u_xlat18 * u_xlat1.x;
					    u_xlat1.x = vs_TEXCOORD0.y * -2.0 + 1.0;
					    u_xlat1.y = _ScionForwardMSAAFix * u_xlat1.x + vs_TEXCOORD0.y;
					    u_xlat1.x = vs_TEXCOORD0.x;
					    u_xlat1 = textureLod(_FullResolutionSource, u_xlat1.xy, 0.0);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat9) + (-u_xlat1.xyz);
					    SV_Target0.xyz = vec3(u_xlat18) * u_xlat0.xyz + u_xlat1.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _AlphaTexture;
					//   sampler2D _CameraDepthTexture;
					//   float4 _CoCParams1;
					//   float4 _CoCParams2;
					//   sampler2D _FullResolutionSource;
					//   float _ScionForwardMSAAFix;
					//   float4 _ScionResolutionParameters1;
					//   float4 _ScionResolutionParameters2;
					//   sampler2D _TapsTexture;
					//   sampler2D _TiledNeighbourhoodData;
					//   float4 _ZBufferParams;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ZBufferParams              c0       1
					//   _ScionResolutionParameters1 c1       1
					//   _ScionResolutionParameters2 c2       1
					//   _CoCParams1                 c3       1
					//   _CoCParams2                 c4       1
					//   _ScionForwardMSAAFix        c5       1
					//   _TiledNeighbourhoodData     s0       1
					//   _TapsTexture                s1       1
					//   _AlphaTexture               s2       1
					//   _CameraDepthTexture         s3       1
					//   _FullResolutionSource       s4       1
					//
					
					    ps_3_0
					    def c6, 0.5, 0, 1, 9.99999975e-006
					    def c7, 0.5625, 0.0625, 0.1875, 0.349999994
					    def c8, -2, 1, 3, 0.25
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    dcl_2d s3
					    dcl_2d s4
					    mul r0.xy, c1, v0
					    frc r0.zw, r0.xyxy
					    add r0.xy, -r0.zwzw, r0
					    add r0.xy, r0, c6.x
					    mad r0.zw, r0.xyxy, -c2.xyxy, v0.xyxy
					    mul r1.xy, r0, c2
					    cmp r0.xy, -r0.zwzw, c6.y, c6.z
					    cmp r0.zw, r0, -c6.y, -c6.z
					    add r0.xy, r0.zwzw, r0
					    mad r0.xy, r0, c2, r1
					    mov r0.z, c6.y
					    texldl r2, r0.xyzz, s2
					    mov r2.w, r2.x
					    texldl r3, r0.xyzz, s1
					    texld r4, v0, s3
					    mad r4.x, c0.z, r4.x, c0.w
					    rcp r4.x, r4.x
					    add r3.w, -r3.w, r4.x
					    mov r2.xyz, r3
					    add r3.x, r3_abs.w, c6.w
					    rcp r3.x, r3.x
					    mul r3.x, r3.x, c7.y
					    mul r2, r2, r3.x
					    mov r1.z, c6.y
					    texldl r5, r1.xyzz, s2
					    mov r5.w, r5.x
					    texldl r6, r1.xyzz, s1
					    add r3.y, r4.x, -r6.w
					    mov r5.xyz, r6
					    add r3.y, r3_abs.y, c6.w
					    rcp r3.y, r3.y
					    mul r3.z, r3.y, c7.x
					    mad r3.x, r3.y, c7.x, r3.x
					    mad r2, r5, r3.z, r2
					    mov r0.w, r1.y
					    texldl r5, r0.xwzz, s2
					    texldl r6, r0.xwzz, s1
					    mov r1.w, r0.y
					    mov r0.w, r5.x
					    mov r0.xyz, r6
					    add r1.y, r4.x, -r6.w
					    add r1.y, r1_abs.y, c6.w
					    rcp r1.y, r1.y
					    mul r3.y, r1.y, c7.z
					    mad r1.y, r1.y, c7.z, r3.x
					    mad r0, r0, r3.y, r2
					    texldl r2, r1.xwzz, s2
					    texldl r3, r1.xwzz, s1
					    mov r2.w, r2.x
					    mov r2.xyz, r3
					    add r1.x, -r3.w, r4.x
					    add r1.x, r1_abs.x, c6.w
					    rcp r1.x, r1.x
					    mul r1.z, r1.x, c7.z
					    mad r1.x, r1.x, c7.z, r1.y
					    rcp r1.x, r1.x
					    mad r0, r2, r1.z, r0
					    mul r2.x, r1.x, r0.w
					    mov_sat r2.x, r2.x
					    mad r0.w, r2.x, c8.x, c8.z
					    mul r1.y, r2.x, r2.x
					    mul r0.w, r0.w, r1.y
					    add r1.y, -r4.x, c3.z
					    max r2.x, r1.y, -c3.w
					    min r1.y, c3.w, r2.x
					    add r1.y, r1.y, r4.x
					    rcp r1.y, r1.y
					    mad r1.y, r1.y, c3.x, c3.y
					    min r2.x, c4.x, r1_abs.y
					    mul r1.y, r2.x, c7.w
					    rsq r1.y, r1.y
					    rcp r1.y, r1.y
					    mul r2, c6.zzyy, v0.xyxx
					    texldl r2, r2, s0
					    mad r1.z, r2.x, c8.w, -r1.y
					    mad_sat r0.w, r0.w, r1.z, r1.y
					    mad r1.y, v0.y, c8.x, c8.y
					    mad r2.y, c5.x, r1.y, v0.y
					    mul r2.xzw, c6.zyyy, v0.x
					    texldl r2, r2, s4
					    mad r0.xyz, r0, r1.x, -r2
					    mad oC0.xyz, r0.w, r0, r2
					    mov oC0.w, c6.z
					
					// approximately 93 instruction slots used (21 texture, 72 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _ScionResolutionParameters1;
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_3[6];
						vec4 _CoCParams1;
						vec4 _CoCParams2;
						vec4 unused_0_6[4];
						float _ScionForwardMSAAFix;
						vec4 unused_0_8[4];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 unused_1_0[7];
						vec4 _ZBufferParams;
						vec4 unused_1_2;
					};
					uniform  sampler2D _CameraDepthTexture;
					uniform  sampler2D _TapsTexture;
					uniform  sampler2D _AlphaTexture;
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _FullResolutionSource;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					ivec2 u_xlati0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec3 u_xlat5;
					float u_xlat6;
					float u_xlat7;
					vec2 u_xlat10;
					ivec2 u_xlati10;
					float u_xlat12;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD0.xy * _ScionResolutionParameters1.xy;
					    u_xlat0.xy = floor(u_xlat0.xy);
					    u_xlat0.xy = u_xlat0.xy + vec2(0.5, 0.5);
					    u_xlat10.xy = (-u_xlat0.xy) * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat1.zw = u_xlat0.xy * _ScionResolutionParameters2.xy;
					    u_xlati0.xy = ivec2(uvec2(lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat10.xyxx).xy) * 0xFFFFFFFFu);
					    u_xlati10.xy = ivec2(uvec2(lessThan(u_xlat10.xyxy, vec4(0.0, 0.0, 0.0, 0.0)).xy) * 0xFFFFFFFFu);
					    u_xlati0.xy = (-u_xlati0.xy) + u_xlati10.xy;
					    u_xlat0.xy = vec2(u_xlati0.xy);
					    u_xlat1.xy = u_xlat0.xy * _ScionResolutionParameters2.xy + u_xlat1.zw;
					    u_xlat0 = textureLod(_AlphaTexture, u_xlat1.xy, 0.0).yzwx;
					    u_xlat2 = textureLod(_TapsTexture, u_xlat1.xy, 0.0);
					    u_xlat0.xyz = u_xlat2.xyz;
					    u_xlat3 = texture(_CameraDepthTexture, vs_TEXCOORD0.xy);
					    u_xlat2.x = _ZBufferParams.z * u_xlat3.x + _ZBufferParams.w;
					    u_xlat2.x = float(1.0) / u_xlat2.x;
					    u_xlat7 = (-u_xlat2.w) + u_xlat2.x;
					    u_xlat7 = abs(u_xlat7) + 9.99999975e-06;
					    u_xlat7 = 0.0625 / u_xlat7;
					    u_xlat0 = u_xlat0 * vec4(u_xlat7);
					    u_xlat3 = textureLod(_AlphaTexture, u_xlat1.zw, 0.0).yzwx;
					    u_xlat4 = textureLod(_TapsTexture, u_xlat1.zw, 0.0);
					    u_xlat12 = u_xlat2.x + (-u_xlat4.w);
					    u_xlat3.xyz = u_xlat4.xyz;
					    u_xlat12 = abs(u_xlat12) + 9.99999975e-06;
					    u_xlat12 = 0.5625 / u_xlat12;
					    u_xlat0 = u_xlat3 * vec4(u_xlat12) + u_xlat0;
					    u_xlat7 = u_xlat7 + u_xlat12;
					    u_xlat3 = textureLod(_AlphaTexture, u_xlat1.xw, 0.0).yzwx;
					    u_xlat4 = textureLod(_TapsTexture, u_xlat1.xw, 0.0);
					    u_xlat3.xyz = u_xlat4.xyz;
					    u_xlat1.x = u_xlat2.x + (-u_xlat4.w);
					    u_xlat1.x = abs(u_xlat1.x) + 9.99999975e-06;
					    u_xlat1.x = 0.1875 / u_xlat1.x;
					    u_xlat0 = u_xlat3 * u_xlat1.xxxx + u_xlat0;
					    u_xlat1.x = u_xlat1.x + u_xlat7;
					    u_xlat3 = textureLod(_AlphaTexture, u_xlat1.zy, 0.0).yzwx;
					    u_xlat4 = textureLod(_TapsTexture, u_xlat1.zy, 0.0);
					    u_xlat3.xyz = u_xlat4.xyz;
					    u_xlat6 = u_xlat2.x + (-u_xlat4.w);
					    u_xlat6 = abs(u_xlat6) + 9.99999975e-06;
					    u_xlat6 = 0.1875 / u_xlat6;
					    u_xlat0 = u_xlat3 * vec4(u_xlat6) + u_xlat0;
					    u_xlat1.x = u_xlat6 + u_xlat1.x;
					    u_xlat0 = u_xlat0.wxyz / u_xlat1.xxxx;
					    u_xlat0.x = u_xlat0.x;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat1.x = u_xlat0.x * -2.0 + 3.0;
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat1.x;
					    u_xlat1.x = (-u_xlat2.x) + _CoCParams1.z;
					    u_xlat1.x = max(u_xlat1.x, (-_CoCParams1.w));
					    u_xlat1.x = min(u_xlat1.x, _CoCParams1.w);
					    u_xlat1.x = u_xlat1.x + u_xlat2.x;
					    u_xlat1.x = float(1.0) / u_xlat1.x;
					    u_xlat1.x = u_xlat1.x * _CoCParams1.x + _CoCParams1.y;
					    u_xlat1.x = min(abs(u_xlat1.x), _CoCParams2.x);
					    u_xlat1.x = u_xlat1.x * 0.349999994;
					    u_xlat1.x = sqrt(u_xlat1.x);
					    u_xlat2 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat6 = u_xlat2.x * 0.25 + (-u_xlat1.x);
					    u_xlat0.x = u_xlat0.x * u_xlat6 + u_xlat1.x;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat1.x = vs_TEXCOORD0.y * -2.0 + 1.0;
					    u_xlat1.y = _ScionForwardMSAAFix * u_xlat1.x + vs_TEXCOORD0.y;
					    u_xlat1.x = vs_TEXCOORD0.x;
					    u_xlat1 = textureLod(_FullResolutionSource, u_xlat1.xy, 0.0);
					    u_xlat5.xyz = u_xlat0.yzw + (-u_xlat1.xyz);
					    SV_Target0.xyz = u_xlat0.xxx * u_xlat5.xyz + u_xlat1.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" "SC_DOF_MASK_ON" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _AlphaTexture;
					//   float4 _CoCParams1;
					//   float4 _CoCParams2;
					//   sampler2D _ExclusionMask;
					//   sampler2D _FullResolutionSource;
					//   sampler2D _ScionCopiedFullResDepth;
					//   float _ScionForwardMSAAFix;
					//   float4 _ScionResolutionParameters1;
					//   float4 _ScionResolutionParameters2;
					//   sampler2D _TapsTexture;
					//   sampler2D _TiledNeighbourhoodData;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters1 c0       1
					//   _ScionResolutionParameters2 c1       1
					//   _CoCParams1                 c2       1
					//   _CoCParams2                 c3       1
					//   _ScionForwardMSAAFix        c4       1
					//   _TiledNeighbourhoodData     s0       1
					//   _ExclusionMask              s1       1
					//   _TapsTexture                s2       1
					//   _AlphaTexture               s3       1
					//   _FullResolutionSource       s4       1
					//   _ScionCopiedFullResDepth    s5       1
					//
					
					    ps_3_0
					    def c5, 1, 0, 0.5, 9.99999975e-006
					    def c6, 0.5625, 0.0625, 0.1875, 0.349999994
					    def c7, -2, 1, 3, 0.25
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    dcl_2d s3
					    dcl_2d s4
					    dcl_2d s5
					    mul r0.xy, c0, v0
					    frc r0.zw, r0.xyxy
					    add r0.xy, -r0.zwzw, r0
					    add r0.xy, r0, c5.z
					    mad r0.zw, r0.xyxy, -c1.xyxy, v0.xyxy
					    mul r1.xy, r0, c1
					    cmp r0.xy, -r0.zwzw, c5.y, c5.x
					    cmp r0.zw, r0, -c5.y, -c5.x
					    add r0.xy, r0.zwzw, r0
					    mad r0.xy, r0, c1, r1
					    mov r0.z, c5.y
					    texldl r2, r0.xyzz, s3
					    mov r2.w, r2.x
					    texldl r3, r0.xyzz, s2
					    mov r2.xyz, r3
					    mul r4, c5.xxyy, v0.xyxx
					    texldl r5, r4, s5
					    texldl r4, r4, s0
					    add r3.x, -r3.w, r5.x
					    add r3.x, r3_abs.x, c5.w
					    rcp r3.x, r3.x
					    mul r3.x, r3.x, c6.y
					    mul r2, r2, r3.x
					    mov r1.z, c5.y
					    texldl r6, r1.xyzz, s3
					    mov r6.w, r6.x
					    texldl r7, r1.xyzz, s2
					    add r3.y, r5.x, -r7.w
					    mov r6.xyz, r7
					    add r3.y, r3_abs.y, c5.w
					    rcp r3.y, r3.y
					    mul r3.z, r3.y, c6.x
					    mad r3.y, r3.y, c6.x, r3.x
					    mad r2, r6, r3.z, r2
					    mov r0.w, r1.y
					    texldl r6, r0.xwzz, s3
					    mov r6.w, r6.x
					    texldl r7, r0.xwzz, s2
					    texldl r8, r0.xwzz, s1
					    texldl r9, r0.xyzz, s1
					    mov r1.w, r0.y
					    mul r0.x, r3.x, r9.x
					    mov r6.xyz, r7
					    add r0.y, r5.x, -r7.w
					    add r0.y, r0_abs.y, c5.w
					    rcp r0.y, r0.y
					    mul r0.z, r0.y, c6.z
					    mad r0.y, r0.y, c6.z, r3.y
					    mad r2, r6, r0.z, r2
					    texldl r6, r1.xwzz, s3
					    mov r6.w, r6.x
					    texldl r7, r1.xwzz, s2
					    texldl r9, r1.xwzz, s1
					    texldl r1, r1.xyzz, s1
					    mad r0.x, r1.x, r3.z, r0.x
					    mad r0.x, r8.x, r0.z, r0.x
					    mov r6.xyz, r7
					    add r0.z, r5.x, -r7.w
					    add r0.z, r0_abs.z, c5.w
					    rcp r0.z, r0.z
					    mul r0.w, r0.z, c6.z
					    mad r0.y, r0.z, c6.z, r0.y
					    rcp r0.y, r0.y
					    mad r1, r6, r0.w, r2
					    mad r0.x, r9.x, r0.w, r0.x
					    mul r2.x, r0.y, r1.w
					    mov_sat r2.x, r2.x
					    mad r0.z, r2.x, c7.x, c7.z
					    mul r0.w, r2.x, r2.x
					    mul r0.xz, r0.yyww, r0
					    add r0.w, -r5.x, c2.z
					    max r1.w, r0.w, -c2.w
					    min r0.w, c2.w, r1.w
					    add r0.w, r0.w, r5.x
					    rcp r0.w, r0.w
					    mad r0.w, r0.w, c2.x, c2.y
					    min r1.w, c3.x, r0_abs.w
					    mul r0.w, r1.w, c6.w
					    rsq r0.w, r0.w
					    rcp r0.w, r0.w
					    mad r1.w, r4.x, c7.w, -r0.w
					    mad_sat r0.z, r0.z, r1.w, r0.w
					    mul r0.x, r0.x, r0.z
					    mad r0.z, v0.y, c7.x, c7.y
					    mad r2.y, c4.x, r0.z, v0.y
					    mul r2.xzw, c5.xyyy, v0.x
					    texldl r2, r2, s4
					    mad r0.yzw, r1.xxyz, r0.y, -r2.xxyz
					    mad oC0.xyz, r0.x, r0.yzww, r2
					    mov oC0.w, c5.x
					
					// approximately 105 instruction slots used (30 texture, 75 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" "SC_DOF_MASK_ON" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _ScionResolutionParameters1;
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_3[6];
						vec4 _CoCParams1;
						vec4 _CoCParams2;
						vec4 unused_0_6[4];
						float _ScionForwardMSAAFix;
						vec4 unused_0_8[4];
					};
					uniform  sampler2D _ScionCopiedFullResDepth;
					uniform  sampler2D _TapsTexture;
					uniform  sampler2D _AlphaTexture;
					uniform  sampler2D _ExclusionMask;
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _FullResolutionSource;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					ivec2 u_xlati0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					float u_xlat7;
					float u_xlat8;
					float u_xlat9;
					vec2 u_xlat12;
					ivec2 u_xlati12;
					float u_xlat14;
					float u_xlat15;
					float u_xlat18;
					float u_xlat20;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD0.xy * _ScionResolutionParameters1.xy;
					    u_xlat0.xy = floor(u_xlat0.xy);
					    u_xlat0.xy = u_xlat0.xy + vec2(0.5, 0.5);
					    u_xlat12.xy = (-u_xlat0.xy) * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat1.zw = u_xlat0.xy * _ScionResolutionParameters2.xy;
					    u_xlati0.xy = ivec2(uvec2(lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat12.xyxx).xy) * 0xFFFFFFFFu);
					    u_xlati12.xy = ivec2(uvec2(lessThan(u_xlat12.xyxy, vec4(0.0, 0.0, 0.0, 0.0)).xy) * 0xFFFFFFFFu);
					    u_xlati0.xy = (-u_xlati0.xy) + u_xlati12.xy;
					    u_xlat0.xy = vec2(u_xlati0.xy);
					    u_xlat1.xy = u_xlat0.xy * _ScionResolutionParameters2.xy + u_xlat1.zw;
					    u_xlat0 = textureLod(_AlphaTexture, u_xlat1.xy, 0.0).yzwx;
					    u_xlat2 = textureLod(_TapsTexture, u_xlat1.xy, 0.0);
					    u_xlat0.xyz = u_xlat2.xyz;
					    u_xlat3 = textureLod(_ScionCopiedFullResDepth, vs_TEXCOORD0.xy, 0.0);
					    u_xlat2.x = (-u_xlat2.w) + u_xlat3.x;
					    u_xlat2.x = abs(u_xlat2.x) + 9.99999975e-06;
					    u_xlat2.x = 0.0625 / u_xlat2.x;
					    u_xlat0 = u_xlat0 * u_xlat2.xxxx;
					    u_xlat4 = textureLod(_AlphaTexture, u_xlat1.zw, 0.0).yzwx;
					    u_xlat5 = textureLod(_TapsTexture, u_xlat1.zw, 0.0);
					    u_xlat4.xyz = u_xlat5.xyz;
					    u_xlat8 = u_xlat3.x + (-u_xlat5.w);
					    u_xlat8 = abs(u_xlat8) + 9.99999975e-06;
					    u_xlat8 = 0.5625 / u_xlat8;
					    u_xlat0 = u_xlat4 * vec4(u_xlat8) + u_xlat0;
					    u_xlat4 = textureLod(_AlphaTexture, u_xlat1.xw, 0.0).yzwx;
					    u_xlat5 = textureLod(_TapsTexture, u_xlat1.xw, 0.0);
					    u_xlat4.xyz = u_xlat5.xyz;
					    u_xlat14 = u_xlat3.x + (-u_xlat5.w);
					    u_xlat14 = abs(u_xlat14) + 9.99999975e-06;
					    u_xlat14 = 0.1875 / u_xlat14;
					    u_xlat0 = u_xlat4 * vec4(u_xlat14) + u_xlat0;
					    u_xlat4 = textureLod(_AlphaTexture, u_xlat1.zy, 0.0).yzwx;
					    u_xlat5 = textureLod(_TapsTexture, u_xlat1.zy, 0.0);
					    u_xlat4.xyz = u_xlat5.xyz;
					    u_xlat20 = u_xlat3.x + (-u_xlat5.w);
					    u_xlat20 = abs(u_xlat20) + 9.99999975e-06;
					    u_xlat20 = 0.1875 / u_xlat20;
					    u_xlat0 = u_xlat4 * vec4(u_xlat20) + u_xlat0;
					    u_xlat9 = u_xlat2.x + u_xlat8;
					    u_xlat9 = u_xlat14 + u_xlat9;
					    u_xlat9 = u_xlat20 + u_xlat9;
					    u_xlat9 = float(1.0) / u_xlat9;
					    u_xlat4.x = u_xlat0.w * u_xlat9;
					    u_xlat4.x = u_xlat4.x;
					    u_xlat4.x = clamp(u_xlat4.x, 0.0, 1.0);
					    u_xlat18 = u_xlat4.x * -2.0 + 3.0;
					    u_xlat15 = u_xlat4.x * u_xlat4.x;
					    u_xlat18 = u_xlat18 * u_xlat15;
					    u_xlat15 = (-u_xlat3.x) + _CoCParams1.z;
					    u_xlat15 = max(u_xlat15, (-_CoCParams1.w));
					    u_xlat15 = min(u_xlat15, _CoCParams1.w);
					    u_xlat3.x = u_xlat15 + u_xlat3.x;
					    u_xlat3.x = float(1.0) / u_xlat3.x;
					    u_xlat3.x = u_xlat3.x * _CoCParams1.x + _CoCParams1.y;
					    u_xlat3.x = min(abs(u_xlat3.x), _CoCParams2.x);
					    u_xlat3.x = u_xlat3.x * 0.349999994;
					    u_xlat3.x = sqrt(u_xlat3.x);
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat15 = u_xlat4.x * 0.25 + (-u_xlat3.x);
					    u_xlat18 = u_xlat18 * u_xlat15 + u_xlat3.x;
					    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
					    u_xlat4 = textureLod(_ExclusionMask, u_xlat1.xy, 0.0);
					    u_xlat2.x = u_xlat2.x * u_xlat4.x;
					    u_xlat4 = textureLod(_ExclusionMask, u_xlat1.zw, 0.0);
					    u_xlat2.x = u_xlat4.x * u_xlat8 + u_xlat2.x;
					    u_xlat4 = textureLod(_ExclusionMask, u_xlat1.xw, 0.0);
					    u_xlat1 = textureLod(_ExclusionMask, u_xlat1.zy, 0.0);
					    u_xlat7 = u_xlat4.x * u_xlat14 + u_xlat2.x;
					    u_xlat1.x = u_xlat1.x * u_xlat20 + u_xlat7;
					    u_xlat1.x = u_xlat9 * u_xlat1.x;
					    u_xlat18 = u_xlat18 * u_xlat1.x;
					    u_xlat1.x = vs_TEXCOORD0.y * -2.0 + 1.0;
					    u_xlat1.y = _ScionForwardMSAAFix * u_xlat1.x + vs_TEXCOORD0.y;
					    u_xlat1.x = vs_TEXCOORD0.x;
					    u_xlat1 = textureLod(_FullResolutionSource, u_xlat1.xy, 0.0);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat9) + (-u_xlat1.xyz);
					    SV_Target0.xyz = vec3(u_xlat18) * u_xlat0.xyz + u_xlat1.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _AlphaTexture;
					//   sampler2D _AvgCenterDepth;
					//   sampler2D _CameraDepthTexture;
					//   float4 _CoCParams2;
					//   sampler2D _FullResolutionSource;
					//   float _ScionForwardMSAAFix;
					//   float4 _ScionResolutionParameters1;
					//   float4 _ScionResolutionParameters2;
					//   sampler2D _TapsTexture;
					//   sampler2D _TiledNeighbourhoodData;
					//   float4 _VirtualCameraParams1;
					//   float4 _VirtualCameraParams2;
					//   float4 _ZBufferParams;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ZBufferParams              c0       1
					//   _ScionResolutionParameters1 c1       1
					//   _ScionResolutionParameters2 c2       1
					//   _VirtualCameraParams1       c3       1
					//   _VirtualCameraParams2       c4       1
					//   _CoCParams2                 c5       1
					//   _ScionForwardMSAAFix        c6       1
					//   _TiledNeighbourhoodData     s0       1
					//   _AvgCenterDepth             s1       1
					//   _TapsTexture                s2       1
					//   _AlphaTexture               s3       1
					//   _CameraDepthTexture         s4       1
					//   _FullResolutionSource       s5       1
					//
					
					    ps_3_0
					    def c7, 0.5, 0, 1, 9.99999975e-006
					    def c8, 0.5625, 0.0625, 0.1875, 0.349999994
					    def c9, -2, 1, 3, 0.25
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    dcl_2d s3
					    dcl_2d s4
					    dcl_2d s5
					    mul r0.xy, c1, v0
					    frc r0.zw, r0.xyxy
					    add r0.xy, -r0.zwzw, r0
					    add r0.xy, r0, c7.x
					    mad r0.zw, r0.xyxy, -c2.xyxy, v0.xyxy
					    mul r1.xy, r0, c2
					    cmp r0.xy, -r0.zwzw, c7.y, c7.z
					    cmp r0.zw, r0, -c7.y, -c7.z
					    add r0.xy, r0.zwzw, r0
					    mad r0.xy, r0, c2, r1
					    mov r0.z, c7.y
					    texldl r2, r0.xyzz, s3
					    mov r2.w, r2.x
					    texldl r3, r0.xyzz, s2
					    texld r4, v0, s4
					    mad r4.x, c0.z, r4.x, c0.w
					    rcp r4.y, r4.x
					    add r3.w, -r3.w, r4.y
					    mov r2.xyz, r3
					    add r3.x, r3_abs.w, c7.w
					    rcp r3.x, r3.x
					    mul r3.x, r3.x, c8.y
					    mul r2, r2, r3.x
					    mov r1.z, c7.y
					    texldl r5, r1.xyzz, s2
					    add r3.y, r4.y, -r5.w
					    add r3.y, r3_abs.y, c7.w
					    rcp r3.y, r3.y
					    mul r3.z, r3.y, c8.x
					    mad r3.x, r3.y, c8.x, r3.x
					    texldl r6, r1.xyzz, s3
					    mov r5.w, r6.x
					    mad r2, r5, r3.z, r2
					    mov r0.w, r1.y
					    texldl r5, r0.xwzz, s3
					    texldl r6, r0.xwzz, s2
					    mov r1.w, r0.y
					    mov r0.w, r5.x
					    add r1.y, r4.y, -r6.w
					    mov r0.xyz, r6
					    add r1.y, r1_abs.y, c7.w
					    rcp r1.y, r1.y
					    mul r3.y, r1.y, c8.z
					    mad r1.y, r1.y, c8.z, r3.x
					    mad r0, r0, r3.y, r2
					    texldl r2, r1.xwzz, s3
					    texldl r3, r1.xwzz, s2
					    mov r2.w, r2.x
					    add r1.x, -r3.w, r4.y
					    mov r2.xyz, r3
					    add r1.x, r1_abs.x, c7.w
					    rcp r1.x, r1.x
					    mul r1.z, r1.x, c8.z
					    mad r1.x, r1.x, c8.z, r1.y
					    rcp r1.x, r1.x
					    mad r0, r2, r1.z, r0
					    mul r2.x, r1.x, r0.w
					    mov_sat r2.x, r2.x
					    mad r0.w, r2.x, c9.x, c9.z
					    mul r1.y, r2.x, r2.x
					    mul r0.w, r0.w, r1.y
					    rcp r1.y, c3.y
					    mul r1.z, c4.y, c4.y
					    mul r1.y, r1.y, r1.z
					    texldl r2, c7.xxyy, s1
					    mul r1.z, r1.y, r2.x
					    add r1.w, r2.x, -c4.y
					    rcp r1.w, r1.w
					    mul r2.x, r1.w, r1.z
					    mul r2.y, r1.w, -r1.y
					    mul r1.yz, r2.xxyw, c4.w
					    mad r1.y, r4.x, r1.y, r1.z
					    min r2.x, c5.x, r1_abs.y
					    mul r1.y, r2.x, c8.w
					    rsq r1.y, r1.y
					    rcp r1.y, r1.y
					    mul r2, c7.zzyy, v0.xyxx
					    texldl r2, r2, s0
					    mad r1.z, r2.x, c9.w, -r1.y
					    mad_sat r0.w, r0.w, r1.z, r1.y
					    mad r1.y, v0.y, c9.x, c9.y
					    mad r2.y, c6.x, r1.y, v0.y
					    mul r2.xzw, c7.zyyy, v0.x
					    texldl r2, r2, s5
					    mad r0.xyz, r0, r1.x, -r2
					    mad oC0.xyz, r0.w, r0, r2
					    mov oC0.w, c7.z
					
					// approximately 98 instruction slots used (23 texture, 75 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _ScionResolutionParameters1;
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_3[3];
						vec4 _VirtualCameraParams1;
						vec4 _VirtualCameraParams2;
						vec4 unused_0_6[2];
						vec4 _CoCParams2;
						vec4 unused_0_8[4];
						float _ScionForwardMSAAFix;
						vec4 unused_0_10[4];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 unused_1_0[7];
						vec4 _ZBufferParams;
						vec4 unused_1_2;
					};
					uniform  sampler2D _CameraDepthTexture;
					uniform  sampler2D _TapsTexture;
					uniform  sampler2D _AlphaTexture;
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _FullResolutionSource;
					uniform  sampler2D _AvgCenterDepth;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					ivec2 u_xlati0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec3 u_xlat6;
					float u_xlat7;
					float u_xlat8;
					float u_xlat9;
					vec2 u_xlat12;
					ivec2 u_xlati12;
					float u_xlat13;
					float u_xlat20;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD0.xy * _ScionResolutionParameters1.xy;
					    u_xlat0.xy = floor(u_xlat0.xy);
					    u_xlat0.xy = u_xlat0.xy + vec2(0.5, 0.5);
					    u_xlat12.xy = (-u_xlat0.xy) * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat1.zw = u_xlat0.xy * _ScionResolutionParameters2.xy;
					    u_xlati0.xy = ivec2(uvec2(lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat12.xyxx).xy) * 0xFFFFFFFFu);
					    u_xlati12.xy = ivec2(uvec2(lessThan(u_xlat12.xyxy, vec4(0.0, 0.0, 0.0, 0.0)).xy) * 0xFFFFFFFFu);
					    u_xlati0.xy = (-u_xlati0.xy) + u_xlati12.xy;
					    u_xlat0.xy = vec2(u_xlati0.xy);
					    u_xlat1.xy = u_xlat0.xy * _ScionResolutionParameters2.xy + u_xlat1.zw;
					    u_xlat0 = textureLod(_AlphaTexture, u_xlat1.xy, 0.0).yzwx;
					    u_xlat2 = textureLod(_TapsTexture, u_xlat1.xy, 0.0);
					    u_xlat3 = texture(_CameraDepthTexture, vs_TEXCOORD0.xy);
					    u_xlat3.x = _ZBufferParams.z * u_xlat3.x + _ZBufferParams.w;
					    u_xlat9 = float(1.0) / u_xlat3.x;
					    u_xlat20 = (-u_xlat2.w) + u_xlat9;
					    u_xlat0.xyz = u_xlat2.xyz;
					    u_xlat2.x = abs(u_xlat20) + 9.99999975e-06;
					    u_xlat2.x = 0.0625 / u_xlat2.x;
					    u_xlat0 = u_xlat0 * u_xlat2.xxxx;
					    u_xlat4 = textureLod(_AlphaTexture, u_xlat1.zw, 0.0).yzwx;
					    u_xlat5 = textureLod(_TapsTexture, u_xlat1.zw, 0.0);
					    u_xlat8 = u_xlat9 + (-u_xlat5.w);
					    u_xlat4.xyz = u_xlat5.xyz;
					    u_xlat8 = abs(u_xlat8) + 9.99999975e-06;
					    u_xlat8 = 0.5625 / u_xlat8;
					    u_xlat0 = u_xlat4 * vec4(u_xlat8) + u_xlat0;
					    u_xlat2.x = u_xlat2.x + u_xlat8;
					    u_xlat4 = textureLod(_AlphaTexture, u_xlat1.xw, 0.0).yzwx;
					    u_xlat5 = textureLod(_TapsTexture, u_xlat1.xw, 0.0);
					    u_xlat4.xyz = u_xlat5.xyz;
					    u_xlat1.x = u_xlat9 + (-u_xlat5.w);
					    u_xlat1.x = abs(u_xlat1.x) + 9.99999975e-06;
					    u_xlat1.x = 0.1875 / u_xlat1.x;
					    u_xlat0 = u_xlat4 * u_xlat1.xxxx + u_xlat0;
					    u_xlat1.x = u_xlat1.x + u_xlat2.x;
					    u_xlat2 = textureLod(_AlphaTexture, u_xlat1.zy, 0.0).yzwx;
					    u_xlat4 = textureLod(_TapsTexture, u_xlat1.zy, 0.0);
					    u_xlat2.xyz = u_xlat4.xyz;
					    u_xlat7 = u_xlat9 + (-u_xlat4.w);
					    u_xlat7 = abs(u_xlat7) + 9.99999975e-06;
					    u_xlat7 = 0.1875 / u_xlat7;
					    u_xlat0 = u_xlat2 * vec4(u_xlat7) + u_xlat0;
					    u_xlat1.x = u_xlat7 + u_xlat1.x;
					    u_xlat0 = u_xlat0.wxyz / u_xlat1.xxxx;
					    u_xlat0.x = u_xlat0.x;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat1.x = u_xlat0.x * -2.0 + 3.0;
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat1.x;
					    u_xlat1.x = _VirtualCameraParams2.y / _VirtualCameraParams1.y;
					    u_xlat1.x = u_xlat1.x * _VirtualCameraParams2.y;
					    u_xlat2 = textureLod(_AvgCenterDepth, vec2(0.5, 0.5), 0.0);
					    u_xlat7 = u_xlat1.x * u_xlat2.x;
					    u_xlat13 = u_xlat2.x + (-_VirtualCameraParams2.y);
					    u_xlat13 = float(1.0) / u_xlat13;
					    u_xlat2.x = u_xlat13 * u_xlat7;
					    u_xlat2.y = u_xlat13 * (-u_xlat1.x);
					    u_xlat1.xy = u_xlat2.xy * _VirtualCameraParams2.ww;
					    u_xlat1.x = u_xlat3.x * u_xlat1.x + u_xlat1.y;
					    u_xlat1.x = min(abs(u_xlat1.x), _CoCParams2.x);
					    u_xlat1.x = u_xlat1.x * 0.349999994;
					    u_xlat1.x = sqrt(u_xlat1.x);
					    u_xlat2 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat7 = u_xlat2.x * 0.25 + (-u_xlat1.x);
					    u_xlat0.x = u_xlat0.x * u_xlat7 + u_xlat1.x;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat1.x = vs_TEXCOORD0.y * -2.0 + 1.0;
					    u_xlat1.y = _ScionForwardMSAAFix * u_xlat1.x + vs_TEXCOORD0.y;
					    u_xlat1.x = vs_TEXCOORD0.x;
					    u_xlat1 = textureLod(_FullResolutionSource, u_xlat1.xy, 0.0);
					    u_xlat6.xyz = u_xlat0.yzw + (-u_xlat1.xyz);
					    SV_Target0.xyz = u_xlat0.xxx * u_xlat6.xyz + u_xlat1.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" "SC_DOF_MASK_ON" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _AlphaTexture;
					//   sampler2D _AvgCenterDepth;
					//   float4 _CoCParams2;
					//   sampler2D _ExclusionMask;
					//   sampler2D _FullResolutionSource;
					//   sampler2D _ScionCopiedFullResDepth;
					//   float _ScionForwardMSAAFix;
					//   float4 _ScionResolutionParameters1;
					//   float4 _ScionResolutionParameters2;
					//   sampler2D _TapsTexture;
					//   sampler2D _TiledNeighbourhoodData;
					//   float4 _VirtualCameraParams1;
					//   float4 _VirtualCameraParams2;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters1 c0       1
					//   _ScionResolutionParameters2 c1       1
					//   _VirtualCameraParams1       c2       1
					//   _VirtualCameraParams2       c3       1
					//   _CoCParams2                 c4       1
					//   _ScionForwardMSAAFix        c5       1
					//   _TiledNeighbourhoodData     s0       1
					//   _ExclusionMask              s1       1
					//   _AvgCenterDepth             s2       1
					//   _TapsTexture                s3       1
					//   _AlphaTexture               s4       1
					//   _FullResolutionSource       s5       1
					//   _ScionCopiedFullResDepth    s6       1
					//
					
					    ps_3_0
					    def c6, 1, 0, 0.5, 9.99999975e-006
					    def c7, 0.5625, 0.0625, 0.1875, 0.349999994
					    def c8, -2, 1, 3, 0.25
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    dcl_2d s3
					    dcl_2d s4
					    dcl_2d s5
					    dcl_2d s6
					    rcp r0.x, c2.y
					    mul r0.y, c3.y, c3.y
					    mul r0.x, r0.x, r0.y
					    texldl r1, c6.zzyy, s2
					    mul r0.y, r0.x, r1.x
					    add r0.z, r1.x, -c3.y
					    rcp r0.z, r0.z
					    mul r1.x, r0.z, r0.y
					    mul r1.y, r0.z, -r0.x
					    mul r0.xy, r1, c3.w
					    mul r1, c6.xxyy, v0.xyxx
					    texldl r2, r1, s6
					    texldl r1, r1, s0
					    rcp r0.z, r2.x
					    mad r0.x, r0.z, r0.x, r0.y
					    min r1.y, c4.x, r0_abs.x
					    mul r0.x, r1.y, c7.w
					    rsq r0.x, r0.x
					    rcp r0.x, r0.x
					    mad r0.y, r1.x, c8.w, -r0.x
					    mul r0.zw, c0.xyxy, v0.xyxy
					    frc r1.xy, r0.zwzw
					    add r0.zw, r0, -r1.xyxy
					    add r0.zw, r0, c6.z
					    mad r1.xy, r0.zwzw, -c1, v0
					    mul r3.xy, r0.zwzw, c1
					    cmp r0.zw, -r1.xyxy, c6.y, c6.x
					    cmp r1.xy, r1, -c6.y, -c6.x
					    add r0.zw, r0, r1.xyxy
					    mad r1.xy, r0.zwzw, c1, r3
					    mov r1.z, c6.y
					    texldl r4, r1.xyzz, s3
					    add r0.z, r2.x, -r4.w
					    add r0.z, r0_abs.z, c6.w
					    rcp r0.z, r0.z
					    mul r0.z, r0.z, c7.y
					    texldl r5, r1.xyzz, s4
					    mov r4.w, r5.x
					    mul r4, r0.z, r4
					    mov r3.z, c6.y
					    texldl r5, r3.xyzz, s3
					    add r0.w, r2.x, -r5.w
					    add r0.w, r0_abs.w, c6.w
					    rcp r0.w, r0.w
					    mul r2.y, r0.w, c7.x
					    mad r0.w, r0.w, c7.x, r0.z
					    texldl r6, r3.xyzz, s4
					    mov r5.w, r6.x
					    mad r4, r5, r2.y, r4
					    mov r1.w, r3.y
					    texldl r5, r1.xwzz, s3
					    add r2.z, r2.x, -r5.w
					    add r2.z, r2_abs.z, c6.w
					    rcp r2.z, r2.z
					    mul r2.w, r2.z, c7.z
					    mad r0.w, r2.z, c7.z, r0.w
					    texldl r6, r1.xwzz, s4
					    texldl r7, r1.xwzz, s1
					    texldl r8, r1.xyzz, s1
					    mov r3.w, r1.y
					    mul r0.z, r0.z, r8.x
					    mov r5.w, r6.x
					    mad r1, r5, r2.w, r4
					    texldl r4, r3.xwzz, s3
					    add r2.x, r2.x, -r4.w
					    add r2.x, r2_abs.x, c6.w
					    rcp r2.x, r2.x
					    mul r2.z, r2.x, c7.z
					    mad r0.w, r2.x, c7.z, r0.w
					    rcp r0.w, r0.w
					    texldl r5, r3.xwzz, s4
					    texldl r6, r3.xwzz, s1
					    texldl r3, r3.xyzz, s1
					    mad r0.z, r3.x, r2.y, r0.z
					    mad r0.z, r7.x, r2.w, r0.z
					    mad r0.z, r6.x, r2.z, r0.z
					    mul r0.z, r0.w, r0.z
					    mov r4.w, r5.x
					    mad r1, r4, r2.z, r1
					    mul r2.x, r0.w, r1.w
					    mov_sat r2.x, r2.x
					    mad r1.w, r2.x, c8.x, c8.z
					    mul r2.x, r2.x, r2.x
					    mul r1.w, r1.w, r2.x
					    mad_sat r0.x, r1.w, r0.y, r0.x
					    mul r0.x, r0.z, r0.x
					    mad r0.y, v0.y, c8.x, c8.y
					    mad r2.y, c5.x, r0.y, v0.y
					    mul r2.xzw, c6.xyyy, v0.x
					    texldl r2, r2, s5
					    mad r0.yzw, r1.xxyz, r0.w, -r2.xxyz
					    mad oC0.xyz, r0.x, r0.yzww, r2
					    mov oC0.w, c6.x
					
					// approximately 109 instruction slots used (32 texture, 77 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" "SC_DOF_MASK_ON" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _ScionResolutionParameters1;
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_3[3];
						vec4 _VirtualCameraParams1;
						vec4 _VirtualCameraParams2;
						vec4 unused_0_6[2];
						vec4 _CoCParams2;
						vec4 unused_0_8[4];
						float _ScionForwardMSAAFix;
						vec4 unused_0_10[4];
					};
					uniform  sampler2D _ScionCopiedFullResDepth;
					uniform  sampler2D _TapsTexture;
					uniform  sampler2D _AlphaTexture;
					uniform  sampler2D _ExclusionMask;
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _FullResolutionSource;
					uniform  sampler2D _AvgCenterDepth;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					ivec2 u_xlati0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					float u_xlat7;
					float u_xlat8;
					float u_xlat9;
					vec2 u_xlat12;
					ivec2 u_xlati12;
					float u_xlat14;
					vec2 u_xlat15;
					float u_xlat18;
					float u_xlat20;
					float u_xlat21;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD0.xy * _ScionResolutionParameters1.xy;
					    u_xlat0.xy = floor(u_xlat0.xy);
					    u_xlat0.xy = u_xlat0.xy + vec2(0.5, 0.5);
					    u_xlat12.xy = (-u_xlat0.xy) * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat1.zw = u_xlat0.xy * _ScionResolutionParameters2.xy;
					    u_xlati0.xy = ivec2(uvec2(lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat12.xyxx).xy) * 0xFFFFFFFFu);
					    u_xlati12.xy = ivec2(uvec2(lessThan(u_xlat12.xyxy, vec4(0.0, 0.0, 0.0, 0.0)).xy) * 0xFFFFFFFFu);
					    u_xlati0.xy = (-u_xlati0.xy) + u_xlati12.xy;
					    u_xlat0.xy = vec2(u_xlati0.xy);
					    u_xlat1.xy = u_xlat0.xy * _ScionResolutionParameters2.xy + u_xlat1.zw;
					    u_xlat0 = textureLod(_AlphaTexture, u_xlat1.xy, 0.0).yzwx;
					    u_xlat2 = textureLod(_TapsTexture, u_xlat1.xy, 0.0);
					    u_xlat0.xyz = u_xlat2.xyz;
					    u_xlat3 = textureLod(_ScionCopiedFullResDepth, vs_TEXCOORD0.xy, 0.0);
					    u_xlat2.x = (-u_xlat2.w) + u_xlat3.x;
					    u_xlat2.x = abs(u_xlat2.x) + 9.99999975e-06;
					    u_xlat2.x = 0.0625 / u_xlat2.x;
					    u_xlat0 = u_xlat0 * u_xlat2.xxxx;
					    u_xlat4 = textureLod(_AlphaTexture, u_xlat1.zw, 0.0).yzwx;
					    u_xlat5 = textureLod(_TapsTexture, u_xlat1.zw, 0.0);
					    u_xlat4.xyz = u_xlat5.xyz;
					    u_xlat8 = u_xlat3.x + (-u_xlat5.w);
					    u_xlat8 = abs(u_xlat8) + 9.99999975e-06;
					    u_xlat8 = 0.5625 / u_xlat8;
					    u_xlat0 = u_xlat4 * vec4(u_xlat8) + u_xlat0;
					    u_xlat4 = textureLod(_AlphaTexture, u_xlat1.xw, 0.0).yzwx;
					    u_xlat5 = textureLod(_TapsTexture, u_xlat1.xw, 0.0);
					    u_xlat4.xyz = u_xlat5.xyz;
					    u_xlat14 = u_xlat3.x + (-u_xlat5.w);
					    u_xlat14 = abs(u_xlat14) + 9.99999975e-06;
					    u_xlat14 = 0.1875 / u_xlat14;
					    u_xlat0 = u_xlat4 * vec4(u_xlat14) + u_xlat0;
					    u_xlat4 = textureLod(_AlphaTexture, u_xlat1.zy, 0.0).yzwx;
					    u_xlat5 = textureLod(_TapsTexture, u_xlat1.zy, 0.0);
					    u_xlat4.xyz = u_xlat5.xyz;
					    u_xlat20 = u_xlat3.x + (-u_xlat5.w);
					    u_xlat3.x = float(1.0) / u_xlat3.x;
					    u_xlat20 = abs(u_xlat20) + 9.99999975e-06;
					    u_xlat20 = 0.1875 / u_xlat20;
					    u_xlat0 = u_xlat4 * vec4(u_xlat20) + u_xlat0;
					    u_xlat9 = u_xlat2.x + u_xlat8;
					    u_xlat9 = u_xlat14 + u_xlat9;
					    u_xlat9 = u_xlat20 + u_xlat9;
					    u_xlat9 = float(1.0) / u_xlat9;
					    u_xlat4.x = u_xlat0.w * u_xlat9;
					    u_xlat4.x = u_xlat4.x;
					    u_xlat4.x = clamp(u_xlat4.x, 0.0, 1.0);
					    u_xlat18 = u_xlat4.x * -2.0 + 3.0;
					    u_xlat15.x = u_xlat4.x * u_xlat4.x;
					    u_xlat18 = u_xlat18 * u_xlat15.x;
					    u_xlat15.x = _VirtualCameraParams2.y / _VirtualCameraParams1.y;
					    u_xlat15.x = u_xlat15.x * _VirtualCameraParams2.y;
					    u_xlat4 = textureLod(_AvgCenterDepth, vec2(0.5, 0.5), 0.0);
					    u_xlat21 = u_xlat15.x * u_xlat4.x;
					    u_xlat4.x = u_xlat4.x + (-_VirtualCameraParams2.y);
					    u_xlat4.x = float(1.0) / u_xlat4.x;
					    u_xlat5.x = u_xlat21 * u_xlat4.x;
					    u_xlat5.y = (-u_xlat15.x) * u_xlat4.x;
					    u_xlat15.xy = u_xlat5.xy * _VirtualCameraParams2.ww;
					    u_xlat3.x = u_xlat3.x * u_xlat15.x + u_xlat15.y;
					    u_xlat3.x = min(abs(u_xlat3.x), _CoCParams2.x);
					    u_xlat3.x = u_xlat3.x * 0.349999994;
					    u_xlat3.x = sqrt(u_xlat3.x);
					    u_xlat4 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat15.x = u_xlat4.x * 0.25 + (-u_xlat3.x);
					    u_xlat18 = u_xlat18 * u_xlat15.x + u_xlat3.x;
					    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
					    u_xlat4 = textureLod(_ExclusionMask, u_xlat1.xy, 0.0);
					    u_xlat2.x = u_xlat2.x * u_xlat4.x;
					    u_xlat4 = textureLod(_ExclusionMask, u_xlat1.zw, 0.0);
					    u_xlat2.x = u_xlat4.x * u_xlat8 + u_xlat2.x;
					    u_xlat4 = textureLod(_ExclusionMask, u_xlat1.xw, 0.0);
					    u_xlat1 = textureLod(_ExclusionMask, u_xlat1.zy, 0.0);
					    u_xlat7 = u_xlat4.x * u_xlat14 + u_xlat2.x;
					    u_xlat1.x = u_xlat1.x * u_xlat20 + u_xlat7;
					    u_xlat1.x = u_xlat9 * u_xlat1.x;
					    u_xlat18 = u_xlat18 * u_xlat1.x;
					    u_xlat1.x = vs_TEXCOORD0.y * -2.0 + 1.0;
					    u_xlat1.y = _ScionForwardMSAAFix * u_xlat1.x + vs_TEXCOORD0.y;
					    u_xlat1.x = vs_TEXCOORD0.x;
					    u_xlat1 = textureLod(_FullResolutionSource, u_xlat1.xy, 0.0);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat9) + (-u_xlat1.xyz);
					    SV_Target0.xyz = vec3(u_xlat18) * u_xlat0.xyz + u_xlat1.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}"
				}
			}
		}
		Pass {
			Name "DOWNSAMPLEWEIGHTED"
			ZClip Off
			ZWrite Off
			Cull Off
			Fog {
				Mode Off
			}
			GpuProgramID 500991
			Program "vp" {
				SubProgram "d3d9 " {
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _DownsampleWeightedParams;
					//   sampler2D _MainTex;
					//   float4 _ScionCameraParams1;
					//
					//
					// Registers:
					//
					//   Name                      Reg   Size
					//   ------------------------- ----- ----
					//   _ScionCameraParams1       c0       1
					//   _DownsampleWeightedParams c1       1
					//   _MainTex                  s0       1
					//
					
					    ps_3_0
					    def c2, 1, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    add r0.xy, -c1, v0
					    mul r0.x, r0.x, c0.z
					    mul r0.y, r0.y, r0.y
					    mad r0.x, r0.x, r0.x, r0.y
					    add r0.x, -r0.x, c1.z
					    mul_sat r0.x, r0.x, c1.w
					    mul r1, c2.xxyy, v0.xyxx
					    texldl r1, r1, s0
					    mul oC0.x, r0.x, r1.w
					    mov oC0.y, r0.x
					    mov oC0.zw, c2.y
					
					// approximately 12 instruction slots used (2 texture, 10 arithmetic)"
				}
				SubProgram "d3d11 " {
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[6];
						vec4 _ScionCameraParams1;
						vec4 unused_0_2[12];
						vec4 _DownsampleWeightedParams;
						vec4 unused_0_4;
					};
					uniform  sampler2D _MainTex;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec2 u_xlat0;
					vec4 u_xlat1;
					float u_xlat2;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD0.xy + (-_DownsampleWeightedParams.xy);
					    u_xlat0.x = u_xlat0.x * _ScionCameraParams1.z;
					    u_xlat2 = u_xlat0.y * u_xlat0.y;
					    u_xlat0.x = u_xlat0.x * u_xlat0.x + u_xlat2;
					    u_xlat0.x = (-u_xlat0.x) + _DownsampleWeightedParams.z;
					    u_xlat0.x = u_xlat0.x * _DownsampleWeightedParams.w;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat1 = textureLod(_MainTex, vs_TEXCOORD0.xy, 0.0);
					    SV_Target0.x = u_xlat0.x * u_xlat1.w;
					    SV_Target0.y = u_xlat0.x;
					    SV_Target0.zw = vec2(0.0, 0.0);
					    return;
					}"
				}
			}
		}
		Pass {
			Name "DOWNSAMPLEWEIGHTEDFINALPASS"
			ZClip Off
			ZWrite Off
			Cull Off
			Fog {
				Mode Off
			}
			GpuProgramID 552995
			Program "vp" {
				SubProgram "d3d9 " {
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float _DownsampleWeightedAdaptionSpeed;
					//   sampler2D _MainTex;
					//   sampler2D _PreviousWeightedResult;
					//
					//
					// Registers:
					//
					//   Name                             Reg   Size
					//   -------------------------------- ----- ----
					//   _DownsampleWeightedAdaptionSpeed c0       1
					//   _MainTex                         s0       1
					//   _PreviousWeightedResult          s1       1
					//
					
					    ps_3_0
					    def c1, 1, 0, 9.99999975e-006, 0.5
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    mul r0, c1.xxyy, v0.xyxx
					    texldl r0, r0, s0
					    add r0.y, r0.y, c1.z
					    rcp r0.y, r0.y
					    texldl r1, c1.wwyy, s1
					    mad r0.x, r0.x, r0.y, -r1.x
					    mad r0.x, r0.x, c0.x, r1.x
					    max oC0.x, r0.x, c1.y
					    mov oC0.yzw, c1.y
					
					// approximately 11 instruction slots used (4 texture, 7 arithmetic)"
				}
				SubProgram "d3d11 " {
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[20];
						float _DownsampleWeightedAdaptionSpeed;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _PreviousWeightedResult;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					float u_xlat2;
					void main()
					{
					    u_xlat0 = textureLod(_MainTex, vs_TEXCOORD0.xy, 0.0);
					    u_xlat2 = u_xlat0.y + 9.99999975e-06;
					    u_xlat0.x = u_xlat0.x / u_xlat2;
					    u_xlat1 = textureLod(_PreviousWeightedResult, vec2(0.5, 0.5), 0.0);
					    u_xlat0.x = u_xlat0.x + (-u_xlat1.x);
					    u_xlat0.x = u_xlat0.x * _DownsampleWeightedAdaptionSpeed + u_xlat1.x;
					    u_xlat0.x = min((-u_xlat0.x), 0.0);
					    SV_Target0.x = (-u_xlat0.x);
					    SV_Target0.yzw = vec3(0.0, 0.0, 0.0);
					    return;
					}"
				}
			}
		}
		Pass {
			Name "POINTRANGEVISUALIZATION"
			ZClip Off
			ZWrite Off
			Cull Off
			Fog {
				Mode Off
			}
			GpuProgramID 623634
			Program "vp" {
				SubProgram "d3d9 " {
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _HalfResSourceDepthTexture;
					//   sampler2D _MainTex;
					//
					//
					// Registers:
					//
					//   Name                       Reg   Size
					//   -------------------------- ----- ----
					//   _MainTex                   s0       1
					//   _HalfResSourceDepthTexture s1       1
					//
					
					    ps_3_0
					    def c0, 1, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    mul r0, c0.xxyy, v0.xyxx
					    texldl r1, r0, s0
					    texldl r0, r0, s1
					    mul oC0.xyz, r1.y, r0
					    mov oC0.w, c0.x
					
					// approximately 7 instruction slots used (4 texture, 3 arithmetic)"
				}
				SubProgram "d3d11 " {
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					uniform  sampler2D _MainTex;
					uniform  sampler2D _HalfResSourceDepthTexture;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					void main()
					{
					    u_xlat0 = textureLod(_MainTex, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    SV_Target0.xyz = u_xlat0.yyy * u_xlat1.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}"
				}
			}
		}
		Pass {
			Name "DOWNSAMPLE"
			ZClip Off
			ZWrite Off
			Cull Off
			Fog {
				Mode Off
			}
			GpuProgramID 682418
			Program "vp" {
				SubProgram "d3d9 " {
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _MainTex;
					//
					//
					// Registers:
					//
					//   Name         Reg   Size
					//   ------------ ----- ----
					//   _MainTex     s0       1
					//
					
					    ps_3_0
					    def c0, 1, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    mul r0, c0.xxyy, v0.xyxx
					    texldl r0, r0, s0
					    mov oC0.xy, r0
					    mov oC0.zw, c0.y
					
					// approximately 5 instruction slots used (2 texture, 3 arithmetic)"
				}
				SubProgram "d3d11 " {
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					uniform  sampler2D _MainTex;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = textureLod(_MainTex, vs_TEXCOORD0.xy, 0.0);
					    SV_Target0.xy = u_xlat0.xy;
					    SV_Target0.zw = vec2(0.0, 0.0);
					    return;
					}"
				}
			}
		}
		Pass {
			Name "PRESORT"
			ZClip Off
			ZWrite Off
			Cull Off
			Fog {
				Mode Off
			}
			GpuProgramID 785661
			Program "vp" {
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _CoCParams2;
					//   sampler2D _HalfResSourceDepthTexture;
					//   float _ScionForwardMSAAFix;
					//   sampler2D _TiledNeighbourhoodData;
					//   sampler2D _VirtualCameraTexture2;
					//
					//
					// Registers:
					//
					//   Name                       Reg   Size
					//   -------------------------- ----- ----
					//   _CoCParams2                c0       1
					//   _ScionForwardMSAAFix       c1       1
					//   _VirtualCameraTexture2     s0       1
					//   _TiledNeighbourhoodData    s1       1
					//   _HalfResSourceDepthTexture s2       1
					//
					
					    ps_3_0
					    def c2, -2, 3, 3.1415, 0.100000001
					    def c3, -2, 1, 0, 0.5
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    mad r0.x, v0.y, c3.x, c3.y
					    mad r0.y, c1.x, r0.x, v0.y
					    mul r0.xzw, c3.yyzz, v0.x
					    texldl r1, r0, s1
					    texldl r0, r0.xyww, s2
					    add r0.x, -r1.y, r0.w
					    rcp r0.y, r0.w
					    mul_sat r0.x, r0.x, c3.w
					    mad r0.z, r0.x, c2.x, c2.y
					    mul r0.x, r0.x, r0.x
					    mul r1.z, r0.x, r0.z
					    mad r1.y, r0.z, -r0.x, c3.y
					    texldl r2, c3.wwzz, s0
					    mad r0.x, r0.y, r2.y, r2.z
					    max r1.x, r0_abs.x, c3.w
					    min r0.x, c0.x, r1.x
					    mul r0.y, r0.x, r0.x
					    mul oC0.x, r0.x, c2.w
					    mul r0.x, r0.y, c2.z
					    rcp r0.x, r0.x
					    mul oC0.yz, r0.x, r1
					    mov oC0.w, c3.z
					
					// approximately 25 instruction slots used (6 texture, 19 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[11];
						vec4 _CoCParams2;
						vec4 unused_0_2[4];
						float _ScionForwardMSAAFix;
						vec4 unused_0_4[4];
					};
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _VirtualCameraTexture2;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					float u_xlat3;
					vec2 u_xlat4;
					float u_xlat6;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD0.y * -2.0 + 1.0;
					    u_xlat0.y = _ScionForwardMSAAFix * u_xlat0.x + vs_TEXCOORD0.y;
					    u_xlat0.x = vs_TEXCOORD0.x;
					    u_xlat1 = textureLod(_TiledNeighbourhoodData, u_xlat0.xy, 0.0);
					    u_xlat0 = textureLod(_HalfResSourceDepthTexture, u_xlat0.xy, 0.0);
					    u_xlat0.x = (-u_xlat1.y) + u_xlat0.w;
					    u_xlat3 = float(1.0) / u_xlat0.w;
					    u_xlat0.x = u_xlat0.x * 0.5;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat6 = u_xlat0.x * -2.0 + 3.0;
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat4.y = u_xlat0.x * u_xlat6;
					    u_xlat4.x = (-u_xlat6) * u_xlat0.x + 1.0;
					    u_xlat2 = textureLod(_VirtualCameraTexture2, vec2(0.5, 0.5), 0.0);
					    u_xlat0.x = u_xlat3 * u_xlat2.y + u_xlat2.z;
					    u_xlat0.x = max(abs(u_xlat0.x), 0.5);
					    u_xlat0.x = min(u_xlat0.x, _CoCParams2.x);
					    u_xlat3 = u_xlat0.x * u_xlat0.x;
					    SV_Target0.x = u_xlat0.x * 0.100000001;
					    u_xlat0.x = u_xlat3 * 3.1415;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    SV_Target0.yz = u_xlat0.xx * u_xlat4.xy;
					    SV_Target0.w = 0.0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _CoCParams1;
					//   float4 _CoCParams2;
					//   sampler2D _HalfResSourceDepthTexture;
					//   float _ScionForwardMSAAFix;
					//   sampler2D _TiledNeighbourhoodData;
					//   sampler2D _VirtualCameraTexture2;
					//
					//
					// Registers:
					//
					//   Name                       Reg   Size
					//   -------------------------- ----- ----
					//   _CoCParams1                c0       1
					//   _CoCParams2                c1       1
					//   _ScionForwardMSAAFix       c2       1
					//   _VirtualCameraTexture2     s0       1
					//   _TiledNeighbourhoodData    s1       1
					//   _HalfResSourceDepthTexture s2       1
					//
					
					    ps_3_0
					    def c3, -2, 3, 3.1415, 0.100000001
					    def c4, -2, 1, 0, 0.5
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    mad r0.x, v0.y, c4.x, c4.y
					    mad r0.y, c2.x, r0.x, v0.y
					    mul r0.xzw, c4.yyzz, v0.x
					    texldl r1, r0.xyww, s2
					    texldl r0, r0, s1
					    add r0.x, -r0.y, r1.w
					    mul_sat r0.x, r0.x, c4.w
					    add r0.y, -r1.w, c0.z
					    max r1.x, r0.y, -c0.w
					    min r0.y, c0.w, r1.x
					    add r0.y, r0.y, r1.w
					    rcp r0.y, r0.y
					    texldl r1, c4.wwzz, s0
					    mad r0.y, r0.y, r1.y, r1.z
					    max r1.x, r0_abs.y, c4.w
					    min r0.y, c1.x, r1.x
					    mul r0.z, r0.y, r0.y
					    mul oC0.x, r0.y, c3.w
					    mul r0.y, r0.z, c3.z
					    rcp r0.y, r0.y
					    mad r0.z, r0.x, c3.x, c3.y
					    mul r0.x, r0.x, r0.x
					    mul r1.z, r0.x, r0.z
					    mad r1.y, r0.z, -r0.x, c4.y
					    mul oC0.yz, r0.y, r1
					    mov oC0.w, c4.z
					
					// approximately 29 instruction slots used (6 texture, 23 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[10];
						vec4 _CoCParams1;
						vec4 _CoCParams2;
						vec4 unused_0_3[4];
						float _ScionForwardMSAAFix;
						vec4 unused_0_5[4];
					};
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _VirtualCameraTexture2;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					float u_xlat2;
					vec2 u_xlat3;
					float u_xlat4;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD0.y * -2.0 + 1.0;
					    u_xlat0.y = _ScionForwardMSAAFix * u_xlat0.x + vs_TEXCOORD0.y;
					    u_xlat0.x = vs_TEXCOORD0.x;
					    u_xlat1 = textureLod(_HalfResSourceDepthTexture, u_xlat0.xy, 0.0);
					    u_xlat0 = textureLod(_TiledNeighbourhoodData, u_xlat0.xy, 0.0);
					    u_xlat0.x = (-u_xlat0.y) + u_xlat1.w;
					    u_xlat0.x = u_xlat0.x * 0.5;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat2 = (-u_xlat1.w) + _CoCParams1.z;
					    u_xlat2 = max(u_xlat2, (-_CoCParams1.w));
					    u_xlat2 = min(u_xlat2, _CoCParams1.w);
					    u_xlat2 = u_xlat2 + u_xlat1.w;
					    u_xlat2 = float(1.0) / u_xlat2;
					    u_xlat1 = textureLod(_VirtualCameraTexture2, vec2(0.5, 0.5), 0.0);
					    u_xlat2 = u_xlat2 * u_xlat1.y + u_xlat1.z;
					    u_xlat2 = max(abs(u_xlat2), 0.5);
					    u_xlat2 = min(u_xlat2, _CoCParams2.x);
					    u_xlat4 = u_xlat2 * u_xlat2;
					    SV_Target0.x = u_xlat2 * 0.100000001;
					    u_xlat2 = u_xlat4 * 3.1415;
					    u_xlat2 = float(1.0) / u_xlat2;
					    u_xlat4 = u_xlat0.x * -2.0 + 3.0;
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat3.y = u_xlat0.x * u_xlat4;
					    u_xlat3.x = (-u_xlat4) * u_xlat0.x + 1.0;
					    SV_Target0.yz = vec2(u_xlat2) * u_xlat3.xy;
					    SV_Target0.w = 0.0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _AvgCenterDepth;
					//   float4 _CoCParams2;
					//   sampler2D _HalfResSourceDepthTexture;
					//   float _ScionForwardMSAAFix;
					//   sampler2D _TiledNeighbourhoodData;
					//   float4 _VirtualCameraParams2;
					//   sampler2D _VirtualCameraTexture1;
					//
					//
					// Registers:
					//
					//   Name                       Reg   Size
					//   -------------------------- ----- ----
					//   _VirtualCameraParams2      c0       1
					//   _CoCParams2                c1       1
					//   _ScionForwardMSAAFix       c2       1
					//   _VirtualCameraTexture1     s0       1
					//   _TiledNeighbourhoodData    s1       1
					//   _HalfResSourceDepthTexture s2       1
					//   _AvgCenterDepth            s3       1
					//
					
					    ps_3_0
					    def c3, -2, 1, 0, 0.5
					    def c4, -2, 3, 3.1415, 0.100000001
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    dcl_2d s3
					    texldl r0, c3.wwzz, s0
					    rcp r0.x, r0.w
					    mul r0.y, c0.y, c0.y
					    mul r0.x, r0.x, r0.y
					    texldl r1, c3.wwzz, s3
					    mul r0.y, r0.x, r1.x
					    add r0.z, r1.x, -c0.y
					    rcp r0.z, r0.z
					    mul r1.x, r0.z, r0.y
					    mul r1.y, r0.z, -r0.x
					    mul r0.xy, r1, c0.w
					    mad r0.z, v0.y, c3.x, c3.y
					    mad r1.y, c2.x, r0.z, v0.y
					    mul r1.xzw, c3.yyzz, v0.x
					    texldl r2, r1.xyww, s2
					    texldl r1, r1, s1
					    add r0.z, -r1.y, r2.w
					    rcp r0.w, r2.w
					    mad r0.x, r0.w, r0.x, r0.y
					    max r1.x, r0_abs.x, c3.w
					    min r0.x, c1.x, r1.x
					    mul_sat r0.y, r0.z, c3.w
					    mul r0.z, r0.x, r0.x
					    mul oC0.x, r0.x, c4.w
					    mul r0.x, r0.z, c4.z
					    rcp r0.x, r0.x
					    mad r0.z, r0.y, c4.x, c4.y
					    mul r0.y, r0.y, r0.y
					    mul r1.z, r0.y, r0.z
					    mad r1.y, r0.z, -r0.y, c3.y
					    mul oC0.yz, r0.x, r1
					    mov oC0.w, c3.z
					
					// approximately 36 instruction slots used (8 texture, 28 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[8];
						vec4 _VirtualCameraParams2;
						vec4 unused_0_2[2];
						vec4 _CoCParams2;
						vec4 unused_0_4[4];
						float _ScionForwardMSAAFix;
						vec4 unused_0_6[4];
					};
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _AvgCenterDepth;
					uniform  sampler2D _VirtualCameraTexture1;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					float u_xlat3;
					vec2 u_xlat4;
					float u_xlat6;
					float u_xlat9;
					void main()
					{
					    u_xlat0 = textureLod(_VirtualCameraTexture1, vec2(0.5, 0.5), 0.0);
					    u_xlat0.x = _VirtualCameraParams2.y / u_xlat0.w;
					    u_xlat0.x = u_xlat0.x * _VirtualCameraParams2.y;
					    u_xlat1 = textureLod(_AvgCenterDepth, vec2(0.5, 0.5), 0.0);
					    u_xlat3 = u_xlat0.x * u_xlat1.x;
					    u_xlat6 = u_xlat1.x + (-_VirtualCameraParams2.y);
					    u_xlat6 = float(1.0) / u_xlat6;
					    u_xlat1.x = u_xlat6 * u_xlat3;
					    u_xlat1.y = u_xlat6 * (-u_xlat0.x);
					    u_xlat0.xy = u_xlat1.xy * _VirtualCameraParams2.ww;
					    u_xlat6 = vs_TEXCOORD0.y * -2.0 + 1.0;
					    u_xlat1.y = _ScionForwardMSAAFix * u_xlat6 + vs_TEXCOORD0.y;
					    u_xlat1.x = vs_TEXCOORD0.x;
					    u_xlat2 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat1 = textureLod(_TiledNeighbourhoodData, u_xlat1.xy, 0.0);
					    u_xlat6 = (-u_xlat1.y) + u_xlat2.w;
					    u_xlat9 = float(1.0) / u_xlat2.w;
					    u_xlat0.x = u_xlat9 * u_xlat0.x + u_xlat0.y;
					    u_xlat0.x = max(abs(u_xlat0.x), 0.5);
					    u_xlat0.x = min(u_xlat0.x, _CoCParams2.x);
					    u_xlat3 = u_xlat6 * 0.5;
					    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
					    u_xlat6 = u_xlat0.x * u_xlat0.x;
					    SV_Target0.x = u_xlat0.x * 0.100000001;
					    u_xlat0.x = u_xlat6 * 3.1415;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat6 = u_xlat3 * -2.0 + 3.0;
					    u_xlat3 = u_xlat3 * u_xlat3;
					    u_xlat4.y = u_xlat3 * u_xlat6;
					    u_xlat4.x = (-u_xlat6) * u_xlat3 + 1.0;
					    SV_Target0.yz = u_xlat0.xx * u_xlat4.xy;
					    SV_Target0.w = 0.0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _CoCParams1;
					//   float4 _CoCParams2;
					//   sampler2D _HalfResSourceDepthTexture;
					//   float _ScionForwardMSAAFix;
					//   sampler2D _TiledNeighbourhoodData;
					//
					//
					// Registers:
					//
					//   Name                       Reg   Size
					//   -------------------------- ----- ----
					//   _CoCParams1                c0       1
					//   _CoCParams2                c1       1
					//   _ScionForwardMSAAFix       c2       1
					//   _TiledNeighbourhoodData    s0       1
					//   _HalfResSourceDepthTexture s1       1
					//
					
					    ps_3_0
					    def c3, -2, 1, 0, 0.5
					    def c4, -2, 3, 3.1415, 0.100000001
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    mad r0.x, v0.y, c3.x, c3.y
					    mad r0.y, c2.x, r0.x, v0.y
					    mul r0.xzw, c3.yyzz, v0.x
					    texldl r1, r0, s0
					    texldl r0, r0.xyww, s1
					    add r0.x, -r1.y, r0.w
					    rcp r0.y, r0.w
					    mad r0.y, r0.y, c0.x, c0.y
					    max r1.x, r0_abs.y, c3.w
					    min r0.y, c1.x, r1.x
					    mul_sat r0.x, r0.x, c3.w
					    mad r0.z, r0.x, c4.x, c4.y
					    mul r0.x, r0.x, r0.x
					    mul r1.z, r0.x, r0.z
					    mad r1.y, r0.z, -r0.x, c3.y
					    mul r0.x, r0.y, r0.y
					    mul oC0.x, r0.y, c4.w
					    mul r0.x, r0.x, c4.z
					    rcp r0.x, r0.x
					    mul oC0.yz, r0.x, r1
					    mov oC0.w, c3.z
					
					// approximately 23 instruction slots used (4 texture, 19 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[10];
						vec4 _CoCParams1;
						vec4 _CoCParams2;
						vec4 unused_0_3[4];
						float _ScionForwardMSAAFix;
						vec4 unused_0_5[4];
					};
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _TiledNeighbourhoodData;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					float u_xlat2;
					vec2 u_xlat3;
					float u_xlat4;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD0.y * -2.0 + 1.0;
					    u_xlat0.y = _ScionForwardMSAAFix * u_xlat0.x + vs_TEXCOORD0.y;
					    u_xlat0.x = vs_TEXCOORD0.x;
					    u_xlat1 = textureLod(_TiledNeighbourhoodData, u_xlat0.xy, 0.0);
					    u_xlat0 = textureLod(_HalfResSourceDepthTexture, u_xlat0.xy, 0.0);
					    u_xlat0.x = (-u_xlat1.y) + u_xlat0.w;
					    u_xlat2 = float(1.0) / u_xlat0.w;
					    u_xlat2 = u_xlat2 * _CoCParams1.x + _CoCParams1.y;
					    u_xlat2 = max(abs(u_xlat2), 0.5);
					    u_xlat2 = min(u_xlat2, _CoCParams2.x);
					    u_xlat0.x = u_xlat0.x * 0.5;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat4 = u_xlat0.x * -2.0 + 3.0;
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat3.y = u_xlat0.x * u_xlat4;
					    u_xlat3.x = (-u_xlat4) * u_xlat0.x + 1.0;
					    u_xlat0.x = u_xlat2 * u_xlat2;
					    SV_Target0.x = u_xlat2 * 0.100000001;
					    u_xlat0.x = u_xlat0.x * 3.1415;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    SV_Target0.yz = u_xlat0.xx * u_xlat3.xy;
					    SV_Target0.w = 0.0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _CoCParams1;
					//   float4 _CoCParams2;
					//   sampler2D _HalfResSourceDepthTexture;
					//   float _ScionForwardMSAAFix;
					//   sampler2D _TiledNeighbourhoodData;
					//
					//
					// Registers:
					//
					//   Name                       Reg   Size
					//   -------------------------- ----- ----
					//   _CoCParams1                c0       1
					//   _CoCParams2                c1       1
					//   _ScionForwardMSAAFix       c2       1
					//   _TiledNeighbourhoodData    s0       1
					//   _HalfResSourceDepthTexture s1       1
					//
					
					    ps_3_0
					    def c3, -2, 1, 0, 0.5
					    def c4, -2, 3, 3.1415, 0.100000001
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    mad r0.x, v0.y, c3.x, c3.y
					    mad r0.y, c2.x, r0.x, v0.y
					    mul r0.xzw, c3.yyzz, v0.x
					    texldl r1, r0.xyww, s1
					    texldl r0, r0, s0
					    add r0.x, -r0.y, r1.w
					    mul_sat r0.x, r0.x, c3.w
					    add r0.y, -r1.w, c0.z
					    max r1.x, r0.y, -c0.w
					    min r0.y, c0.w, r1.x
					    add r0.y, r0.y, r1.w
					    rcp r0.y, r0.y
					    mad r0.y, r0.y, c0.x, c0.y
					    max r1.x, r0_abs.y, c3.w
					    min r0.y, c1.x, r1.x
					    mul r0.z, r0.y, r0.y
					    mul oC0.x, r0.y, c4.w
					    mul r0.y, r0.z, c4.z
					    rcp r0.y, r0.y
					    mad r0.z, r0.x, c4.x, c4.y
					    mul r0.x, r0.x, r0.x
					    mul r1.z, r0.x, r0.z
					    mad r1.y, r0.z, -r0.x, c3.y
					    mul oC0.yz, r0.y, r1
					    mov oC0.w, c3.z
					
					// approximately 27 instruction slots used (4 texture, 23 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[10];
						vec4 _CoCParams1;
						vec4 _CoCParams2;
						vec4 unused_0_3[4];
						float _ScionForwardMSAAFix;
						vec4 unused_0_5[4];
					};
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _TiledNeighbourhoodData;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					float u_xlat2;
					vec2 u_xlat3;
					float u_xlat4;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD0.y * -2.0 + 1.0;
					    u_xlat0.y = _ScionForwardMSAAFix * u_xlat0.x + vs_TEXCOORD0.y;
					    u_xlat0.x = vs_TEXCOORD0.x;
					    u_xlat1 = textureLod(_HalfResSourceDepthTexture, u_xlat0.xy, 0.0);
					    u_xlat0 = textureLod(_TiledNeighbourhoodData, u_xlat0.xy, 0.0);
					    u_xlat0.x = (-u_xlat0.y) + u_xlat1.w;
					    u_xlat0.x = u_xlat0.x * 0.5;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat2 = (-u_xlat1.w) + _CoCParams1.z;
					    u_xlat2 = max(u_xlat2, (-_CoCParams1.w));
					    u_xlat2 = min(u_xlat2, _CoCParams1.w);
					    u_xlat2 = u_xlat2 + u_xlat1.w;
					    u_xlat2 = float(1.0) / u_xlat2;
					    u_xlat2 = u_xlat2 * _CoCParams1.x + _CoCParams1.y;
					    u_xlat2 = max(abs(u_xlat2), 0.5);
					    u_xlat2 = min(u_xlat2, _CoCParams2.x);
					    u_xlat4 = u_xlat2 * u_xlat2;
					    SV_Target0.x = u_xlat2 * 0.100000001;
					    u_xlat2 = u_xlat4 * 3.1415;
					    u_xlat2 = float(1.0) / u_xlat2;
					    u_xlat4 = u_xlat0.x * -2.0 + 3.0;
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat3.y = u_xlat0.x * u_xlat4;
					    u_xlat3.x = (-u_xlat4) * u_xlat0.x + 1.0;
					    SV_Target0.yz = vec2(u_xlat2) * u_xlat3.xy;
					    SV_Target0.w = 0.0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _AvgCenterDepth;
					//   float4 _CoCParams2;
					//   sampler2D _HalfResSourceDepthTexture;
					//   float _ScionForwardMSAAFix;
					//   sampler2D _TiledNeighbourhoodData;
					//   float4 _VirtualCameraParams1;
					//   float4 _VirtualCameraParams2;
					//
					//
					// Registers:
					//
					//   Name                       Reg   Size
					//   -------------------------- ----- ----
					//   _VirtualCameraParams1      c0       1
					//   _VirtualCameraParams2      c1       1
					//   _CoCParams2                c2       1
					//   _ScionForwardMSAAFix       c3       1
					//   _TiledNeighbourhoodData    s0       1
					//   _HalfResSourceDepthTexture s1       1
					//   _AvgCenterDepth            s2       1
					//
					
					    ps_3_0
					    def c4, -2, 3, 3.1415, 0.100000001
					    def c5, -2, 1, 0, 0.5
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    rcp r0.x, c0.y
					    mul r0.y, c1.y, c1.y
					    mul r0.x, r0.x, r0.y
					    texldl r1, c5.wwzz, s2
					    mul r0.y, r0.x, r1.x
					    add r0.z, r1.x, -c1.y
					    rcp r0.z, r0.z
					    mul r1.x, r0.z, r0.y
					    mul r1.y, r0.z, -r0.x
					    mul r0.xy, r1, c1.w
					    mad r0.z, v0.y, c5.x, c5.y
					    mad r1.y, c3.x, r0.z, v0.y
					    mul r1.xzw, c5.yyzz, v0.x
					    texldl r2, r1.xyww, s1
					    texldl r1, r1, s0
					    add r0.z, -r1.y, r2.w
					    rcp r0.w, r2.w
					    mad r0.x, r0.w, r0.x, r0.y
					    max r1.x, r0_abs.x, c5.w
					    min r0.x, c2.x, r1.x
					    mul_sat r0.y, r0.z, c5.w
					    mul r0.z, r0.x, r0.x
					    mul oC0.x, r0.x, c4.w
					    mul r0.x, r0.z, c4.z
					    rcp r0.x, r0.x
					    mad r0.z, r0.y, c4.x, c4.y
					    mul r0.y, r0.y, r0.y
					    mul r1.z, r0.y, r0.z
					    mad r1.y, r0.z, -r0.y, c5.y
					    mul oC0.yz, r0.x, r1
					    mov oC0.w, c5.z
					
					// approximately 34 instruction slots used (6 texture, 28 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[7];
						vec4 _VirtualCameraParams1;
						vec4 _VirtualCameraParams2;
						vec4 unused_0_3[2];
						vec4 _CoCParams2;
						vec4 unused_0_5[4];
						float _ScionForwardMSAAFix;
						vec4 unused_0_7[4];
					};
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _AvgCenterDepth;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec2 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					float u_xlat3;
					vec2 u_xlat4;
					float u_xlat6;
					float u_xlat9;
					void main()
					{
					    u_xlat0.x = _VirtualCameraParams2.y / _VirtualCameraParams1.y;
					    u_xlat0.x = u_xlat0.x * _VirtualCameraParams2.y;
					    u_xlat1 = textureLod(_AvgCenterDepth, vec2(0.5, 0.5), 0.0);
					    u_xlat3 = u_xlat0.x * u_xlat1.x;
					    u_xlat6 = u_xlat1.x + (-_VirtualCameraParams2.y);
					    u_xlat6 = float(1.0) / u_xlat6;
					    u_xlat1.x = u_xlat6 * u_xlat3;
					    u_xlat1.y = u_xlat6 * (-u_xlat0.x);
					    u_xlat0.xy = u_xlat1.xy * _VirtualCameraParams2.ww;
					    u_xlat6 = vs_TEXCOORD0.y * -2.0 + 1.0;
					    u_xlat1.y = _ScionForwardMSAAFix * u_xlat6 + vs_TEXCOORD0.y;
					    u_xlat1.x = vs_TEXCOORD0.x;
					    u_xlat2 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat1 = textureLod(_TiledNeighbourhoodData, u_xlat1.xy, 0.0);
					    u_xlat6 = (-u_xlat1.y) + u_xlat2.w;
					    u_xlat9 = float(1.0) / u_xlat2.w;
					    u_xlat0.x = u_xlat9 * u_xlat0.x + u_xlat0.y;
					    u_xlat0.x = max(abs(u_xlat0.x), 0.5);
					    u_xlat0.x = min(u_xlat0.x, _CoCParams2.x);
					    u_xlat3 = u_xlat6 * 0.5;
					    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
					    u_xlat6 = u_xlat0.x * u_xlat0.x;
					    SV_Target0.x = u_xlat0.x * 0.100000001;
					    u_xlat0.x = u_xlat6 * 3.1415;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat6 = u_xlat3 * -2.0 + 3.0;
					    u_xlat3 = u_xlat3 * u_xlat3;
					    u_xlat4.y = u_xlat3 * u_xlat6;
					    u_xlat4.x = (-u_xlat6) * u_xlat3 + 1.0;
					    SV_Target0.yz = u_xlat0.xx * u_xlat4.xy;
					    SV_Target0.w = 0.0;
					    return;
					}"
				}
			}
		}
		Pass {
			Name "BLURTAPPASS25"
			ZClip Off
			ZWrite Off
			Cull Off
			Fog {
				Mode Off
			}
			GpuProgramID 796762
			Program "vp" {
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" "SC_DOF_MASK_ON" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" "SC_DOF_MASK_ON" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" "SC_DOF_MASK_ON" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" "SC_DOF_MASK_ON" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" "SC_DOF_MASK_ON" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" "SC_DOF_MASK_ON" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" "SC_DOF_MASK_ON" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" "SC_DOF_MASK_ON" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" "SC_DOF_MASK_ON" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" "SC_DOF_MASK_ON" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" "SC_DOF_MASK_ON" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" "SC_DOF_MASK_ON" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _CoCParams1;
					//   sampler2D _HalfResSourceDepthTexture;
					//   sampler2D _PresortTexture;
					//   float4 _ScionResolutionParameters1;
					//   float4 _ScionResolutionParameters2;
					//   float _TemporalUVOffset;
					//   sampler2D _TiledNeighbourhoodData;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters1 c0       1
					//   _ScionResolutionParameters2 c1       1
					//   _CoCParams1                 c2       1
					//   _TemporalUVOffset           c3       1
					//   _TiledNeighbourhoodData     s0       1
					//   _HalfResSourceDepthTexture  s1       1
					//   _PresortTexture             s2       1
					//
					
					    ps_3_0
					    def c4, 10, 0.00100000005, 0.800000012, 0
					    def c5, 1, 0, 9.99999975e-005, 0.400000006
					    def c6, 0.000231481477, 0.25, 0, -1
					    def c7, 0, 1.37, 3571, 0
					    def c8, -5, -6, -7, -8
					    def c9, 0.707106829, -0.707106829, 0, 0.349999994
					    def c10, -13, -14, -15, -16
					    def c11, -17, -18, -19, -20
					    def c12, -21, -22, -23, -24
					    def c13, 0.5, 0.125663713, 9.99999994e-009, 0
					    def c14, 9, 10, 11, 12
					    def c15, 2, -1, -3, -4
					    def c16, -0.923879385, -0.382683486, 0.382683486, -0.382683396
					    defi i0, 8, 0, 0, 0
					    defi i1, 16, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    mul r0, c5.xxyy, v0.xyxx
					    texldl r1, r0, s0
					    texldl r2, r0, s1
					    if_lt r1.x, c5.x
					      mov oC1, c5.y
					    else
					      texldl r0, r0, s2
					      add_sat r0.x, -r2.w, c2.z
					      add r0.x, r0.x, c5.x
					      mad r0.x, r0.y, r0.x, c5.z
					      add r0.y, r0.z, c5.z
					      mul r1.yzw, r0.x, r2.xxyz
					      mul r3.xyz, r0.y, r2
					      mul r0.z, r1.x, c5.w
					      mul r4.xy, c0, v0
					      mov r5.zw, c5.y
					      mov r6.xyz, r3
					      mov r6.w, r0.y
					      mov r7.xyz, r1.yzww
					      mov r7.w, r0.x
					      mov r0.w, c5.x
					      rep i0
					        mov r8.y, c7.y
					        mad r3.w, r0.w, r8.y, c3.x
					        mul r4.zw, r3.w, r4.xyxy
					        mad r4.zw, r4, c6.x, c6.xyyz
					        dp2add r3.w, r4.zwzw, c7.z, c7.w
					        mul r4.zw, r4, r3.w
					        frc r4.zw, r4
					        mad r4.zw, r4, c15.x, c15.y
					        add r8, r0.w, -c15_abs.yxzw
					        add r9, r0.w, c8
					        cmp r10.xy, -r8_abs.x, c9, c9.z
					        cmp r8.xy, -r8_abs.y, c6.wzzw, r10
					        cmp r8.xy, -r8_abs.z, c9.x, r8
					        cmp r8.xy, -r8_abs.w, c6.zwzw, r8
					        cmp r8.xy, -r9_abs.x, c5.yxzw, r8
					        cmp r8.xy, -r9_abs.y, c9.y, r8
					        cmp r8.xy, -r9_abs.z, c5, r8
					        cmp r8.xy, -r9_abs.w, c9.yxzw, r8
					        mad r4.zw, r4, c9.w, r8.xyxy
					        mul r4.zw, r0.z, r4
					        mad r5.xy, r4.zwzw, c1, v0
					        texldl r8, r5.xyww, s1
					        texldl r9, r5, s2
					        dp2add r3.w, r4.zwzw, r4.zwzw, c5.y
					        rsq r3.w, r3.w
					        rcp r3.w, r3.w
					        mad r3.w, r9.x, c4.x, -r3.w
					        add r3.w, r3.w, c6.y
					        mul_sat r3.w, r3.w, -c15.w
					        add_sat r4.z, -r8.w, c2.z
					        mul r4.w, r9.y, r3.w
					        add r4.z, r4.z, c5.x
					        mad r10.w, r4.w, r4.z, c4.y
					        mad r9.w, r3.w, r9.z, c4.y
					        mul r10.xyz, r8, r10.w
					        mul r9.xyz, r8, r9.w
					        add r7, r7, r10
					        add r6, r6, r9
					        add r0.w, r0.w, c5.x
					      endrep
					      if_lt c15.x, r1.x
					        add_sat r0.x, r1.x, -c15.x
					        mul r0.y, r1.x, c4.z
					        mov r3.zw, c5.y
					        mov r5, r6
					        mov r8, r7
					        mov r0.z, c14.x
					        rep i1
					          mov r1.y, c7.y
					          mad r0.w, r0.z, r1.y, c3.x
					          mul r1.yz, r0.w, r4.xxyw
					          mad r1.yz, r1, c6.x, c6
					          dp2add r0.w, r1.yzzw, c7.z, c7.w
					          mul r1.yz, r1, r0.w
					          frc r1.yz, r1
					          mad r1.yz, r1, c15.x, c15.y
					          add r9, r0.z, -c14
					          add r10, r0.z, c10
					          add r11, r0.z, c11
					          add r12, r0.z, c12
					          cmp r4.zw, -r9_abs.x, c9.xyxy, c9.z
					          cmp r4.zw, -r9_abs.y, c16.xyxy, r4
					          cmp r4.zw, -r9_abs.z, c6.xywz, r4
					          cmp r4.zw, -r9_abs.w, c16.xyxz, r4
					          cmp r4.zw, -r10_abs.x, c9.x, r4
					          cmp r4.zw, -r10_abs.y, c16.xyzx, r4
					          cmp r4.zw, -r10_abs.z, -c16.xywx, r4
					          cmp r4.zw, -r10_abs.w, c6, r4
					          cmp r4.zw, -r11_abs.x, c5.xyyx, r4
					          cmp r4.zw, -r11_abs.y, c16.xywx, r4
					          cmp r4.zw, -r11_abs.z, -c16.xyzx, r4
					          cmp r4.zw, -r11_abs.w, c9.y, r4
					          cmp r4.zw, -r12_abs.x, -c16.xyxz, r4
					          cmp r4.zw, -r12_abs.y, c5.xyxy, r4
					          cmp r4.zw, -r12_abs.z, -c16.xyxy, r4
					          cmp r4.zw, -r12_abs.w, c9.xyyx, r4
					          mad r1.yz, r1, c9.w, r4.xzww
					          mul r1.yz, r0.y, r1
					          mad r3.xy, r1.yzzw, c1, v0
					          texldl r9, r3.xyww, s1
					          texldl r10, r3, s2
					          dp2add r0.w, r1.yzzw, r1.yzzw, c5.y
					          rsq r0.w, r0.w
					          rcp r0.w, r0.w
					          mad r0.w, r10.x, c4.x, -r0.w
					          add r0.w, r0.w, c6.y
					          mul_sat r0.w, r0.w, -c15.w
					          mul r0.w, r0.x, r0.w
					          add_sat r1.y, -r9.w, c2.z
					          mul r1.z, r10.y, r0.w
					          add r1.y, r1.y, c5.x
					          mad r11.w, r1.z, r1.y, c4.y
					          mad r10.w, r0.w, r10.z, c4.y
					          mul r11.xyz, r9, r11.w
					          mul r10.xyz, r9, r10.w
					          add r8, r8, r11
					          add r5, r5, r10
					          add r0.z, r0.z, c5.x
					        endrep
					        mov r6, r5
					        mov r7, r8
					      endif
					      max r0.x, r1.x, c13.x
					      mul r0.x, r0.x, r0.x
					      mul r0.x, r0.x, r7.w
					      mul r0.x, r0.x, c13.y
					      mov_sat r0, r0.x
					      add r1.x, r6.w, c13.z
					      rcp r1.x, r1.x
					      mul r1.xyz, r1.x, r6
					      add r1.w, r7.w, c13.z
					      rcp r1.w, r1.w
					      mad r3.xyz, r7, r1.w, -r1
					      mad r2.xyz, r0.w, r3, r1
					      mov oC1, r0
					    endif
					    mov oC0, r2
					
					// approximately 160 instruction slots used (14 texture, 146 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _ScionResolutionParameters1;
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_3[6];
						vec4 _CoCParams1;
						vec4 unused_0_5[9];
						float _TemporalUVOffset;
					};
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _PresortTexture;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					layout(location = 1) out vec4 SV_Target1;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec2 u_xlat12;
					bool u_xlatb12;
					float u_xlat13;
					vec2 u_xlat24;
					float u_xlat36;
					void main()
					{
					    u_xlat0 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlatb12 = u_xlat0.x<1.0;
					    if(u_xlatb12){
					        SV_Target0 = u_xlat1;
					        SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
					        return;
					    }
					    u_xlat2 = textureLod(_PresortTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat12.x = (-u_xlat1.w) + _CoCParams1.z;
					    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
					    u_xlat12.x = u_xlat12.x + 1.0;
					    u_xlat3.w = u_xlat2.y * u_xlat12.x + 9.99999975e-05;
					    u_xlat2.w = u_xlat2.z + 9.99999975e-05;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat3.www;
					    u_xlat2.xyz = u_xlat1.xyz * u_xlat2.www;
					    u_xlat12.x = u_xlat0.x * 0.400000006;
					    u_xlat4 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(1.37, 2.74000001, 4.11000013, 5.48000002);
					    u_xlat5 = vs_TEXCOORD0.xyxy * _ScionResolutionParameters1.xyxy;
					    u_xlat6 = u_xlat4.xxyy * u_xlat5.zwzw;
					    u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat24.x = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat6.xy * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, -0.707106829);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat8.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat8.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat9.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat8.w = u_xlat24.x * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat3 = u_xlat3 + u_xlat9;
					    u_xlat2 = u_xlat2 + u_xlat8;
					    u_xlat24.x = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat6.zw * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.349999994, 0.349999994) + vec2(-1.0, 0.0);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat6.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat7.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat8.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat7.w = u_xlat24.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat6.xyz * u_xlat7.www;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat2 = u_xlat2 + u_xlat7;
					    u_xlat4 = u_xlat4.zzww * u_xlat5.zwzw;
					    u_xlat4 = u_xlat4 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat24.x = dot(u_xlat4.xy, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat4.xy * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, 0.707106829);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat6.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat7.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat8.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat7.w = u_xlat24.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat6.xyz * u_xlat7.www;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat2 = u_xlat2 + u_xlat7;
					    u_xlat24.x = dot(u_xlat4.zw, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat4.zw * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, -1.0);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat4 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat6 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat6.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat4.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat6.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat7.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat6.w = u_xlat24.x * u_xlat6.z + 0.00100000005;
					    u_xlat7.xyz = u_xlat4.xyz * u_xlat7.www;
					    u_xlat6.xyz = u_xlat4.xyz * u_xlat6.www;
					    u_xlat3 = u_xlat3 + u_xlat7;
					    u_xlat2 = u_xlat2 + u_xlat6;
					    u_xlat4 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(6.8499999, 8.22000027, 9.59000015, 10.96);
					    u_xlat6 = u_xlat4.xxyy * u_xlat5.zwzw;
					    u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat24.x = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat6.xy * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, 1.0);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat8.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat8.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat9.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat8.w = u_xlat24.x * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat3 = u_xlat3 + u_xlat9;
					    u_xlat2 = u_xlat2 + u_xlat8;
					    u_xlat24.x = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat6.zw * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, -0.707106829);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat6.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat7.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat8.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat7.w = u_xlat24.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat6.xyz * u_xlat7.www;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat2 = u_xlat2 + u_xlat7;
					    u_xlat4 = u_xlat4.zzww * u_xlat5.zwzw;
					    u_xlat4 = u_xlat4 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat24.x = dot(u_xlat4.xy, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat4.xy * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.349999994, 0.349999994) + vec2(1.0, 0.0);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat6.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat7.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat8.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat7.w = u_xlat24.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat6.xyz * u_xlat7.www;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat2 = u_xlat2 + u_xlat7;
					    u_xlat24.x = dot(u_xlat4.zw, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat4.zw * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, 0.707106829);
					    u_xlat12.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat12.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat4 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat6 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat12.x = dot(u_xlat12.xy, u_xlat12.xy);
					    u_xlat12.x = sqrt(u_xlat12.x);
					    u_xlat12.x = u_xlat6.x * 10.0 + (-u_xlat12.x);
					    u_xlat12.x = u_xlat12.x + 0.25;
					    u_xlat12.x = u_xlat12.x * 4.0;
					    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
					    u_xlat24.x = (-u_xlat4.w) + _CoCParams1.z;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = u_xlat6.y * u_xlat12.x;
					    u_xlat24.x = u_xlat24.x + 1.0;
					    u_xlat7.w = u_xlat36 * u_xlat24.x + 0.00100000005;
					    u_xlat6.w = u_xlat12.x * u_xlat6.z + 0.00100000005;
					    u_xlat7.xyz = u_xlat4.xyz * u_xlat7.www;
					    u_xlat6.xyz = u_xlat4.xyz * u_xlat6.www;
					    u_xlat3 = u_xlat3 + u_xlat7;
					    u_xlat2 = u_xlat2 + u_xlat6;
					    u_xlatb12 = 2.0<u_xlat0.x;
					    if(u_xlatb12){
					        u_xlat12.x = u_xlat0.x + -2.0;
					        u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
					        u_xlat24.x = u_xlat0.x * 0.800000012;
					        u_xlat4 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(12.3299999, 13.6999998, 15.0699997, 16.4400005);
					        u_xlat6 = u_xlat4.xxyy * u_xlat5.zwzw;
					        u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, -0.707106829);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat8.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat7 = u_xlat3 + u_xlat9;
					        u_xlat8 = u_xlat2 + u_xlat8;
					        u_xlat36 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.923879385, -0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat6.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat6.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat7 + u_xlat10;
					        u_xlat7 = u_xlat8 + u_xlat9;
					        u_xlat4 = u_xlat4.zzww * u_xlat5.zwzw;
					        u_xlat4 = u_xlat4 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat4.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat4.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-1.0, 0.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat7 = u_xlat7 + u_xlat9;
					        u_xlat36 = dot(u_xlat4.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat4.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.923879385, 0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					        u_xlat4 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat4.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat4.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat4.w = u_xlat36 * u_xlat4.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat4.xyz = u_xlat4.www * u_xlat8.xyz;
					        u_xlat6 = u_xlat6 + u_xlat9;
					        u_xlat4 = u_xlat4 + u_xlat7;
					        u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(17.8099995, 19.1800003, 20.5499992, 21.9200001);
					        u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, 0.707106829);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat10.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat6 = u_xlat6 + u_xlat11;
					        u_xlat4 = u_xlat4 + u_xlat10;
					        u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.382683486, -0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat7 = u_xlat5.zwzw * u_xlat7.zzww;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.382683396, 0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, -1.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat7 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat7.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat7.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat7.w = u_xlat36 * u_xlat7.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat7.xyz = u_xlat7.www * u_xlat8.xyz;
					        u_xlat6 = u_xlat6 + u_xlat9;
					        u_xlat4 = u_xlat4 + u_xlat7;
					        u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(23.2900009, 24.6599998, 26.0300007, 27.3999996);
					        u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, 1.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat10.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat6 = u_xlat6 + u_xlat11;
					        u_xlat4 = u_xlat4 + u_xlat10;
					        u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.382683396, -0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat7 = u_xlat5.zwzw * u_xlat7.zzww;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.382683486, 0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, -0.707106829);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat7 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat7.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat7.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat7.w = u_xlat36 * u_xlat7.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat7.xyz = u_xlat7.www * u_xlat8.xyz;
					        u_xlat6 = u_xlat6 + u_xlat9;
					        u_xlat4 = u_xlat4 + u_xlat7;
					        u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(28.7700005, 30.1399994, 31.5100002, 32.8800011);
					        u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.923879385, -0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat10.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat6 = u_xlat6 + u_xlat11;
					        u_xlat4 = u_xlat4 + u_xlat10;
					        u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(1.0, 0.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat5 = u_xlat5 * u_xlat7.zzww;
					        u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.923879385, 0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat8.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat6 = u_xlat6 + u_xlat9;
					        u_xlat4 = u_xlat4 + u_xlat8;
					        u_xlat36 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, 0.707106829);
					        u_xlat24.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					        u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					        u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					        u_xlat24.x = sqrt(u_xlat24.x);
					        u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					        u_xlat24.x = u_xlat24.x + 0.25;
					        u_xlat24.x = u_xlat24.x * 4.0;
					        u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					        u_xlat12.x = u_xlat12.x * u_xlat24.x;
					        u_xlat24.x = (-u_xlat5.w) + _CoCParams1.z;
					        u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					        u_xlat36 = u_xlat7.y * u_xlat12.x;
					        u_xlat24.x = u_xlat24.x + 1.0;
					        u_xlat8.w = u_xlat36 * u_xlat24.x + 0.00100000005;
					        u_xlat7.w = u_xlat12.x * u_xlat7.z + 0.00100000005;
					        u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					        u_xlat7.xyz = u_xlat5.xyz * u_xlat7.www;
					        u_xlat3 = u_xlat6 + u_xlat8;
					        u_xlat2 = u_xlat4 + u_xlat7;
					    }
					    u_xlat0.x = max(u_xlat0.x, 0.5);
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat3.w;
					    u_xlat0.x = u_xlat0.x * 0.125663713;
					    u_xlat0 = u_xlat0.xxxx;
					    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
					    u_xlat1.x = u_xlat2.w + 9.99999994e-09;
					    u_xlat1.xyz = u_xlat2.xyz / u_xlat1.xxx;
					    u_xlat2.x = u_xlat3.w + 9.99999994e-09;
					    u_xlat2.xyz = u_xlat3.xyz / u_xlat2.xxx;
					    u_xlat2.xyz = (-u_xlat1.xyz) + u_xlat2.xyz;
					    SV_Target0.xyz = u_xlat0.www * u_xlat2.xyz + u_xlat1.xyz;
					    SV_Target0.w = u_xlat1.w;
					    SV_Target1 = u_xlat0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" "SC_DOF_MASK_ON" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _CoCParams1;
					//   sampler2D _ExclusionMask;
					//   sampler2D _HalfResSourceDepthTexture;
					//   sampler2D _PresortTexture;
					//   float4 _ScionResolutionParameters1;
					//   float4 _ScionResolutionParameters2;
					//   float _TemporalUVOffset;
					//   sampler2D _TiledNeighbourhoodData;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters1 c0       1
					//   _ScionResolutionParameters2 c1       1
					//   _CoCParams1                 c2       1
					//   _TemporalUVOffset           c3       1
					//   _TiledNeighbourhoodData     s0       1
					//   _ExclusionMask              s1       1
					//   _HalfResSourceDepthTexture  s2       1
					//   _PresortTexture             s3       1
					//
					
					    ps_3_0
					    def c4, 10, 0.00100000005, 0.800000012, 0
					    def c5, 1, 0, 9.99999975e-005, 0.400000006
					    def c6, 0, 1.37, 3571, 0
					    def c7, -5, -6, -7, -8
					    def c8, 0.707106829, -0.707106829, 0, 0.349999994
					    def c9, 0.000231481477, 0.25, 0, -1
					    def c10, -13, -14, -15, -16
					    def c11, -17, -18, -19, -20
					    def c12, -21, -22, -23, -24
					    def c13, 0.5, 0.125663713, 9.99999994e-009, 0
					    def c14, 9, 10, 11, 12
					    def c15, 2, -1, -3, -4
					    def c16, -0.923879385, -0.382683486, 0.382683486, -0.382683396
					    defi i0, 8, 0, 0, 0
					    defi i1, 16, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    dcl_2d s3
					    mul r0, c5.xxyy, v0.xyxx
					    texldl r1, r0, s0
					    texldl r2, r0, s2
					    texldl r3, r0, s1
					    mul r1.y, r1.x, r3.x
					    if_lt r1.y, c5.x
					      mov oC1, c5.y
					    else
					      texldl r0, r0, s3
					      add_sat r0.x, -r2.w, c2.z
					      add r0.x, r0.x, c5.x
					      mad r0.x, r0.y, r0.x, c5.z
					      add r0.y, r0.z, c5.z
					      mul r3.yzw, r0.x, r2.xxyz
					      mul r4.xyz, r0.y, r2
					      mul r0.z, r1.y, c5.w
					      mul r1.zw, c0.xyxy, v0.xyxy
					      mov r5.zw, c5.y
					      mov r6.xyz, r4
					      mov r6.w, r0.y
					      mov r7.xyz, r3.yzww
					      mov r7.w, r0.x
					      mov r0.w, c5.x
					      rep i0
					        mov r8.y, c6.y
					        mad r4.w, r0.w, r8.y, c3.x
					        mul r8.xy, r1.zwzw, r4.w
					        mad r8.xy, r8, c9.x, c9.yzzw
					        dp2add r4.w, r8, c6.z, c6.w
					        mul r8.xy, r8, r4.w
					        frc r8.xy, r8
					        mad r8.xy, r8, c15.x, c15.y
					        add r9, r0.w, -c15_abs.yxzw
					        add r10, r0.w, c7
					        cmp r8.zw, -r9_abs.x, c8.xyxy, c8.z
					        cmp r8.zw, -r9_abs.y, c9.xywz, r8
					        cmp r8.zw, -r9_abs.z, c8.x, r8
					        cmp r8.zw, -r9_abs.w, c9, r8
					        cmp r8.zw, -r10_abs.x, c5.xyyx, r8
					        cmp r8.zw, -r10_abs.y, c8.y, r8
					        cmp r8.zw, -r10_abs.z, c5.xyxy, r8
					        cmp r8.zw, -r10_abs.w, c8.xyyx, r8
					        mad r8.xy, r8, c8.w, r8.zwzw
					        mul r8.xy, r0.z, r8
					        mad r5.xy, r8, c1, v0
					        texldl r9, r5.xyww, s2
					        texldl r10, r5.xyww, s3
					        dp2add r4.w, r8, r8, c5.y
					        rsq r4.w, r4.w
					        rcp r4.w, r4.w
					        mad r4.w, r10.x, c4.x, -r4.w
					        add r4.w, r4.w, c9.y
					        mul_sat r4.w, r4.w, -c15.w
					        add_sat r8.x, -r9.w, c2.z
					        mul r8.y, r10.y, r4.w
					        add r8.x, r8.x, c5.x
					        mad r8.w, r8.y, r8.x, c4.y
					        mad r10.w, r4.w, r10.z, c4.y
					        mul r8.xyz, r8.w, r9
					        mul r10.xyz, r9, r10.w
					        texldl r9, r5, s1
					        mad r7, r8, r9.x, r7
					        mad r6, r10, r9.x, r6
					        add r0.w, r0.w, c5.x
					      endrep
					      if_lt c15.x, r1.y
					        mad_sat r0.x, r1.x, r3.x, -c15.x
					        mul r0.y, r1.y, c4.z
					        mov r3.zw, c5.y
					        mov r4, r6
					        mov r5, r7
					        mov r0.z, c14.x
					        rep i1
					          mov r8.y, c6.y
					          mad r0.w, r0.z, r8.y, c3.x
					          mul r8.xy, r0.w, r1.zwzw
					          mad r8.xy, r8, c9.x, c9.yzzw
					          dp2add r0.w, r8, c6.z, c6.w
					          mul r8.xy, r8, r0.w
					          frc r8.xy, r8
					          mad r8.xy, r8, c15.x, c15.y
					          add r9, r0.z, -c14
					          add r10, r0.z, c10
					          add r11, r0.z, c11
					          add r12, r0.z, c12
					          cmp r8.zw, -r9_abs.x, c8.xyxy, c8.z
					          cmp r8.zw, -r9_abs.y, c16.xyxy, r8
					          cmp r8.zw, -r9_abs.z, c9.xywz, r8
					          cmp r8.zw, -r9_abs.w, c16.xyxz, r8
					          cmp r8.zw, -r10_abs.x, c8.x, r8
					          cmp r8.zw, -r10_abs.y, c16.xyzx, r8
					          cmp r8.zw, -r10_abs.z, -c16.xywx, r8
					          cmp r8.zw, -r10_abs.w, c9, r8
					          cmp r8.zw, -r11_abs.x, c5.xyyx, r8
					          cmp r8.zw, -r11_abs.y, c16.xywx, r8
					          cmp r8.zw, -r11_abs.z, -c16.xyzx, r8
					          cmp r8.zw, -r11_abs.w, c8.y, r8
					          cmp r8.zw, -r12_abs.x, -c16.xyxz, r8
					          cmp r8.zw, -r12_abs.y, c5.xyxy, r8
					          cmp r8.zw, -r12_abs.z, -c16.xyxy, r8
					          cmp r8.zw, -r12_abs.w, c8.xyyx, r8
					          mad r8.xy, r8, c8.w, r8.zwzw
					          mul r8.xy, r0.y, r8
					          mad r3.xy, r8, c1, v0
					          texldl r9, r3.xyww, s2
					          texldl r10, r3.xyww, s3
					          dp2add r0.w, r8, r8, c5.y
					          rsq r0.w, r0.w
					          rcp r0.w, r0.w
					          mad r0.w, r10.x, c4.x, -r0.w
					          add r0.w, r0.w, c9.y
					          mul_sat r0.w, r0.w, -c15.w
					          mul r0.w, r0.x, r0.w
					          add_sat r1.x, -r9.w, c2.z
					          mul r8.x, r10.y, r0.w
					          add r1.x, r1.x, c5.x
					          mad r8.w, r8.x, r1.x, c4.y
					          mad r10.w, r0.w, r10.z, c4.y
					          mul r8.xyz, r8.w, r9
					          mul r10.xyz, r9, r10.w
					          texldl r9, r3, s1
					          mad r5, r8, r9.x, r5
					          mad r4, r10, r9.x, r4
					          add r0.z, r0.z, c5.x
					        endrep
					        mov r6, r4
					        mov r7, r5
					      endif
					      max r0.x, r1.y, c13.x
					      mul r0.x, r0.x, r0.x
					      mul r0.x, r0.x, r7.w
					      mul r0.x, r0.x, c13.y
					      mov_sat r0, r0.x
					      add r1.x, r6.w, c13.z
					      rcp r1.x, r1.x
					      mul r1.xyz, r1.x, r6
					      add r1.w, r7.w, c13.z
					      rcp r1.w, r1.w
					      mad r3.xyz, r7, r1.w, -r1
					      mad r2.xyz, r0.w, r3, r1
					      mov oC1, r0
					    endif
					    mov oC0, r2
					
					// approximately 167 instruction slots used (20 texture, 147 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" "SC_DOF_MASK_ON" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _ScionResolutionParameters1;
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_3[6];
						vec4 _CoCParams1;
						vec4 unused_0_5[9];
						float _TemporalUVOffset;
					};
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _ExclusionMask;
					uniform  sampler2D _PresortTexture;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					layout(location = 1) out vec4 SV_Target1;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					float u_xlat12;
					float u_xlat13;
					vec2 u_xlat14;
					vec2 u_xlat24;
					bool u_xlatb24;
					float u_xlat25;
					float u_xlat36;
					void main()
					{
					    u_xlat0 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat2 = textureLod(_ExclusionMask, vs_TEXCOORD0.xy, 0.0);
					    u_xlat12 = u_xlat0.x * u_xlat2.x;
					    u_xlatb24 = u_xlat12<1.0;
					    if(u_xlatb24){
					        SV_Target0 = u_xlat1;
					        SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
					        return;
					    }
					    u_xlat3 = textureLod(_PresortTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat24.x = (-u_xlat1.w) + _CoCParams1.z;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat24.x = u_xlat24.x + 1.0;
					    u_xlat4.w = u_xlat3.y * u_xlat24.x + 9.99999975e-05;
					    u_xlat3.w = u_xlat3.z + 9.99999975e-05;
					    u_xlat4.xyz = u_xlat1.xyz * u_xlat4.www;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat3.www;
					    u_xlat24.x = u_xlat12 * 0.400000006;
					    u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(1.37, 2.74000001, 4.11000013, 5.48000002);
					    u_xlat6 = vs_TEXCOORD0.xyxy * _ScionResolutionParameters1.xyxy;
					    u_xlat7 = u_xlat5.xxyy * u_xlat6.zwzw;
					    u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, -0.707106829);
					    u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					    u_xlat14.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat14.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat14.xy, 0.0);
					    u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					    u_xlat36 = u_xlat36 + 0.25;
					    u_xlat36 = u_xlat36 * 4.0;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat13 = u_xlat9.y * u_xlat36;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					    u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat8 = textureLod(_ExclusionMask, u_xlat14.xy, 0.0);
					    u_xlat4 = u_xlat10 * u_xlat8.xxxx + u_xlat4;
					    u_xlat3 = u_xlat9 * u_xlat8.xxxx + u_xlat3;
					    u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-1.0, 0.0);
					    u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					    u_xlat14.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat14.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat14.xy, 0.0);
					    u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					    u_xlat36 = u_xlat36 + 0.25;
					    u_xlat36 = u_xlat36 * 4.0;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat13 = u_xlat8.y * u_xlat36;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					    u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat7 = textureLod(_ExclusionMask, u_xlat14.xy, 0.0);
					    u_xlat4 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					    u_xlat3 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					    u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					    u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat36 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat5.xy * vec2(u_xlat36);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, 0.707106829);
					    u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					    u_xlat14.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat14.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat14.xy, 0.0);
					    u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					    u_xlat36 = u_xlat36 + 0.25;
					    u_xlat36 = u_xlat36 * 4.0;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat13 = u_xlat8.y * u_xlat36;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					    u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat7 = textureLod(_ExclusionMask, u_xlat14.xy, 0.0);
					    u_xlat4 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					    u_xlat3 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					    u_xlat36 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat5.zw * vec2(u_xlat36);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, -1.0);
					    u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					    u_xlat14.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat14.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat14.xy, 0.0);
					    u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat36 = u_xlat7.x * 10.0 + (-u_xlat36);
					    u_xlat36 = u_xlat36 + 0.25;
					    u_xlat36 = u_xlat36 * 4.0;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat5.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat13 = u_xlat7.y * u_xlat36;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat8.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					    u_xlat7.w = u_xlat36 * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat5.xyz * u_xlat7.www;
					    u_xlat5 = textureLod(_ExclusionMask, u_xlat14.xy, 0.0);
					    u_xlat4 = u_xlat8 * u_xlat5.xxxx + u_xlat4;
					    u_xlat3 = u_xlat7 * u_xlat5.xxxx + u_xlat3;
					    u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(6.8499999, 8.22000027, 9.59000015, 10.96);
					    u_xlat7 = u_xlat5.xxyy * u_xlat6.zwzw;
					    u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, 1.0);
					    u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					    u_xlat14.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat14.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat14.xy, 0.0);
					    u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					    u_xlat36 = u_xlat36 + 0.25;
					    u_xlat36 = u_xlat36 * 4.0;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat13 = u_xlat9.y * u_xlat36;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					    u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat8 = textureLod(_ExclusionMask, u_xlat14.xy, 0.0);
					    u_xlat4 = u_xlat10 * u_xlat8.xxxx + u_xlat4;
					    u_xlat3 = u_xlat9 * u_xlat8.xxxx + u_xlat3;
					    u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, -0.707106829);
					    u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					    u_xlat14.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat14.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat14.xy, 0.0);
					    u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					    u_xlat36 = u_xlat36 + 0.25;
					    u_xlat36 = u_xlat36 * 4.0;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat13 = u_xlat8.y * u_xlat36;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					    u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat7 = textureLod(_ExclusionMask, u_xlat14.xy, 0.0);
					    u_xlat4 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					    u_xlat3 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					    u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					    u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat36 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat5.xy * vec2(u_xlat36);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(1.0, 0.0);
					    u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					    u_xlat14.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat14.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat14.xy, 0.0);
					    u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					    u_xlat36 = u_xlat36 + 0.25;
					    u_xlat36 = u_xlat36 * 4.0;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat13 = u_xlat8.y * u_xlat36;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					    u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat7 = textureLod(_ExclusionMask, u_xlat14.xy, 0.0);
					    u_xlat4 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					    u_xlat3 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					    u_xlat36 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat5.zw * vec2(u_xlat36);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, 0.707106829);
					    u_xlat24.xy = u_xlat24.xx * u_xlat1.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat5.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat25 = u_xlat7.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat8.w = u_xlat25 * u_xlat36 + 0.00100000005;
					    u_xlat7.w = u_xlat24.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat5.xyz * u_xlat7.www;
					    u_xlat5 = textureLod(_ExclusionMask, u_xlat1.xy, 0.0);
					    u_xlat4 = u_xlat8 * u_xlat5.xxxx + u_xlat4;
					    u_xlat3 = u_xlat7 * u_xlat5.xxxx + u_xlat3;
					    u_xlatb24 = 2.0<u_xlat12;
					    if(u_xlatb24){
					        u_xlat0.x = u_xlat0.x * u_xlat2.x + -2.0;
					        u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					        u_xlat24.x = u_xlat12 * 0.800000012;
					        u_xlat2 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(12.3299999, 13.6999998, 15.0699997, 16.4400005);
					        u_xlat5 = u_xlat2.xxyy * u_xlat6.zwzw;
					        u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, -0.707106829);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat8.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat7 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					        u_xlat9 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					        u_xlat7 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					        u_xlat36 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.923879385, -0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat5.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat8.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat5.xyz * u_xlat10.www;
					        u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					        u_xlat5 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					        u_xlat9 = u_xlat10 * u_xlat5.xxxx + u_xlat9;
					        u_xlat5 = u_xlat8 * u_xlat5.xxxx + u_xlat7;
					        u_xlat2 = u_xlat2.zzww * u_xlat6.zwzw;
					        u_xlat2 = u_xlat2 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat2.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat2.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-1.0, 0.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat8.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat7.xyz * u_xlat10.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat7 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					        u_xlat9 = u_xlat10 * u_xlat7.xxxx + u_xlat9;
					        u_xlat5 = u_xlat8 * u_xlat7.xxxx + u_xlat5;
					        u_xlat36 = dot(u_xlat2.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat2.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.923879385, 0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat8.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat7.xyz * u_xlat10.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat2 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					        u_xlat7 = u_xlat10 * u_xlat2.xxxx + u_xlat9;
					        u_xlat2 = u_xlat8 * u_xlat2.xxxx + u_xlat5;
					        u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(17.8099995, 19.1800003, 20.5499992, 21.9200001);
					        u_xlat8 = u_xlat5.xxyy * u_xlat6.zwzw;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, 0.707106829);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat10.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat9 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat11 * u_xlat9.xxxx + u_xlat7;
					        u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					        u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.382683486, -0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					        u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					        u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					        u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.382683396, 0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					        u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					        u_xlat36 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, -1.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat5 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat10 * u_xlat5.xxxx + u_xlat7;
					        u_xlat2 = u_xlat9 * u_xlat5.xxxx + u_xlat2;
					        u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(23.2900009, 24.6599998, 26.0300007, 27.3999996);
					        u_xlat8 = u_xlat5.xxyy * u_xlat6.zwzw;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, 1.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat10.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat9 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat11 * u_xlat9.xxxx + u_xlat7;
					        u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					        u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.382683396, -0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					        u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					        u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					        u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.382683486, 0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					        u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					        u_xlat36 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, -0.707106829);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat5 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat10 * u_xlat5.xxxx + u_xlat7;
					        u_xlat2 = u_xlat9 * u_xlat5.xxxx + u_xlat2;
					        u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(28.7700005, 30.1399994, 31.5100002, 32.8800011);
					        u_xlat8 = u_xlat5.xxyy * u_xlat6.zwzw;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.923879385, -0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat10.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat9 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat11 * u_xlat9.xxxx + u_xlat7;
					        u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					        u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(1.0, 0.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					        u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					        u_xlat5 = u_xlat5.zzww * u_xlat6;
					        u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.923879385, 0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat6.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat8.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					        u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					        u_xlat6 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat9 * u_xlat6.xxxx + u_xlat7;
					        u_xlat2 = u_xlat8 * u_xlat6.xxxx + u_xlat2;
					        u_xlat36 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, 0.707106829);
					        u_xlat24.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					        u_xlat6 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					        u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					        u_xlat24.x = sqrt(u_xlat24.x);
					        u_xlat24.x = u_xlat6.x * 10.0 + (-u_xlat24.x);
					        u_xlat24.x = u_xlat24.x + 0.25;
					        u_xlat24.x = u_xlat24.x * 4.0;
					        u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					        u_xlat0.x = u_xlat0.x * u_xlat24.x;
					        u_xlat24.x = (-u_xlat5.w) + _CoCParams1.z;
					        u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					        u_xlat36 = u_xlat6.y * u_xlat0.x;
					        u_xlat24.x = u_xlat24.x + 1.0;
					        u_xlat8.w = u_xlat36 * u_xlat24.x + 0.00100000005;
					        u_xlat6.w = u_xlat0.x * u_xlat6.z + 0.00100000005;
					        u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					        u_xlat6.xyz = u_xlat5.xyz * u_xlat6.www;
					        u_xlat5 = textureLod(_ExclusionMask, u_xlat1.xy, 0.0);
					        u_xlat4 = u_xlat8 * u_xlat5.xxxx + u_xlat7;
					        u_xlat3 = u_xlat6 * u_xlat5.xxxx + u_xlat2;
					    }
					    u_xlat0.x = max(u_xlat12, 0.5);
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat4.w;
					    u_xlat0.x = u_xlat0.x * 0.125663713;
					    u_xlat0 = u_xlat0.xxxx;
					    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.w + 9.99999994e-09;
					    u_xlat1.xyz = u_xlat3.xyz / u_xlat1.xxx;
					    u_xlat2.x = u_xlat4.w + 9.99999994e-09;
					    u_xlat2.xyz = u_xlat4.xyz / u_xlat2.xxx;
					    u_xlat2.xyz = (-u_xlat1.xyz) + u_xlat2.xyz;
					    SV_Target0.xyz = u_xlat0.www * u_xlat2.xyz + u_xlat1.xyz;
					    SV_Target0.w = u_xlat1.w;
					    SV_Target1 = u_xlat0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _CoCParams1;
					//   sampler2D _HalfResSourceDepthTexture;
					//   sampler2D _PresortTexture;
					//   float4 _ScionResolutionParameters1;
					//   float4 _ScionResolutionParameters2;
					//   float _TemporalUVOffset;
					//   sampler2D _TiledNeighbourhoodData;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters1 c0       1
					//   _ScionResolutionParameters2 c1       1
					//   _CoCParams1                 c2       1
					//   _TemporalUVOffset           c3       1
					//   _TiledNeighbourhoodData     s0       1
					//   _HalfResSourceDepthTexture  s1       1
					//   _PresortTexture             s2       1
					//
					
					    ps_3_0
					    def c4, 10, 0.00100000005, 0.800000012, 0
					    def c5, 1, 0, 9.99999975e-005, 0.400000006
					    def c6, 0.000231481477, 0.25, 0, -1
					    def c7, 0, 1.37, 3571, 0
					    def c8, -5, -6, -7, -8
					    def c9, 0.707106829, -0.707106829, 0, 0.349999994
					    def c10, -13, -14, -15, -16
					    def c11, -17, -18, -19, -20
					    def c12, -21, -22, -23, -24
					    def c13, 0.5, 0.125663713, 9.99999994e-009, 0
					    def c14, 9, 10, 11, 12
					    def c15, 2, -1, -3, -4
					    def c16, -0.923879385, -0.382683486, 0.382683486, -0.382683396
					    defi i0, 8, 0, 0, 0
					    defi i1, 16, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    mul r0, c5.xxyy, v0.xyxx
					    texldl r1, r0, s0
					    texldl r2, r0, s1
					    if_lt r1.x, c5.x
					      mov oC1, c5.y
					    else
					      texldl r0, r0, s2
					      add_sat r0.x, -r2.w, c2.z
					      add r0.x, r0.x, c5.x
					      mad r0.x, r0.y, r0.x, c5.z
					      add r0.y, r0.z, c5.z
					      mul r1.yzw, r0.x, r2.xxyz
					      mul r3.xyz, r0.y, r2
					      mul r0.z, r1.x, c5.w
					      mul r4.xy, c0, v0
					      mov r5.zw, c5.y
					      mov r6.xyz, r3
					      mov r6.w, r0.y
					      mov r7.xyz, r1.yzww
					      mov r7.w, r0.x
					      mov r0.w, c5.x
					      rep i0
					        mov r8.y, c7.y
					        mad r3.w, r0.w, r8.y, c3.x
					        mul r4.zw, r3.w, r4.xyxy
					        mad r4.zw, r4, c6.x, c6.xyyz
					        dp2add r3.w, r4.zwzw, c7.z, c7.w
					        mul r4.zw, r4, r3.w
					        frc r4.zw, r4
					        mad r4.zw, r4, c15.x, c15.y
					        add r8, r0.w, -c15_abs.yxzw
					        add r9, r0.w, c8
					        cmp r10.xy, -r8_abs.x, c9, c9.z
					        cmp r8.xy, -r8_abs.y, c6.wzzw, r10
					        cmp r8.xy, -r8_abs.z, c9.x, r8
					        cmp r8.xy, -r8_abs.w, c6.zwzw, r8
					        cmp r8.xy, -r9_abs.x, c5.yxzw, r8
					        cmp r8.xy, -r9_abs.y, c9.y, r8
					        cmp r8.xy, -r9_abs.z, c5, r8
					        cmp r8.xy, -r9_abs.w, c9.yxzw, r8
					        mad r4.zw, r4, c9.w, r8.xyxy
					        mul r4.zw, r0.z, r4
					        mad r5.xy, r4.zwzw, c1, v0
					        texldl r8, r5.xyww, s1
					        texldl r9, r5, s2
					        dp2add r3.w, r4.zwzw, r4.zwzw, c5.y
					        rsq r3.w, r3.w
					        rcp r3.w, r3.w
					        mad r3.w, r9.x, c4.x, -r3.w
					        add r3.w, r3.w, c6.y
					        mul_sat r3.w, r3.w, -c15.w
					        add_sat r4.z, -r8.w, c2.z
					        mul r4.w, r9.y, r3.w
					        add r4.z, r4.z, c5.x
					        mad r10.w, r4.w, r4.z, c4.y
					        mad r9.w, r3.w, r9.z, c4.y
					        mul r10.xyz, r8, r10.w
					        mul r9.xyz, r8, r9.w
					        add r7, r7, r10
					        add r6, r6, r9
					        add r0.w, r0.w, c5.x
					      endrep
					      if_lt c15.x, r1.x
					        add_sat r0.x, r1.x, -c15.x
					        mul r0.y, r1.x, c4.z
					        mov r3.zw, c5.y
					        mov r5, r6
					        mov r8, r7
					        mov r0.z, c14.x
					        rep i1
					          mov r1.y, c7.y
					          mad r0.w, r0.z, r1.y, c3.x
					          mul r1.yz, r0.w, r4.xxyw
					          mad r1.yz, r1, c6.x, c6
					          dp2add r0.w, r1.yzzw, c7.z, c7.w
					          mul r1.yz, r1, r0.w
					          frc r1.yz, r1
					          mad r1.yz, r1, c15.x, c15.y
					          add r9, r0.z, -c14
					          add r10, r0.z, c10
					          add r11, r0.z, c11
					          add r12, r0.z, c12
					          cmp r4.zw, -r9_abs.x, c9.xyxy, c9.z
					          cmp r4.zw, -r9_abs.y, c16.xyxy, r4
					          cmp r4.zw, -r9_abs.z, c6.xywz, r4
					          cmp r4.zw, -r9_abs.w, c16.xyxz, r4
					          cmp r4.zw, -r10_abs.x, c9.x, r4
					          cmp r4.zw, -r10_abs.y, c16.xyzx, r4
					          cmp r4.zw, -r10_abs.z, -c16.xywx, r4
					          cmp r4.zw, -r10_abs.w, c6, r4
					          cmp r4.zw, -r11_abs.x, c5.xyyx, r4
					          cmp r4.zw, -r11_abs.y, c16.xywx, r4
					          cmp r4.zw, -r11_abs.z, -c16.xyzx, r4
					          cmp r4.zw, -r11_abs.w, c9.y, r4
					          cmp r4.zw, -r12_abs.x, -c16.xyxz, r4
					          cmp r4.zw, -r12_abs.y, c5.xyxy, r4
					          cmp r4.zw, -r12_abs.z, -c16.xyxy, r4
					          cmp r4.zw, -r12_abs.w, c9.xyyx, r4
					          mad r1.yz, r1, c9.w, r4.xzww
					          mul r1.yz, r0.y, r1
					          mad r3.xy, r1.yzzw, c1, v0
					          texldl r9, r3.xyww, s1
					          texldl r10, r3, s2
					          dp2add r0.w, r1.yzzw, r1.yzzw, c5.y
					          rsq r0.w, r0.w
					          rcp r0.w, r0.w
					          mad r0.w, r10.x, c4.x, -r0.w
					          add r0.w, r0.w, c6.y
					          mul_sat r0.w, r0.w, -c15.w
					          mul r0.w, r0.x, r0.w
					          add_sat r1.y, -r9.w, c2.z
					          mul r1.z, r10.y, r0.w
					          add r1.y, r1.y, c5.x
					          mad r11.w, r1.z, r1.y, c4.y
					          mad r10.w, r0.w, r10.z, c4.y
					          mul r11.xyz, r9, r11.w
					          mul r10.xyz, r9, r10.w
					          add r8, r8, r11
					          add r5, r5, r10
					          add r0.z, r0.z, c5.x
					        endrep
					        mov r6, r5
					        mov r7, r8
					      endif
					      max r0.x, r1.x, c13.x
					      mul r0.x, r0.x, r0.x
					      mul r0.x, r0.x, r7.w
					      mul r0.x, r0.x, c13.y
					      mov_sat r0, r0.x
					      add r1.x, r6.w, c13.z
					      rcp r1.x, r1.x
					      mul r1.xyz, r1.x, r6
					      add r1.w, r7.w, c13.z
					      rcp r1.w, r1.w
					      mad r3.xyz, r7, r1.w, -r1
					      mad r2.xyz, r0.w, r3, r1
					      mov oC1, r0
					    endif
					    mov oC0, r2
					
					// approximately 160 instruction slots used (14 texture, 146 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _ScionResolutionParameters1;
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_3[6];
						vec4 _CoCParams1;
						vec4 unused_0_5[9];
						float _TemporalUVOffset;
					};
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _PresortTexture;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					layout(location = 1) out vec4 SV_Target1;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec2 u_xlat12;
					bool u_xlatb12;
					float u_xlat13;
					vec2 u_xlat24;
					float u_xlat36;
					void main()
					{
					    u_xlat0 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlatb12 = u_xlat0.x<1.0;
					    if(u_xlatb12){
					        SV_Target0 = u_xlat1;
					        SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
					        return;
					    }
					    u_xlat2 = textureLod(_PresortTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat12.x = (-u_xlat1.w) + _CoCParams1.z;
					    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
					    u_xlat12.x = u_xlat12.x + 1.0;
					    u_xlat3.w = u_xlat2.y * u_xlat12.x + 9.99999975e-05;
					    u_xlat2.w = u_xlat2.z + 9.99999975e-05;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat3.www;
					    u_xlat2.xyz = u_xlat1.xyz * u_xlat2.www;
					    u_xlat12.x = u_xlat0.x * 0.400000006;
					    u_xlat4 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(1.37, 2.74000001, 4.11000013, 5.48000002);
					    u_xlat5 = vs_TEXCOORD0.xyxy * _ScionResolutionParameters1.xyxy;
					    u_xlat6 = u_xlat4.xxyy * u_xlat5.zwzw;
					    u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat24.x = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat6.xy * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, -0.707106829);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat8.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat8.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat9.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat8.w = u_xlat24.x * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat3 = u_xlat3 + u_xlat9;
					    u_xlat2 = u_xlat2 + u_xlat8;
					    u_xlat24.x = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat6.zw * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.349999994, 0.349999994) + vec2(-1.0, 0.0);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat6.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat7.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat8.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat7.w = u_xlat24.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat6.xyz * u_xlat7.www;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat2 = u_xlat2 + u_xlat7;
					    u_xlat4 = u_xlat4.zzww * u_xlat5.zwzw;
					    u_xlat4 = u_xlat4 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat24.x = dot(u_xlat4.xy, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat4.xy * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, 0.707106829);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat6.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat7.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat8.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat7.w = u_xlat24.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat6.xyz * u_xlat7.www;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat2 = u_xlat2 + u_xlat7;
					    u_xlat24.x = dot(u_xlat4.zw, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat4.zw * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, -1.0);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat4 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat6 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat6.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat4.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat6.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat7.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat6.w = u_xlat24.x * u_xlat6.z + 0.00100000005;
					    u_xlat7.xyz = u_xlat4.xyz * u_xlat7.www;
					    u_xlat6.xyz = u_xlat4.xyz * u_xlat6.www;
					    u_xlat3 = u_xlat3 + u_xlat7;
					    u_xlat2 = u_xlat2 + u_xlat6;
					    u_xlat4 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(6.8499999, 8.22000027, 9.59000015, 10.96);
					    u_xlat6 = u_xlat4.xxyy * u_xlat5.zwzw;
					    u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat24.x = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat6.xy * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, 1.0);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat8.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat8.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat9.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat8.w = u_xlat24.x * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat3 = u_xlat3 + u_xlat9;
					    u_xlat2 = u_xlat2 + u_xlat8;
					    u_xlat24.x = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat6.zw * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, -0.707106829);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat6.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat7.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat8.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat7.w = u_xlat24.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat6.xyz * u_xlat7.www;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat2 = u_xlat2 + u_xlat7;
					    u_xlat4 = u_xlat4.zzww * u_xlat5.zwzw;
					    u_xlat4 = u_xlat4 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat24.x = dot(u_xlat4.xy, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat4.xy * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.349999994, 0.349999994) + vec2(1.0, 0.0);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat6.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat7.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat8.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat7.w = u_xlat24.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat6.xyz * u_xlat7.www;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat2 = u_xlat2 + u_xlat7;
					    u_xlat24.x = dot(u_xlat4.zw, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat4.zw * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, 0.707106829);
					    u_xlat12.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat12.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat4 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat6 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat12.x = dot(u_xlat12.xy, u_xlat12.xy);
					    u_xlat12.x = sqrt(u_xlat12.x);
					    u_xlat12.x = u_xlat6.x * 10.0 + (-u_xlat12.x);
					    u_xlat12.x = u_xlat12.x + 0.25;
					    u_xlat12.x = u_xlat12.x * 4.0;
					    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
					    u_xlat24.x = (-u_xlat4.w) + _CoCParams1.z;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = u_xlat6.y * u_xlat12.x;
					    u_xlat24.x = u_xlat24.x + 1.0;
					    u_xlat7.w = u_xlat36 * u_xlat24.x + 0.00100000005;
					    u_xlat6.w = u_xlat12.x * u_xlat6.z + 0.00100000005;
					    u_xlat7.xyz = u_xlat4.xyz * u_xlat7.www;
					    u_xlat6.xyz = u_xlat4.xyz * u_xlat6.www;
					    u_xlat3 = u_xlat3 + u_xlat7;
					    u_xlat2 = u_xlat2 + u_xlat6;
					    u_xlatb12 = 2.0<u_xlat0.x;
					    if(u_xlatb12){
					        u_xlat12.x = u_xlat0.x + -2.0;
					        u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
					        u_xlat24.x = u_xlat0.x * 0.800000012;
					        u_xlat4 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(12.3299999, 13.6999998, 15.0699997, 16.4400005);
					        u_xlat6 = u_xlat4.xxyy * u_xlat5.zwzw;
					        u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, -0.707106829);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat8.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat7 = u_xlat3 + u_xlat9;
					        u_xlat8 = u_xlat2 + u_xlat8;
					        u_xlat36 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.923879385, -0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat6.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat6.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat7 + u_xlat10;
					        u_xlat7 = u_xlat8 + u_xlat9;
					        u_xlat4 = u_xlat4.zzww * u_xlat5.zwzw;
					        u_xlat4 = u_xlat4 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat4.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat4.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-1.0, 0.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat7 = u_xlat7 + u_xlat9;
					        u_xlat36 = dot(u_xlat4.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat4.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.923879385, 0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					        u_xlat4 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat4.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat4.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat4.w = u_xlat36 * u_xlat4.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat4.xyz = u_xlat4.www * u_xlat8.xyz;
					        u_xlat6 = u_xlat6 + u_xlat9;
					        u_xlat4 = u_xlat4 + u_xlat7;
					        u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(17.8099995, 19.1800003, 20.5499992, 21.9200001);
					        u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, 0.707106829);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat10.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat6 = u_xlat6 + u_xlat11;
					        u_xlat4 = u_xlat4 + u_xlat10;
					        u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.382683486, -0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat7 = u_xlat5.zwzw * u_xlat7.zzww;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.382683396, 0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, -1.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat7 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat7.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat7.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat7.w = u_xlat36 * u_xlat7.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat7.xyz = u_xlat7.www * u_xlat8.xyz;
					        u_xlat6 = u_xlat6 + u_xlat9;
					        u_xlat4 = u_xlat4 + u_xlat7;
					        u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(23.2900009, 24.6599998, 26.0300007, 27.3999996);
					        u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, 1.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat10.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat6 = u_xlat6 + u_xlat11;
					        u_xlat4 = u_xlat4 + u_xlat10;
					        u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.382683396, -0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat7 = u_xlat5.zwzw * u_xlat7.zzww;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.382683486, 0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, -0.707106829);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat7 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat7.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat7.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat7.w = u_xlat36 * u_xlat7.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat7.xyz = u_xlat7.www * u_xlat8.xyz;
					        u_xlat6 = u_xlat6 + u_xlat9;
					        u_xlat4 = u_xlat4 + u_xlat7;
					        u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(28.7700005, 30.1399994, 31.5100002, 32.8800011);
					        u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.923879385, -0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat10.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat6 = u_xlat6 + u_xlat11;
					        u_xlat4 = u_xlat4 + u_xlat10;
					        u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(1.0, 0.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat5 = u_xlat5 * u_xlat7.zzww;
					        u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.923879385, 0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat8.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat6 = u_xlat6 + u_xlat9;
					        u_xlat4 = u_xlat4 + u_xlat8;
					        u_xlat36 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, 0.707106829);
					        u_xlat24.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					        u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					        u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					        u_xlat24.x = sqrt(u_xlat24.x);
					        u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					        u_xlat24.x = u_xlat24.x + 0.25;
					        u_xlat24.x = u_xlat24.x * 4.0;
					        u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					        u_xlat12.x = u_xlat12.x * u_xlat24.x;
					        u_xlat24.x = (-u_xlat5.w) + _CoCParams1.z;
					        u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					        u_xlat36 = u_xlat7.y * u_xlat12.x;
					        u_xlat24.x = u_xlat24.x + 1.0;
					        u_xlat8.w = u_xlat36 * u_xlat24.x + 0.00100000005;
					        u_xlat7.w = u_xlat12.x * u_xlat7.z + 0.00100000005;
					        u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					        u_xlat7.xyz = u_xlat5.xyz * u_xlat7.www;
					        u_xlat3 = u_xlat6 + u_xlat8;
					        u_xlat2 = u_xlat4 + u_xlat7;
					    }
					    u_xlat0.x = max(u_xlat0.x, 0.5);
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat3.w;
					    u_xlat0.x = u_xlat0.x * 0.125663713;
					    u_xlat0 = u_xlat0.xxxx;
					    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
					    u_xlat1.x = u_xlat2.w + 9.99999994e-09;
					    u_xlat1.xyz = u_xlat2.xyz / u_xlat1.xxx;
					    u_xlat2.x = u_xlat3.w + 9.99999994e-09;
					    u_xlat2.xyz = u_xlat3.xyz / u_xlat2.xxx;
					    u_xlat2.xyz = (-u_xlat1.xyz) + u_xlat2.xyz;
					    SV_Target0.xyz = u_xlat0.www * u_xlat2.xyz + u_xlat1.xyz;
					    SV_Target0.w = u_xlat1.w;
					    SV_Target1 = u_xlat0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" "SC_DOF_MASK_ON" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _CoCParams1;
					//   sampler2D _ExclusionMask;
					//   sampler2D _HalfResSourceDepthTexture;
					//   sampler2D _PresortTexture;
					//   float4 _ScionResolutionParameters1;
					//   float4 _ScionResolutionParameters2;
					//   float _TemporalUVOffset;
					//   sampler2D _TiledNeighbourhoodData;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters1 c0       1
					//   _ScionResolutionParameters2 c1       1
					//   _CoCParams1                 c2       1
					//   _TemporalUVOffset           c3       1
					//   _TiledNeighbourhoodData     s0       1
					//   _ExclusionMask              s1       1
					//   _HalfResSourceDepthTexture  s2       1
					//   _PresortTexture             s3       1
					//
					
					    ps_3_0
					    def c4, 10, 0.00100000005, 0.800000012, 0
					    def c5, 1, 0, 9.99999975e-005, 0.400000006
					    def c6, 0, 1.37, 3571, 0
					    def c7, -5, -6, -7, -8
					    def c8, 0.707106829, -0.707106829, 0, 0.349999994
					    def c9, 0.000231481477, 0.25, 0, -1
					    def c10, -13, -14, -15, -16
					    def c11, -17, -18, -19, -20
					    def c12, -21, -22, -23, -24
					    def c13, 0.5, 0.125663713, 9.99999994e-009, 0
					    def c14, 9, 10, 11, 12
					    def c15, 2, -1, -3, -4
					    def c16, -0.923879385, -0.382683486, 0.382683486, -0.382683396
					    defi i0, 8, 0, 0, 0
					    defi i1, 16, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    dcl_2d s3
					    mul r0, c5.xxyy, v0.xyxx
					    texldl r1, r0, s0
					    texldl r2, r0, s2
					    texldl r3, r0, s1
					    mul r1.y, r1.x, r3.x
					    if_lt r1.y, c5.x
					      mov oC1, c5.y
					    else
					      texldl r0, r0, s3
					      add_sat r0.x, -r2.w, c2.z
					      add r0.x, r0.x, c5.x
					      mad r0.x, r0.y, r0.x, c5.z
					      add r0.y, r0.z, c5.z
					      mul r3.yzw, r0.x, r2.xxyz
					      mul r4.xyz, r0.y, r2
					      mul r0.z, r1.y, c5.w
					      mul r1.zw, c0.xyxy, v0.xyxy
					      mov r5.zw, c5.y
					      mov r6.xyz, r4
					      mov r6.w, r0.y
					      mov r7.xyz, r3.yzww
					      mov r7.w, r0.x
					      mov r0.w, c5.x
					      rep i0
					        mov r8.y, c6.y
					        mad r4.w, r0.w, r8.y, c3.x
					        mul r8.xy, r1.zwzw, r4.w
					        mad r8.xy, r8, c9.x, c9.yzzw
					        dp2add r4.w, r8, c6.z, c6.w
					        mul r8.xy, r8, r4.w
					        frc r8.xy, r8
					        mad r8.xy, r8, c15.x, c15.y
					        add r9, r0.w, -c15_abs.yxzw
					        add r10, r0.w, c7
					        cmp r8.zw, -r9_abs.x, c8.xyxy, c8.z
					        cmp r8.zw, -r9_abs.y, c9.xywz, r8
					        cmp r8.zw, -r9_abs.z, c8.x, r8
					        cmp r8.zw, -r9_abs.w, c9, r8
					        cmp r8.zw, -r10_abs.x, c5.xyyx, r8
					        cmp r8.zw, -r10_abs.y, c8.y, r8
					        cmp r8.zw, -r10_abs.z, c5.xyxy, r8
					        cmp r8.zw, -r10_abs.w, c8.xyyx, r8
					        mad r8.xy, r8, c8.w, r8.zwzw
					        mul r8.xy, r0.z, r8
					        mad r5.xy, r8, c1, v0
					        texldl r9, r5.xyww, s2
					        texldl r10, r5.xyww, s3
					        dp2add r4.w, r8, r8, c5.y
					        rsq r4.w, r4.w
					        rcp r4.w, r4.w
					        mad r4.w, r10.x, c4.x, -r4.w
					        add r4.w, r4.w, c9.y
					        mul_sat r4.w, r4.w, -c15.w
					        add_sat r8.x, -r9.w, c2.z
					        mul r8.y, r10.y, r4.w
					        add r8.x, r8.x, c5.x
					        mad r8.w, r8.y, r8.x, c4.y
					        mad r10.w, r4.w, r10.z, c4.y
					        mul r8.xyz, r8.w, r9
					        mul r10.xyz, r9, r10.w
					        texldl r9, r5, s1
					        mad r7, r8, r9.x, r7
					        mad r6, r10, r9.x, r6
					        add r0.w, r0.w, c5.x
					      endrep
					      if_lt c15.x, r1.y
					        mad_sat r0.x, r1.x, r3.x, -c15.x
					        mul r0.y, r1.y, c4.z
					        mov r3.zw, c5.y
					        mov r4, r6
					        mov r5, r7
					        mov r0.z, c14.x
					        rep i1
					          mov r8.y, c6.y
					          mad r0.w, r0.z, r8.y, c3.x
					          mul r8.xy, r0.w, r1.zwzw
					          mad r8.xy, r8, c9.x, c9.yzzw
					          dp2add r0.w, r8, c6.z, c6.w
					          mul r8.xy, r8, r0.w
					          frc r8.xy, r8
					          mad r8.xy, r8, c15.x, c15.y
					          add r9, r0.z, -c14
					          add r10, r0.z, c10
					          add r11, r0.z, c11
					          add r12, r0.z, c12
					          cmp r8.zw, -r9_abs.x, c8.xyxy, c8.z
					          cmp r8.zw, -r9_abs.y, c16.xyxy, r8
					          cmp r8.zw, -r9_abs.z, c9.xywz, r8
					          cmp r8.zw, -r9_abs.w, c16.xyxz, r8
					          cmp r8.zw, -r10_abs.x, c8.x, r8
					          cmp r8.zw, -r10_abs.y, c16.xyzx, r8
					          cmp r8.zw, -r10_abs.z, -c16.xywx, r8
					          cmp r8.zw, -r10_abs.w, c9, r8
					          cmp r8.zw, -r11_abs.x, c5.xyyx, r8
					          cmp r8.zw, -r11_abs.y, c16.xywx, r8
					          cmp r8.zw, -r11_abs.z, -c16.xyzx, r8
					          cmp r8.zw, -r11_abs.w, c8.y, r8
					          cmp r8.zw, -r12_abs.x, -c16.xyxz, r8
					          cmp r8.zw, -r12_abs.y, c5.xyxy, r8
					          cmp r8.zw, -r12_abs.z, -c16.xyxy, r8
					          cmp r8.zw, -r12_abs.w, c8.xyyx, r8
					          mad r8.xy, r8, c8.w, r8.zwzw
					          mul r8.xy, r0.y, r8
					          mad r3.xy, r8, c1, v0
					          texldl r9, r3.xyww, s2
					          texldl r10, r3.xyww, s3
					          dp2add r0.w, r8, r8, c5.y
					          rsq r0.w, r0.w
					          rcp r0.w, r0.w
					          mad r0.w, r10.x, c4.x, -r0.w
					          add r0.w, r0.w, c9.y
					          mul_sat r0.w, r0.w, -c15.w
					          mul r0.w, r0.x, r0.w
					          add_sat r1.x, -r9.w, c2.z
					          mul r8.x, r10.y, r0.w
					          add r1.x, r1.x, c5.x
					          mad r8.w, r8.x, r1.x, c4.y
					          mad r10.w, r0.w, r10.z, c4.y
					          mul r8.xyz, r8.w, r9
					          mul r10.xyz, r9, r10.w
					          texldl r9, r3, s1
					          mad r5, r8, r9.x, r5
					          mad r4, r10, r9.x, r4
					          add r0.z, r0.z, c5.x
					        endrep
					        mov r6, r4
					        mov r7, r5
					      endif
					      max r0.x, r1.y, c13.x
					      mul r0.x, r0.x, r0.x
					      mul r0.x, r0.x, r7.w
					      mul r0.x, r0.x, c13.y
					      mov_sat r0, r0.x
					      add r1.x, r6.w, c13.z
					      rcp r1.x, r1.x
					      mul r1.xyz, r1.x, r6
					      add r1.w, r7.w, c13.z
					      rcp r1.w, r1.w
					      mad r3.xyz, r7, r1.w, -r1
					      mad r2.xyz, r0.w, r3, r1
					      mov oC1, r0
					    endif
					    mov oC0, r2
					
					// approximately 167 instruction slots used (20 texture, 147 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" "SC_DOF_MASK_ON" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _ScionResolutionParameters1;
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_3[6];
						vec4 _CoCParams1;
						vec4 unused_0_5[9];
						float _TemporalUVOffset;
					};
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _ExclusionMask;
					uniform  sampler2D _PresortTexture;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					layout(location = 1) out vec4 SV_Target1;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					float u_xlat12;
					float u_xlat13;
					vec2 u_xlat14;
					vec2 u_xlat24;
					bool u_xlatb24;
					float u_xlat25;
					float u_xlat36;
					void main()
					{
					    u_xlat0 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat2 = textureLod(_ExclusionMask, vs_TEXCOORD0.xy, 0.0);
					    u_xlat12 = u_xlat0.x * u_xlat2.x;
					    u_xlatb24 = u_xlat12<1.0;
					    if(u_xlatb24){
					        SV_Target0 = u_xlat1;
					        SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
					        return;
					    }
					    u_xlat3 = textureLod(_PresortTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat24.x = (-u_xlat1.w) + _CoCParams1.z;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat24.x = u_xlat24.x + 1.0;
					    u_xlat4.w = u_xlat3.y * u_xlat24.x + 9.99999975e-05;
					    u_xlat3.w = u_xlat3.z + 9.99999975e-05;
					    u_xlat4.xyz = u_xlat1.xyz * u_xlat4.www;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat3.www;
					    u_xlat24.x = u_xlat12 * 0.400000006;
					    u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(1.37, 2.74000001, 4.11000013, 5.48000002);
					    u_xlat6 = vs_TEXCOORD0.xyxy * _ScionResolutionParameters1.xyxy;
					    u_xlat7 = u_xlat5.xxyy * u_xlat6.zwzw;
					    u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, -0.707106829);
					    u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					    u_xlat14.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat14.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat14.xy, 0.0);
					    u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					    u_xlat36 = u_xlat36 + 0.25;
					    u_xlat36 = u_xlat36 * 4.0;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat13 = u_xlat9.y * u_xlat36;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					    u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat8 = textureLod(_ExclusionMask, u_xlat14.xy, 0.0);
					    u_xlat4 = u_xlat10 * u_xlat8.xxxx + u_xlat4;
					    u_xlat3 = u_xlat9 * u_xlat8.xxxx + u_xlat3;
					    u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-1.0, 0.0);
					    u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					    u_xlat14.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat14.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat14.xy, 0.0);
					    u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					    u_xlat36 = u_xlat36 + 0.25;
					    u_xlat36 = u_xlat36 * 4.0;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat13 = u_xlat8.y * u_xlat36;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					    u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat7 = textureLod(_ExclusionMask, u_xlat14.xy, 0.0);
					    u_xlat4 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					    u_xlat3 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					    u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					    u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat36 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat5.xy * vec2(u_xlat36);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, 0.707106829);
					    u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					    u_xlat14.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat14.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat14.xy, 0.0);
					    u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					    u_xlat36 = u_xlat36 + 0.25;
					    u_xlat36 = u_xlat36 * 4.0;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat13 = u_xlat8.y * u_xlat36;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					    u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat7 = textureLod(_ExclusionMask, u_xlat14.xy, 0.0);
					    u_xlat4 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					    u_xlat3 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					    u_xlat36 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat5.zw * vec2(u_xlat36);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, -1.0);
					    u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					    u_xlat14.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat14.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat14.xy, 0.0);
					    u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat36 = u_xlat7.x * 10.0 + (-u_xlat36);
					    u_xlat36 = u_xlat36 + 0.25;
					    u_xlat36 = u_xlat36 * 4.0;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat5.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat13 = u_xlat7.y * u_xlat36;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat8.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					    u_xlat7.w = u_xlat36 * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat5.xyz * u_xlat7.www;
					    u_xlat5 = textureLod(_ExclusionMask, u_xlat14.xy, 0.0);
					    u_xlat4 = u_xlat8 * u_xlat5.xxxx + u_xlat4;
					    u_xlat3 = u_xlat7 * u_xlat5.xxxx + u_xlat3;
					    u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(6.8499999, 8.22000027, 9.59000015, 10.96);
					    u_xlat7 = u_xlat5.xxyy * u_xlat6.zwzw;
					    u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, 1.0);
					    u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					    u_xlat14.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat14.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat14.xy, 0.0);
					    u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					    u_xlat36 = u_xlat36 + 0.25;
					    u_xlat36 = u_xlat36 * 4.0;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat13 = u_xlat9.y * u_xlat36;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					    u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat8 = textureLod(_ExclusionMask, u_xlat14.xy, 0.0);
					    u_xlat4 = u_xlat10 * u_xlat8.xxxx + u_xlat4;
					    u_xlat3 = u_xlat9 * u_xlat8.xxxx + u_xlat3;
					    u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, -0.707106829);
					    u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					    u_xlat14.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat14.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat14.xy, 0.0);
					    u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					    u_xlat36 = u_xlat36 + 0.25;
					    u_xlat36 = u_xlat36 * 4.0;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat13 = u_xlat8.y * u_xlat36;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					    u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat7 = textureLod(_ExclusionMask, u_xlat14.xy, 0.0);
					    u_xlat4 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					    u_xlat3 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					    u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					    u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat36 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat5.xy * vec2(u_xlat36);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(1.0, 0.0);
					    u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					    u_xlat14.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat14.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat14.xy, 0.0);
					    u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					    u_xlat36 = u_xlat36 + 0.25;
					    u_xlat36 = u_xlat36 * 4.0;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat13 = u_xlat8.y * u_xlat36;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					    u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat7 = textureLod(_ExclusionMask, u_xlat14.xy, 0.0);
					    u_xlat4 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					    u_xlat3 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					    u_xlat36 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat5.zw * vec2(u_xlat36);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, 0.707106829);
					    u_xlat24.xy = u_xlat24.xx * u_xlat1.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat5.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat25 = u_xlat7.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat8.w = u_xlat25 * u_xlat36 + 0.00100000005;
					    u_xlat7.w = u_xlat24.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat5.xyz * u_xlat7.www;
					    u_xlat5 = textureLod(_ExclusionMask, u_xlat1.xy, 0.0);
					    u_xlat4 = u_xlat8 * u_xlat5.xxxx + u_xlat4;
					    u_xlat3 = u_xlat7 * u_xlat5.xxxx + u_xlat3;
					    u_xlatb24 = 2.0<u_xlat12;
					    if(u_xlatb24){
					        u_xlat0.x = u_xlat0.x * u_xlat2.x + -2.0;
					        u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					        u_xlat24.x = u_xlat12 * 0.800000012;
					        u_xlat2 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(12.3299999, 13.6999998, 15.0699997, 16.4400005);
					        u_xlat5 = u_xlat2.xxyy * u_xlat6.zwzw;
					        u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, -0.707106829);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat8.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat7 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					        u_xlat9 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					        u_xlat7 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					        u_xlat36 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.923879385, -0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat5.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat8.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat5.xyz * u_xlat10.www;
					        u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					        u_xlat5 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					        u_xlat9 = u_xlat10 * u_xlat5.xxxx + u_xlat9;
					        u_xlat5 = u_xlat8 * u_xlat5.xxxx + u_xlat7;
					        u_xlat2 = u_xlat2.zzww * u_xlat6.zwzw;
					        u_xlat2 = u_xlat2 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat2.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat2.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-1.0, 0.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat8.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat7.xyz * u_xlat10.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat7 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					        u_xlat9 = u_xlat10 * u_xlat7.xxxx + u_xlat9;
					        u_xlat5 = u_xlat8 * u_xlat7.xxxx + u_xlat5;
					        u_xlat36 = dot(u_xlat2.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat2.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.923879385, 0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat8.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat7.xyz * u_xlat10.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat2 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					        u_xlat7 = u_xlat10 * u_xlat2.xxxx + u_xlat9;
					        u_xlat2 = u_xlat8 * u_xlat2.xxxx + u_xlat5;
					        u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(17.8099995, 19.1800003, 20.5499992, 21.9200001);
					        u_xlat8 = u_xlat5.xxyy * u_xlat6.zwzw;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, 0.707106829);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat10.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat9 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat11 * u_xlat9.xxxx + u_xlat7;
					        u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					        u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.382683486, -0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					        u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					        u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					        u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.382683396, 0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					        u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					        u_xlat36 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, -1.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat5 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat10 * u_xlat5.xxxx + u_xlat7;
					        u_xlat2 = u_xlat9 * u_xlat5.xxxx + u_xlat2;
					        u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(23.2900009, 24.6599998, 26.0300007, 27.3999996);
					        u_xlat8 = u_xlat5.xxyy * u_xlat6.zwzw;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, 1.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat10.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat9 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat11 * u_xlat9.xxxx + u_xlat7;
					        u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					        u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.382683396, -0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					        u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					        u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					        u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.382683486, 0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					        u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					        u_xlat36 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, -0.707106829);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat5 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat10 * u_xlat5.xxxx + u_xlat7;
					        u_xlat2 = u_xlat9 * u_xlat5.xxxx + u_xlat2;
					        u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(28.7700005, 30.1399994, 31.5100002, 32.8800011);
					        u_xlat8 = u_xlat5.xxyy * u_xlat6.zwzw;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.923879385, -0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat10.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat9 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat11 * u_xlat9.xxxx + u_xlat7;
					        u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					        u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(1.0, 0.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					        u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					        u_xlat5 = u_xlat5.zzww * u_xlat6;
					        u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.923879385, 0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat6.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat8.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					        u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					        u_xlat6 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat9 * u_xlat6.xxxx + u_xlat7;
					        u_xlat2 = u_xlat8 * u_xlat6.xxxx + u_xlat2;
					        u_xlat36 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, 0.707106829);
					        u_xlat24.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					        u_xlat6 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					        u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					        u_xlat24.x = sqrt(u_xlat24.x);
					        u_xlat24.x = u_xlat6.x * 10.0 + (-u_xlat24.x);
					        u_xlat24.x = u_xlat24.x + 0.25;
					        u_xlat24.x = u_xlat24.x * 4.0;
					        u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					        u_xlat0.x = u_xlat0.x * u_xlat24.x;
					        u_xlat24.x = (-u_xlat5.w) + _CoCParams1.z;
					        u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					        u_xlat36 = u_xlat6.y * u_xlat0.x;
					        u_xlat24.x = u_xlat24.x + 1.0;
					        u_xlat8.w = u_xlat36 * u_xlat24.x + 0.00100000005;
					        u_xlat6.w = u_xlat0.x * u_xlat6.z + 0.00100000005;
					        u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					        u_xlat6.xyz = u_xlat5.xyz * u_xlat6.www;
					        u_xlat5 = textureLod(_ExclusionMask, u_xlat1.xy, 0.0);
					        u_xlat4 = u_xlat8 * u_xlat5.xxxx + u_xlat7;
					        u_xlat3 = u_xlat6 * u_xlat5.xxxx + u_xlat2;
					    }
					    u_xlat0.x = max(u_xlat12, 0.5);
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat4.w;
					    u_xlat0.x = u_xlat0.x * 0.125663713;
					    u_xlat0 = u_xlat0.xxxx;
					    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.w + 9.99999994e-09;
					    u_xlat1.xyz = u_xlat3.xyz / u_xlat1.xxx;
					    u_xlat2.x = u_xlat4.w + 9.99999994e-09;
					    u_xlat2.xyz = u_xlat4.xyz / u_xlat2.xxx;
					    u_xlat2.xyz = (-u_xlat1.xyz) + u_xlat2.xyz;
					    SV_Target0.xyz = u_xlat0.www * u_xlat2.xyz + u_xlat1.xyz;
					    SV_Target0.w = u_xlat1.w;
					    SV_Target1 = u_xlat0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _AvgCenterDepth;
					//   sampler2D _HalfResSourceDepthTexture;
					//   sampler2D _PresortTexture;
					//   float4 _ScionResolutionParameters1;
					//   float4 _ScionResolutionParameters2;
					//   float _TemporalUVOffset;
					//   sampler2D _TiledNeighbourhoodData;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters1 c0       1
					//   _ScionResolutionParameters2 c1       1
					//   _TemporalUVOffset           c2       1
					//   _TiledNeighbourhoodData     s0       1
					//   _HalfResSourceDepthTexture  s1       1
					//   _PresortTexture             s2       1
					//   _AvgCenterDepth             s3       1
					//
					
					    ps_3_0
					    def c3, 1, 0, 0.5, 9.99999975e-005
					    def c4, 0.349999994, 10, 0.00100000005, 0.800000012
					    def c5, 0.400000006, 0, 1.37, 0.707106829
					    def c6, 0.000231481477, 0.25, 0, 3571
					    def c7, -5, -6, -7, -8
					    def c8, -9, -10, -11, -12
					    def c9, -13, -14, -15, -16
					    def c10, -17, -18, -19, -20
					    def c11, -21, -22, -23, -24
					    def c12, 0.125663713, 9.99999994e-009, 0, 0
					    def c13, 0, 9, -0.923879385, -0.382683486
					    def c14, 2, -1, -3, -4
					    def c15, 0.707106829, -0.707106829, 0, -1
					    def c16, -0.923879385, 0.382683486, 0.382683396, 0.923879385
					    defi i0, 8, 0, 0, 0
					    defi i1, 16, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    dcl_2d s3
					    mul r0, c3.xxyy, v0.xyxx
					    texldl r1, r0, s0
					    texldl r2, r0, s1
					    if_lt r1.x, c3.x
					      mov oC1, c3.y
					    else
					      texldl r3, c3.zzyy, s3
					      texldl r0, r0, s2
					      add_sat r0.x, -r2.w, r3.x
					      add r0.x, r0.x, c3.x
					      mad r0.x, r0.y, r0.x, c3.w
					      add r0.y, r0.z, c3.w
					      mul r1.yzw, r0.x, r2.xxyz
					      mul r3.yzw, r0.y, r2.xxyz
					      mul r0.z, r1.x, c5.x
					      mul r4.xy, c0, v0
					      mov r5.zw, c3.y
					      mov r6.xyz, r3.yzww
					      mov r6.w, r0.y
					      mov r7.xyz, r1.yzww
					      mov r7.w, r0.x
					      mov r0.w, c3.x
					      rep i0
					        mov r4.z, c5.z
					        mad r4.z, r0.w, r4.z, c2.x
					        mul r4.zw, r4.z, r4.xyxy
					        mad r4.zw, r4, c6.x, c6.xyyz
					        dp2add r8.x, r4.zwzw, c6.w, c6.z
					        mul r4.zw, r4, r8.x
					        frc r4.zw, r4
					        mad r4.zw, r4, c14.x, c14.y
					        add r8, r0.w, -c14_abs.yxzw
					        add r9, r0.w, c7
					        cmp r10.xy, -r8_abs.x, c15, c15.z
					        cmp r8.xy, -r8_abs.y, c15.wzzw, r10
					        cmp r8.xy, -r8_abs.z, c5.w, r8
					        cmp r8.xy, -r8_abs.w, c15.zwzw, r8
					        cmp r8.xy, -r9_abs.x, c3.yxzw, r8
					        cmp r8.xy, -r9_abs.y, -c5.w, r8
					        cmp r8.xy, -r9_abs.z, c3, r8
					        cmp r8.xy, -r9_abs.w, c15.yxzw, r8
					        mad r4.zw, r4, c4.x, r8.xyxy
					        mul r4.zw, r0.z, r4
					        mad r5.xy, r4.zwzw, c1, v0
					        texldl r8, r5.xyww, s1
					        texldl r9, r5, s2
					        dp2add r4.z, r4.zwzw, r4.zwzw, c3.y
					        rsq r4.z, r4.z
					        rcp r4.z, r4.z
					        mad r4.z, r9.x, c4.y, -r4.z
					        add r4.z, r4.z, c6.y
					        mul_sat r4.z, r4.z, -c14.w
					        add_sat r4.w, r3.x, -r8.w
					        mul r5.x, r9.y, r4.z
					        add r4.w, r4.w, c3.x
					        mad r10.w, r5.x, r4.w, c4.z
					        mad r9.w, r4.z, r9.z, c4.z
					        mul r10.xyz, r8, r10.w
					        mul r9.xyz, r8, r9.w
					        add r7, r7, r10
					        add r6, r6, r9
					        add r0.w, r0.w, c3.x
					      endrep
					      if_lt c14.x, r1.x
					        add_sat r0.x, r1.x, -c14.x
					        mul r0.y, r1.x, c4.w
					        mov r5.zw, c3.y
					        mov r8, r6
					        mov r9, r7
					        mov r0.z, c13.y
					        rep i1
					          mov r1.z, c5.z
					          mad r0.w, r0.z, r1.z, c2.x
					          mul r1.yz, r0.w, r4.xxyw
					          mad r1.yz, r1, c6.x, c6
					          dp2add r0.w, r1.yzzw, c6.w, c6.z
					          mul r1.yz, r1, r0.w
					          frc r1.yz, r1
					          mad r1.yz, r1, c14.x, c14.y
					          add r10, r0.z, c8
					          add r11, r0.z, c9
					          add r12, r0.z, c10
					          add r13, r0.z, c11
					          cmp r3.yz, -r10_abs.x, c15.xxyw, c15.z
					          cmp r3.yz, -r10_abs.y, c13.xzww, r3
					          cmp r3.yz, -r10_abs.z, c15.xwzw, r3
					          cmp r3.yz, -r10_abs.w, c16.xxyw, r3
					          cmp r3.yz, -r11_abs.x, c5.w, r3
					          cmp r3.yz, -r11_abs.y, c16.xyxw, r3
					          cmp r3.yz, -r11_abs.z, c16.xzww, r3
					          cmp r3.yz, -r11_abs.w, c15.xzww, r3
					          cmp r3.yz, -r12_abs.x, c3.xyxw, r3
					          cmp r3.yz, -r12_abs.y, -c16.xzww, r3
					          cmp r3.yz, -r12_abs.z, -c16.xyxw, r3
					          cmp r3.yz, -r12_abs.w, -c5.w, r3
					          cmp r3.yz, -r13_abs.x, -c16.xxyw, r3
					          cmp r3.yz, -r13_abs.y, c3.xxyw, r3
					          cmp r3.yz, -r13_abs.z, -c13.xzww, r3
					          cmp r3.yz, -r13_abs.w, c15.xyxw, r3
					          mad r1.yz, r1, c4.x, r3
					          mul r1.yz, r0.y, r1
					          mad r5.xy, r1.yzzw, c1, v0
					          texldl r10, r5.xyww, s1
					          texldl r11, r5, s2
					          dp2add r0.w, r1.yzzw, r1.yzzw, c3.y
					          rsq r0.w, r0.w
					          rcp r0.w, r0.w
					          mad r0.w, r11.x, c4.y, -r0.w
					          add r0.w, r0.w, c6.y
					          mul_sat r0.w, r0.w, -c14.w
					          mul r0.w, r0.x, r0.w
					          add_sat r1.y, r3.x, -r10.w
					          mul r1.z, r11.y, r0.w
					          add r1.y, r1.y, c3.x
					          mad r12.w, r1.z, r1.y, c4.z
					          mad r11.w, r0.w, r11.z, c4.z
					          mul r12.xyz, r10, r12.w
					          mul r11.xyz, r10, r11.w
					          add r9, r9, r12
					          add r8, r8, r11
					          add r0.z, r0.z, c3.x
					        endrep
					        mov r6, r8
					        mov r7, r9
					      endif
					      max r0.x, r1.x, c3.z
					      mul r0.x, r0.x, r0.x
					      mul r0.x, r0.x, r7.w
					      mul r0.x, r0.x, c12.x
					      mov_sat r0, r0.x
					      add r1.x, r6.w, c12.y
					      rcp r1.x, r1.x
					      mul r1.xyz, r1.x, r6
					      add r1.w, r7.w, c12.y
					      rcp r1.w, r1.w
					      mad r3.xyz, r7, r1.w, -r1
					      mad r2.xyz, r0.w, r3, r1
					      mov oC1, r0
					    endif
					    mov oC0, r2
					
					// approximately 162 instruction slots used (16 texture, 146 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _ScionResolutionParameters1;
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_3[16];
						float _TemporalUVOffset;
					};
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _AvgCenterDepth;
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _PresortTexture;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					layout(location = 1) out vec4 SV_Target1;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec4 u_xlat12;
					vec2 u_xlat13;
					bool u_xlatb13;
					float u_xlat14;
					vec2 u_xlat15;
					vec2 u_xlat26;
					float u_xlat39;
					void main()
					{
					    u_xlat0 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlatb13 = u_xlat0.x<1.0;
					    if(u_xlatb13){
					        SV_Target0 = u_xlat1;
					        SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
					        return;
					    }
					    u_xlat2 = textureLod(_AvgCenterDepth, vec2(0.5, 0.5), 0.0);
					    u_xlat3 = textureLod(_PresortTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat13.x = (-u_xlat1.w) + u_xlat2.x;
					    u_xlat13.x = clamp(u_xlat13.x, 0.0, 1.0);
					    u_xlat13.x = u_xlat13.x + 1.0;
					    u_xlat4.w = u_xlat3.y * u_xlat13.x + 9.99999975e-05;
					    u_xlat3.w = u_xlat3.z + 9.99999975e-05;
					    u_xlat4.xyz = u_xlat1.xyz * u_xlat4.www;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat3.www;
					    u_xlat13.x = u_xlat0.x * 0.400000006;
					    u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(1.37, 2.74000001, 4.11000013, 5.48000002);
					    u_xlat6 = vs_TEXCOORD0.xyxy * _ScionResolutionParameters1.xyxy;
					    u_xlat7 = u_xlat5.xxyy * u_xlat6.zwzw;
					    u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat26.x = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					    u_xlat26.xy = u_xlat7.xy * u_xlat26.xx;
					    u_xlat26.xy = fract(u_xlat26.xy);
					    u_xlat26.xy = u_xlat26.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat26.xy = u_xlat26.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, -0.707106829);
					    u_xlat26.xy = u_xlat13.xx * u_xlat26.xy;
					    u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					    u_xlat26.x = sqrt(u_xlat26.x);
					    u_xlat26.x = u_xlat9.x * 10.0 + (-u_xlat26.x);
					    u_xlat26.x = u_xlat26.x + 0.25;
					    u_xlat26.x = u_xlat26.x * 4.0;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat39 = u_xlat2.x + (-u_xlat8.w);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat9.y * u_xlat26.x;
					    u_xlat39 = u_xlat39 + 1.0;
					    u_xlat10.w = u_xlat1.x * u_xlat39 + 0.00100000005;
					    u_xlat9.w = u_xlat26.x * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat4 = u_xlat4 + u_xlat10;
					    u_xlat3 = u_xlat3 + u_xlat9;
					    u_xlat26.x = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					    u_xlat26.xy = u_xlat7.zw * u_xlat26.xx;
					    u_xlat26.xy = fract(u_xlat26.xy);
					    u_xlat26.xy = u_xlat26.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat26.xy = u_xlat26.xy * vec2(0.349999994, 0.349999994) + vec2(-1.0, 0.0);
					    u_xlat26.xy = u_xlat13.xx * u_xlat26.xy;
					    u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					    u_xlat26.x = sqrt(u_xlat26.x);
					    u_xlat26.x = u_xlat8.x * 10.0 + (-u_xlat26.x);
					    u_xlat26.x = u_xlat26.x + 0.25;
					    u_xlat26.x = u_xlat26.x * 4.0;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat39 = u_xlat2.x + (-u_xlat7.w);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat8.y * u_xlat26.x;
					    u_xlat39 = u_xlat39 + 1.0;
					    u_xlat9.w = u_xlat1.x * u_xlat39 + 0.00100000005;
					    u_xlat8.w = u_xlat26.x * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat4 = u_xlat4 + u_xlat9;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					    u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat26.x = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					    u_xlat26.xy = u_xlat5.xy * u_xlat26.xx;
					    u_xlat26.xy = fract(u_xlat26.xy);
					    u_xlat26.xy = u_xlat26.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat26.xy = u_xlat26.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, 0.707106829);
					    u_xlat26.xy = u_xlat13.xx * u_xlat26.xy;
					    u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					    u_xlat26.x = sqrt(u_xlat26.x);
					    u_xlat26.x = u_xlat8.x * 10.0 + (-u_xlat26.x);
					    u_xlat26.x = u_xlat26.x + 0.25;
					    u_xlat26.x = u_xlat26.x * 4.0;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat39 = u_xlat2.x + (-u_xlat7.w);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat8.y * u_xlat26.x;
					    u_xlat39 = u_xlat39 + 1.0;
					    u_xlat9.w = u_xlat1.x * u_xlat39 + 0.00100000005;
					    u_xlat8.w = u_xlat26.x * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat4 = u_xlat4 + u_xlat9;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat26.x = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					    u_xlat26.xy = u_xlat5.zw * u_xlat26.xx;
					    u_xlat26.xy = fract(u_xlat26.xy);
					    u_xlat26.xy = u_xlat26.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat26.xy = u_xlat26.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, -1.0);
					    u_xlat26.xy = u_xlat13.xx * u_xlat26.xy;
					    u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					    u_xlat26.x = sqrt(u_xlat26.x);
					    u_xlat26.x = u_xlat7.x * 10.0 + (-u_xlat26.x);
					    u_xlat26.x = u_xlat26.x + 0.25;
					    u_xlat26.x = u_xlat26.x * 4.0;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat39 = u_xlat2.x + (-u_xlat5.w);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat7.y * u_xlat26.x;
					    u_xlat39 = u_xlat39 + 1.0;
					    u_xlat8.w = u_xlat1.x * u_xlat39 + 0.00100000005;
					    u_xlat7.w = u_xlat26.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat5.xyz * u_xlat7.www;
					    u_xlat4 = u_xlat4 + u_xlat8;
					    u_xlat3 = u_xlat3 + u_xlat7;
					    u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(6.8499999, 8.22000027, 9.59000015, 10.96);
					    u_xlat7 = u_xlat5.xxyy * u_xlat6.zwzw;
					    u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat26.x = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					    u_xlat26.xy = u_xlat7.xy * u_xlat26.xx;
					    u_xlat26.xy = fract(u_xlat26.xy);
					    u_xlat26.xy = u_xlat26.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat26.xy = u_xlat26.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, 1.0);
					    u_xlat26.xy = u_xlat13.xx * u_xlat26.xy;
					    u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					    u_xlat26.x = sqrt(u_xlat26.x);
					    u_xlat26.x = u_xlat9.x * 10.0 + (-u_xlat26.x);
					    u_xlat26.x = u_xlat26.x + 0.25;
					    u_xlat26.x = u_xlat26.x * 4.0;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat39 = u_xlat2.x + (-u_xlat8.w);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat9.y * u_xlat26.x;
					    u_xlat39 = u_xlat39 + 1.0;
					    u_xlat10.w = u_xlat1.x * u_xlat39 + 0.00100000005;
					    u_xlat9.w = u_xlat26.x * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat4 = u_xlat4 + u_xlat10;
					    u_xlat3 = u_xlat3 + u_xlat9;
					    u_xlat26.x = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					    u_xlat26.xy = u_xlat7.zw * u_xlat26.xx;
					    u_xlat26.xy = fract(u_xlat26.xy);
					    u_xlat26.xy = u_xlat26.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat26.xy = u_xlat26.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, -0.707106829);
					    u_xlat26.xy = u_xlat13.xx * u_xlat26.xy;
					    u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					    u_xlat26.x = sqrt(u_xlat26.x);
					    u_xlat26.x = u_xlat8.x * 10.0 + (-u_xlat26.x);
					    u_xlat26.x = u_xlat26.x + 0.25;
					    u_xlat26.x = u_xlat26.x * 4.0;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat39 = u_xlat2.x + (-u_xlat7.w);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat8.y * u_xlat26.x;
					    u_xlat39 = u_xlat39 + 1.0;
					    u_xlat9.w = u_xlat1.x * u_xlat39 + 0.00100000005;
					    u_xlat8.w = u_xlat26.x * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat4 = u_xlat4 + u_xlat9;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					    u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat26.x = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					    u_xlat26.xy = u_xlat5.xy * u_xlat26.xx;
					    u_xlat26.xy = fract(u_xlat26.xy);
					    u_xlat26.xy = u_xlat26.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat26.xy = u_xlat26.xy * vec2(0.349999994, 0.349999994) + vec2(1.0, 0.0);
					    u_xlat26.xy = u_xlat13.xx * u_xlat26.xy;
					    u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					    u_xlat26.x = sqrt(u_xlat26.x);
					    u_xlat26.x = u_xlat8.x * 10.0 + (-u_xlat26.x);
					    u_xlat26.x = u_xlat26.x + 0.25;
					    u_xlat26.x = u_xlat26.x * 4.0;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat39 = u_xlat2.x + (-u_xlat7.w);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat8.y * u_xlat26.x;
					    u_xlat39 = u_xlat39 + 1.0;
					    u_xlat9.w = u_xlat1.x * u_xlat39 + 0.00100000005;
					    u_xlat8.w = u_xlat26.x * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat4 = u_xlat4 + u_xlat9;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat26.x = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					    u_xlat26.xy = u_xlat5.zw * u_xlat26.xx;
					    u_xlat26.xy = fract(u_xlat26.xy);
					    u_xlat26.xy = u_xlat26.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat26.xy = u_xlat26.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, 0.707106829);
					    u_xlat13.xy = u_xlat13.xx * u_xlat26.xy;
					    u_xlat1.xy = u_xlat13.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat13.x = dot(u_xlat13.xy, u_xlat13.xy);
					    u_xlat13.x = sqrt(u_xlat13.x);
					    u_xlat13.x = u_xlat7.x * 10.0 + (-u_xlat13.x);
					    u_xlat13.x = u_xlat13.x + 0.25;
					    u_xlat13.x = u_xlat13.x * 4.0;
					    u_xlat13.x = clamp(u_xlat13.x, 0.0, 1.0);
					    u_xlat26.x = u_xlat2.x + (-u_xlat5.w);
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat39 = u_xlat7.y * u_xlat13.x;
					    u_xlat26.x = u_xlat26.x + 1.0;
					    u_xlat8.w = u_xlat39 * u_xlat26.x + 0.00100000005;
					    u_xlat7.w = u_xlat13.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat5.xyz * u_xlat7.www;
					    u_xlat4 = u_xlat4 + u_xlat8;
					    u_xlat3 = u_xlat3 + u_xlat7;
					    u_xlatb13 = 2.0<u_xlat0.x;
					    if(u_xlatb13){
					        u_xlat13.x = u_xlat0.x + -2.0;
					        u_xlat13.x = clamp(u_xlat13.x, 0.0, 1.0);
					        u_xlat26.x = u_xlat0.x * 0.800000012;
					        u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(12.3299999, 13.6999998, 15.0699997, 16.4400005);
					        u_xlat7 = u_xlat5.xxyy * u_xlat6.zwzw;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, -0.707106829);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat8.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat9.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = u_xlat4 + u_xlat10;
					        u_xlat9 = u_xlat3 + u_xlat9;
					        u_xlat39 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.923879385, -0.382683486);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat7.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat7.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat7.xyz * u_xlat10.www;
					        u_xlat7 = u_xlat8 + u_xlat11;
					        u_xlat8 = u_xlat9 + u_xlat10;
					        u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					        u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-1.0, 0.0);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat7 = u_xlat7 + u_xlat11;
					        u_xlat8 = u_xlat8 + u_xlat10;
					        u_xlat39 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.923879385, 0.382683486);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat5.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat9.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat5.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat5.xyz * u_xlat9.www;
					        u_xlat5 = u_xlat7 + u_xlat10;
					        u_xlat7 = u_xlat8 + u_xlat9;
					        u_xlat8 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(17.8099995, 19.1800003, 20.5499992, 21.9200001);
					        u_xlat9 = u_xlat6.zwzw * u_xlat8.xxyy;
					        u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, 0.707106829);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat11.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat10.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat11.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat12.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat11.w = u_xlat39 * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					        u_xlat5 = u_xlat5 + u_xlat12;
					        u_xlat7 = u_xlat7 + u_xlat11;
					        u_xlat39 = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.382683486, -0.923879385);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat5 = u_xlat5 + u_xlat11;
					        u_xlat7 = u_xlat7 + u_xlat10;
					        u_xlat8 = u_xlat6.zwzw * u_xlat8.zzww;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.382683396, 0.923879385);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat5 = u_xlat5 + u_xlat11;
					        u_xlat7 = u_xlat7 + u_xlat10;
					        u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, -1.0);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat8.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat9.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat5 = u_xlat5 + u_xlat10;
					        u_xlat7 = u_xlat7 + u_xlat9;
					        u_xlat8 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(23.2900009, 24.6599998, 26.0300007, 27.3999996);
					        u_xlat9 = u_xlat6.zwzw * u_xlat8.xxyy;
					        u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, 1.0);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat11.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat10.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat11.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat12.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat11.w = u_xlat39 * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					        u_xlat5 = u_xlat5 + u_xlat12;
					        u_xlat7 = u_xlat7 + u_xlat11;
					        u_xlat39 = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.382683396, -0.923879385);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat5 = u_xlat5 + u_xlat11;
					        u_xlat7 = u_xlat7 + u_xlat10;
					        u_xlat8 = u_xlat6.zwzw * u_xlat8.zzww;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.382683486, 0.923879385);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat5 = u_xlat5 + u_xlat11;
					        u_xlat7 = u_xlat7 + u_xlat10;
					        u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, -0.707106829);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat8.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat9.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat5 = u_xlat5 + u_xlat10;
					        u_xlat7 = u_xlat7 + u_xlat9;
					        u_xlat8 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(28.7700005, 30.1399994, 31.5100002, 32.8800011);
					        u_xlat9 = u_xlat6.zwzw * u_xlat8.xxyy;
					        u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.923879385, -0.382683486);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat11.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat10.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat11.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat12.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat11.w = u_xlat39 * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					        u_xlat5 = u_xlat5 + u_xlat12;
					        u_xlat7 = u_xlat7 + u_xlat11;
					        u_xlat39 = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(1.0, 0.0);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat5 = u_xlat5 + u_xlat11;
					        u_xlat7 = u_xlat7 + u_xlat10;
					        u_xlat6 = u_xlat6 * u_xlat8.zzww;
					        u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.923879385, 0.382683486);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat8.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat9.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat5 = u_xlat5 + u_xlat10;
					        u_xlat7 = u_xlat7 + u_xlat9;
					        u_xlat39 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, 0.707106829);
					        u_xlat26.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					        u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					        u_xlat26.x = sqrt(u_xlat26.x);
					        u_xlat26.x = u_xlat8.x * 10.0 + (-u_xlat26.x);
					        u_xlat26.x = u_xlat26.x + 0.25;
					        u_xlat26.x = u_xlat26.x * 4.0;
					        u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					        u_xlat13.x = u_xlat13.x * u_xlat26.x;
					        u_xlat26.x = u_xlat2.x + (-u_xlat6.w);
					        u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					        u_xlat39 = u_xlat8.y * u_xlat13.x;
					        u_xlat26.x = u_xlat26.x + 1.0;
					        u_xlat2.w = u_xlat39 * u_xlat26.x + 0.00100000005;
					        u_xlat8.w = u_xlat13.x * u_xlat8.z + 0.00100000005;
					        u_xlat2.xyz = u_xlat2.www * u_xlat6.xyz;
					        u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					        u_xlat4 = u_xlat2 + u_xlat5;
					        u_xlat3 = u_xlat7 + u_xlat8;
					    }
					    u_xlat0.x = max(u_xlat0.x, 0.5);
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat4.w;
					    u_xlat0.x = u_xlat0.x * 0.125663713;
					    u_xlat0 = u_xlat0.xxxx;
					    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.w + 9.99999994e-09;
					    u_xlat1.xyz = u_xlat3.xyz / u_xlat1.xxx;
					    u_xlat2.x = u_xlat4.w + 9.99999994e-09;
					    u_xlat2.xyz = u_xlat4.xyz / u_xlat2.xxx;
					    u_xlat2.xyz = (-u_xlat1.xyz) + u_xlat2.xyz;
					    SV_Target0.xyz = u_xlat0.www * u_xlat2.xyz + u_xlat1.xyz;
					    SV_Target0.w = u_xlat1.w;
					    SV_Target1 = u_xlat0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" "SC_DOF_MASK_ON" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _AvgCenterDepth;
					//   sampler2D _ExclusionMask;
					//   sampler2D _HalfResSourceDepthTexture;
					//   sampler2D _PresortTexture;
					//   float4 _ScionResolutionParameters1;
					//   float4 _ScionResolutionParameters2;
					//   float _TemporalUVOffset;
					//   sampler2D _TiledNeighbourhoodData;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters1 c0       1
					//   _ScionResolutionParameters2 c1       1
					//   _TemporalUVOffset           c2       1
					//   _TiledNeighbourhoodData     s0       1
					//   _ExclusionMask              s1       1
					//   _HalfResSourceDepthTexture  s2       1
					//   _PresortTexture             s3       1
					//   _AvgCenterDepth             s4       1
					//
					
					    ps_3_0
					    def c3, 1, 0, 0.5, 9.99999975e-005
					    def c4, 0.349999994, 10, 0.00100000005, 0.800000012
					    def c5, 0.400000006, 0, 1.37, 0.707106829
					    def c6, 0.000231481477, 0.25, 0, 3571
					    def c7, -5, -6, -7, -8
					    def c8, -9, -10, -11, -12
					    def c9, -13, -14, -15, -16
					    def c10, -17, -18, -19, -20
					    def c11, -21, -22, -23, -24
					    def c12, 0.125663713, 9.99999994e-009, 0, 0
					    def c13, 0, 9, -0.923879385, -0.382683486
					    def c14, 2, -1, -3, -4
					    def c15, 0.707106829, -0.707106829, 0, -1
					    def c16, -0.923879385, 0.382683486, 0.382683396, 0.923879385
					    defi i0, 8, 0, 0, 0
					    defi i1, 16, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    dcl_2d s3
					    dcl_2d s4
					    mul r0, c3.xxyy, v0.xyxx
					    texldl r1, r0, s0
					    texldl r2, r0, s2
					    texldl r3, r0, s1
					    mul r1.y, r1.x, r3.x
					    if_lt r1.y, c3.x
					      mov oC1, c3.y
					    else
					      texldl r4, c3.zzyy, s4
					      texldl r0, r0, s3
					      add_sat r0.x, -r2.w, r4.x
					      add r0.x, r0.x, c3.x
					      mad r0.x, r0.y, r0.x, c3.w
					      add r0.y, r0.z, c3.w
					      mul r3.yzw, r0.x, r2.xxyz
					      mul r4.yzw, r0.y, r2.xxyz
					      mul r0.z, r1.y, c5.x
					      mul r1.zw, c0.xyxy, v0.xyxy
					      mov r5.zw, c3.y
					      mov r6.xyz, r4.yzww
					      mov r6.w, r0.y
					      mov r7.xyz, r3.yzww
					      mov r7.w, r0.x
					      mov r0.w, c3.x
					      rep i0
					        mov r8.z, c5.z
					        mad r8.x, r0.w, r8.z, c2.x
					        mul r8.xy, r1.zwzw, r8.x
					        mad r8.xy, r8, c6.x, c6.yzzw
					        dp2add r8.z, r8, c6.w, c6.z
					        mul r8.xy, r8, r8.z
					        frc r8.xy, r8
					        mad r8.xy, r8, c14.x, c14.y
					        add r9, r0.w, -c14_abs.yxzw
					        add r10, r0.w, c7
					        cmp r8.zw, -r9_abs.x, c15.xyxy, c15.z
					        cmp r8.zw, -r9_abs.y, c15.xywz, r8
					        cmp r8.zw, -r9_abs.z, c5.w, r8
					        cmp r8.zw, -r9_abs.w, c15, r8
					        cmp r8.zw, -r10_abs.x, c3.xyyx, r8
					        cmp r8.zw, -r10_abs.y, -c5.w, r8
					        cmp r8.zw, -r10_abs.z, c3.xyxy, r8
					        cmp r8.zw, -r10_abs.w, c15.xyyx, r8
					        mad r8.xy, r8, c4.x, r8.zwzw
					        mul r8.xy, r0.z, r8
					        mad r5.xy, r8, c1, v0
					        texldl r9, r5.xyww, s2
					        texldl r10, r5.xyww, s3
					        dp2add r8.x, r8, r8, c3.y
					        rsq r8.x, r8.x
					        rcp r8.x, r8.x
					        mad r8.x, r10.x, c4.y, -r8.x
					        add r8.x, r8.x, c6.y
					        mul_sat r8.x, r8.x, -c14.w
					        add_sat r8.y, r4.x, -r9.w
					        mul r8.z, r10.y, r8.x
					        add r8.y, r8.y, c3.x
					        mad r11.w, r8.z, r8.y, c4.z
					        mad r8.w, r8.x, r10.z, c4.z
					        mul r11.xyz, r9, r11.w
					        mul r8.xyz, r8.w, r9
					        texldl r9, r5, s1
					        mad r7, r11, r9.x, r7
					        mad r6, r8, r9.x, r6
					        add r0.w, r0.w, c3.x
					      endrep
					      if_lt c14.x, r1.y
					        mad_sat r0.x, r1.x, r3.x, -c14.x
					        mul r0.y, r1.y, c4.w
					        mov r3.zw, c3.y
					        mov r5, r6
					        mov r8, r7
					        mov r0.z, c13.y
					        rep i1
					          mov r4.z, c5.z
					          mad r0.w, r0.z, r4.z, c2.x
					          mul r4.yz, r0.w, r1.xzww
					          mad r4.yz, r4, c6.x, c6
					          dp2add r0.w, r4.yzzw, c6.w, c6.z
					          mul r4.yz, r4, r0.w
					          frc r4.yz, r4
					          mad r4.yz, r4, c14.x, c14.y
					          add r9, r0.z, c8
					          add r10, r0.z, c9
					          add r11, r0.z, c10
					          add r12, r0.z, c11
					          cmp r13.xy, -r9_abs.x, c15, c15.z
					          cmp r9.xy, -r9_abs.y, c13.zwzw, r13
					          cmp r9.xy, -r9_abs.z, c15.wzzw, r9
					          cmp r9.xy, -r9_abs.w, c16, r9
					          cmp r9.xy, -r10_abs.x, c5.w, r9
					          cmp r9.xy, -r10_abs.y, c16.yxzw, r9
					          cmp r9.xy, -r10_abs.z, c16.zwzw, r9
					          cmp r9.xy, -r10_abs.w, c15.zwzw, r9
					          cmp r9.xy, -r11_abs.x, c3.yxzw, r9
					          cmp r9.xy, -r11_abs.y, -c16.zwzw, r9
					          cmp r9.xy, -r11_abs.z, -c16.yxzw, r9
					          cmp r9.xy, -r11_abs.w, -c5.w, r9
					          cmp r9.xy, -r12_abs.x, -c16, r9
					          cmp r9.xy, -r12_abs.y, c3, r9
					          cmp r9.xy, -r12_abs.z, -c13.zwzw, r9
					          cmp r9.xy, -r12_abs.w, c15.yxzw, r9
					          mad r4.yz, r4, c4.x, r9.xxyw
					          mul r4.yz, r0.y, r4
					          mad r3.xy, r4.yzzw, c1, v0
					          texldl r9, r3.xyww, s2
					          texldl r10, r3.xyww, s3
					          dp2add r0.w, r4.yzzw, r4.yzzw, c3.y
					          rsq r0.w, r0.w
					          rcp r0.w, r0.w
					          mad r0.w, r10.x, c4.y, -r0.w
					          add r0.w, r0.w, c6.y
					          mul_sat r0.w, r0.w, -c14.w
					          mul r0.w, r0.x, r0.w
					          add_sat r1.x, r4.x, -r9.w
					          mul r4.y, r10.y, r0.w
					          add r1.x, r1.x, c3.x
					          mad r11.w, r4.y, r1.x, c4.z
					          mad r10.w, r0.w, r10.z, c4.z
					          mul r11.xyz, r9, r11.w
					          mul r10.xyz, r9, r10.w
					          texldl r9, r3, s1
					          mad r8, r11, r9.x, r8
					          mad r5, r10, r9.x, r5
					          add r0.z, r0.z, c3.x
					        endrep
					        mov r6, r5
					        mov r7, r8
					      endif
					      max r0.x, r1.y, c3.z
					      mul r0.x, r0.x, r0.x
					      mul r0.x, r0.x, r7.w
					      mul r0.x, r0.x, c12.x
					      mov_sat r0, r0.x
					      add r1.x, r6.w, c12.y
					      rcp r1.x, r1.x
					      mul r1.xyz, r1.x, r6
					      add r1.w, r7.w, c12.y
					      rcp r1.w, r1.w
					      mad r3.xyz, r7, r1.w, -r1
					      mad r2.xyz, r0.w, r3, r1
					      mov oC1, r0
					    endif
					    mov oC0, r2
					
					// approximately 169 instruction slots used (22 texture, 147 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" "SC_DOF_MASK_ON" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _ScionResolutionParameters1;
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_3[16];
						float _TemporalUVOffset;
					};
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _AvgCenterDepth;
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _ExclusionMask;
					uniform  sampler2D _PresortTexture;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					layout(location = 1) out vec4 SV_Target1;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec4 u_xlat12;
					float u_xlat13;
					float u_xlat14;
					vec2 u_xlat15;
					vec2 u_xlat16;
					vec2 u_xlat26;
					bool u_xlatb26;
					float u_xlat27;
					float u_xlat39;
					void main()
					{
					    u_xlat0 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat2 = textureLod(_ExclusionMask, vs_TEXCOORD0.xy, 0.0);
					    u_xlat13 = u_xlat0.x * u_xlat2.x;
					    u_xlatb26 = u_xlat13<1.0;
					    if(u_xlatb26){
					        SV_Target0 = u_xlat1;
					        SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
					        return;
					    }
					    u_xlat3 = textureLod(_AvgCenterDepth, vec2(0.5, 0.5), 0.0);
					    u_xlat4 = textureLod(_PresortTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat26.x = (-u_xlat1.w) + u_xlat3.x;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat26.x = u_xlat26.x + 1.0;
					    u_xlat5.w = u_xlat4.y * u_xlat26.x + 9.99999975e-05;
					    u_xlat4.w = u_xlat4.z + 9.99999975e-05;
					    u_xlat5.xyz = u_xlat1.xyz * u_xlat5.www;
					    u_xlat4.xyz = u_xlat1.xyz * u_xlat4.www;
					    u_xlat26.x = u_xlat13 * 0.400000006;
					    u_xlat6 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(1.37, 2.74000001, 4.11000013, 5.48000002);
					    u_xlat7 = vs_TEXCOORD0.xyxy * _ScionResolutionParameters1.xyxy;
					    u_xlat8 = u_xlat6.xxyy * u_xlat7.zwzw;
					    u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, -0.707106829);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.x + (-u_xlat9.w);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat10.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					    u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					    u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					    u_xlat9 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat5 = u_xlat11 * u_xlat9.xxxx + u_xlat5;
					    u_xlat4 = u_xlat10 * u_xlat9.xxxx + u_xlat4;
					    u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-1.0, 0.0);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.x + (-u_xlat8.w);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat9.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					    u_xlat4 = u_xlat9 * u_xlat8.xxxx + u_xlat4;
					    u_xlat6 = u_xlat6.zzww * u_xlat7.zwzw;
					    u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat39 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat6.xy * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, 0.707106829);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.x + (-u_xlat8.w);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat9.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					    u_xlat4 = u_xlat9 * u_xlat8.xxxx + u_xlat4;
					    u_xlat39 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat6.zw * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, -1.0);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.x + (-u_xlat6.w);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat8.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat9.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat8.w = u_xlat39 * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat6 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat5 = u_xlat9 * u_xlat6.xxxx + u_xlat5;
					    u_xlat4 = u_xlat8 * u_xlat6.xxxx + u_xlat4;
					    u_xlat6 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(6.8499999, 8.22000027, 9.59000015, 10.96);
					    u_xlat8 = u_xlat6.xxyy * u_xlat7.zwzw;
					    u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, 1.0);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.x + (-u_xlat9.w);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat10.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					    u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					    u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					    u_xlat9 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat5 = u_xlat11 * u_xlat9.xxxx + u_xlat5;
					    u_xlat4 = u_xlat10 * u_xlat9.xxxx + u_xlat4;
					    u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, -0.707106829);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.x + (-u_xlat8.w);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat9.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					    u_xlat4 = u_xlat9 * u_xlat8.xxxx + u_xlat4;
					    u_xlat6 = u_xlat6.zzww * u_xlat7.zwzw;
					    u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat39 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat6.xy * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(1.0, 0.0);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.x + (-u_xlat8.w);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat9.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					    u_xlat4 = u_xlat9 * u_xlat8.xxxx + u_xlat4;
					    u_xlat39 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat6.zw * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, 0.707106829);
					    u_xlat26.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					    u_xlat26.x = sqrt(u_xlat26.x);
					    u_xlat26.x = u_xlat8.x * 10.0 + (-u_xlat26.x);
					    u_xlat26.x = u_xlat26.x + 0.25;
					    u_xlat26.x = u_xlat26.x * 4.0;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat39 = u_xlat3.x + (-u_xlat6.w);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat27 = u_xlat8.y * u_xlat26.x;
					    u_xlat39 = u_xlat39 + 1.0;
					    u_xlat9.w = u_xlat27 * u_xlat39 + 0.00100000005;
					    u_xlat8.w = u_xlat26.x * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat6 = textureLod(_ExclusionMask, u_xlat1.xy, 0.0);
					    u_xlat5 = u_xlat9 * u_xlat6.xxxx + u_xlat5;
					    u_xlat4 = u_xlat8 * u_xlat6.xxxx + u_xlat4;
					    u_xlatb26 = 2.0<u_xlat13;
					    if(u_xlatb26){
					        u_xlat0.x = u_xlat0.x * u_xlat2.x + -2.0;
					        u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					        u_xlat26.x = u_xlat13 * 0.800000012;
					        u_xlat2 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(12.3299999, 13.6999998, 15.0699997, 16.4400005);
					        u_xlat6 = u_xlat2.xxyy * u_xlat7.zwzw;
					        u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, -0.707106829);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat0.x * u_xlat39;
					        u_xlat1.x = u_xlat3.x + (-u_xlat8.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat9.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					        u_xlat10 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					        u_xlat8 = u_xlat9 * u_xlat8.xxxx + u_xlat4;
					        u_xlat39 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.923879385, -0.382683486);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat0.x * u_xlat39;
					        u_xlat1.x = u_xlat3.x + (-u_xlat6.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat9.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat6.xyz * u_xlat11.www;
					        u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					        u_xlat6 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					        u_xlat10 = u_xlat11 * u_xlat6.xxxx + u_xlat10;
					        u_xlat6 = u_xlat9 * u_xlat6.xxxx + u_xlat8;
					        u_xlat2 = u_xlat2.zzww * u_xlat7.zwzw;
					        u_xlat2 = u_xlat2 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat2.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat2.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-1.0, 0.0);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat0.x * u_xlat39;
					        u_xlat1.x = u_xlat3.x + (-u_xlat8.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat9.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					        u_xlat10 = u_xlat11 * u_xlat8.xxxx + u_xlat10;
					        u_xlat6 = u_xlat9 * u_xlat8.xxxx + u_xlat6;
					        u_xlat39 = dot(u_xlat2.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat2.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.923879385, 0.382683486);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat0.x * u_xlat39;
					        u_xlat1.x = u_xlat3.x + (-u_xlat8.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat9.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat2 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					        u_xlat8 = u_xlat11 * u_xlat2.xxxx + u_xlat10;
					        u_xlat2 = u_xlat9 * u_xlat2.xxxx + u_xlat6;
					        u_xlat6 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(17.8099995, 19.1800003, 20.5499992, 21.9200001);
					        u_xlat9 = u_xlat6.xxyy * u_xlat7.zwzw;
					        u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, 0.707106829);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat11.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat0.x * u_xlat39;
					        u_xlat1.x = u_xlat3.x + (-u_xlat10.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat11.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat12.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat11.w = u_xlat39 * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					        u_xlat10 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat8 = u_xlat12 * u_xlat10.xxxx + u_xlat8;
					        u_xlat2 = u_xlat11 * u_xlat10.xxxx + u_xlat2;
					        u_xlat39 = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.382683486, -0.923879385);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat0.x * u_xlat39;
					        u_xlat1.x = u_xlat3.x + (-u_xlat9.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat9 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat8 = u_xlat11 * u_xlat9.xxxx + u_xlat8;
					        u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					        u_xlat6 = u_xlat6.zzww * u_xlat7.zwzw;
					        u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.382683396, 0.923879385);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat0.x * u_xlat39;
					        u_xlat1.x = u_xlat3.x + (-u_xlat9.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat9 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat8 = u_xlat11 * u_xlat9.xxxx + u_xlat8;
					        u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					        u_xlat39 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, -1.0);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat0.x * u_xlat39;
					        u_xlat1.x = u_xlat3.x + (-u_xlat6.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat9.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat6.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					        u_xlat6 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat8 = u_xlat10 * u_xlat6.xxxx + u_xlat8;
					        u_xlat2 = u_xlat9 * u_xlat6.xxxx + u_xlat2;
					        u_xlat6 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(23.2900009, 24.6599998, 26.0300007, 27.3999996);
					        u_xlat9 = u_xlat6.xxyy * u_xlat7.zwzw;
					        u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, 1.0);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat11.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat0.x * u_xlat39;
					        u_xlat1.x = u_xlat3.x + (-u_xlat10.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat11.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat12.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat11.w = u_xlat39 * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					        u_xlat10 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat8 = u_xlat12 * u_xlat10.xxxx + u_xlat8;
					        u_xlat2 = u_xlat11 * u_xlat10.xxxx + u_xlat2;
					        u_xlat39 = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.382683396, -0.923879385);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat0.x * u_xlat39;
					        u_xlat1.x = u_xlat3.x + (-u_xlat9.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat9 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat8 = u_xlat11 * u_xlat9.xxxx + u_xlat8;
					        u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					        u_xlat6 = u_xlat6.zzww * u_xlat7.zwzw;
					        u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.382683486, 0.923879385);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat0.x * u_xlat39;
					        u_xlat1.x = u_xlat3.x + (-u_xlat9.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat9 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat8 = u_xlat11 * u_xlat9.xxxx + u_xlat8;
					        u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					        u_xlat39 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, -0.707106829);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat0.x * u_xlat39;
					        u_xlat1.x = u_xlat3.x + (-u_xlat6.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat9.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat6.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					        u_xlat6 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat8 = u_xlat10 * u_xlat6.xxxx + u_xlat8;
					        u_xlat2 = u_xlat9 * u_xlat6.xxxx + u_xlat2;
					        u_xlat6 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(28.7700005, 30.1399994, 31.5100002, 32.8800011);
					        u_xlat9 = u_xlat6.xxyy * u_xlat7.zwzw;
					        u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.923879385, -0.382683486);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat11.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat0.x * u_xlat39;
					        u_xlat1.x = u_xlat3.x + (-u_xlat10.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat11.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat12.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat11.w = u_xlat39 * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					        u_xlat10 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat8 = u_xlat12 * u_xlat10.xxxx + u_xlat8;
					        u_xlat2 = u_xlat11 * u_xlat10.xxxx + u_xlat2;
					        u_xlat39 = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(1.0, 0.0);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat0.x * u_xlat39;
					        u_xlat1.x = u_xlat3.x + (-u_xlat9.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat9 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat8 = u_xlat11 * u_xlat9.xxxx + u_xlat8;
					        u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					        u_xlat6 = u_xlat6.zzww * u_xlat7;
					        u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.923879385, 0.382683486);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat0.x * u_xlat39;
					        u_xlat1.x = u_xlat3.x + (-u_xlat7.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat9.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat7.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					        u_xlat7 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat8 = u_xlat10 * u_xlat7.xxxx + u_xlat8;
					        u_xlat2 = u_xlat9 * u_xlat7.xxxx + u_xlat2;
					        u_xlat39 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, 0.707106829);
					        u_xlat26.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					        u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					        u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					        u_xlat26.x = sqrt(u_xlat26.x);
					        u_xlat26.x = u_xlat7.x * 10.0 + (-u_xlat26.x);
					        u_xlat26.x = u_xlat26.x + 0.25;
					        u_xlat26.x = u_xlat26.x * 4.0;
					        u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					        u_xlat0.x = u_xlat0.x * u_xlat26.x;
					        u_xlat26.x = u_xlat3.x + (-u_xlat6.w);
					        u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					        u_xlat39 = u_xlat7.y * u_xlat0.x;
					        u_xlat26.x = u_xlat26.x + 1.0;
					        u_xlat3.w = u_xlat39 * u_xlat26.x + 0.00100000005;
					        u_xlat7.w = u_xlat0.x * u_xlat7.z + 0.00100000005;
					        u_xlat3.xyz = u_xlat3.www * u_xlat6.xyz;
					        u_xlat7.xyz = u_xlat6.xyz * u_xlat7.www;
					        u_xlat6 = textureLod(_ExclusionMask, u_xlat1.xy, 0.0);
					        u_xlat5 = u_xlat3 * u_xlat6.xxxx + u_xlat8;
					        u_xlat4 = u_xlat7 * u_xlat6.xxxx + u_xlat2;
					    }
					    u_xlat0.x = max(u_xlat13, 0.5);
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat5.w;
					    u_xlat0.x = u_xlat0.x * 0.125663713;
					    u_xlat0 = u_xlat0.xxxx;
					    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
					    u_xlat1.x = u_xlat4.w + 9.99999994e-09;
					    u_xlat1.xyz = u_xlat4.xyz / u_xlat1.xxx;
					    u_xlat2.x = u_xlat5.w + 9.99999994e-09;
					    u_xlat2.xyz = u_xlat5.xyz / u_xlat2.xxx;
					    u_xlat2.xyz = (-u_xlat1.xyz) + u_xlat2.xyz;
					    SV_Target0.xyz = u_xlat0.www * u_xlat2.xyz + u_xlat1.xyz;
					    SV_Target0.w = u_xlat1.w;
					    SV_Target1 = u_xlat0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _CoCParams1;
					//   sampler2D _HalfResSourceDepthTexture;
					//   sampler2D _PresortTexture;
					//   float4 _ScionResolutionParameters1;
					//   float4 _ScionResolutionParameters2;
					//   float _TemporalUVOffset;
					//   sampler2D _TiledNeighbourhoodData;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters1 c0       1
					//   _ScionResolutionParameters2 c1       1
					//   _CoCParams1                 c2       1
					//   _TemporalUVOffset           c3       1
					//   _TiledNeighbourhoodData     s0       1
					//   _HalfResSourceDepthTexture  s1       1
					//   _PresortTexture             s2       1
					//
					
					    ps_3_0
					    def c4, 10, 0.00100000005, 0.800000012, 0
					    def c5, 1, 0, 9.99999975e-005, 0.400000006
					    def c6, 0.000231481477, 0.25, 0, -1
					    def c7, 0, 1.37, 3571, 0
					    def c8, -5, -6, -7, -8
					    def c9, 0.707106829, -0.707106829, 0, 0.349999994
					    def c10, -13, -14, -15, -16
					    def c11, -17, -18, -19, -20
					    def c12, -21, -22, -23, -24
					    def c13, 0.5, 0.125663713, 9.99999994e-009, 0
					    def c14, 9, 10, 11, 12
					    def c15, 2, -1, -3, -4
					    def c16, -0.923879385, -0.382683486, 0.382683486, -0.382683396
					    defi i0, 8, 0, 0, 0
					    defi i1, 16, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    mul r0, c5.xxyy, v0.xyxx
					    texldl r1, r0, s0
					    texldl r2, r0, s1
					    if_lt r1.x, c5.x
					      mov oC1, c5.y
					    else
					      texldl r0, r0, s2
					      add_sat r0.x, -r2.w, c2.z
					      add r0.x, r0.x, c5.x
					      mad r0.x, r0.y, r0.x, c5.z
					      add r0.y, r0.z, c5.z
					      mul r1.yzw, r0.x, r2.xxyz
					      mul r3.xyz, r0.y, r2
					      mul r0.z, r1.x, c5.w
					      mul r4.xy, c0, v0
					      mov r5.zw, c5.y
					      mov r6.xyz, r3
					      mov r6.w, r0.y
					      mov r7.xyz, r1.yzww
					      mov r7.w, r0.x
					      mov r0.w, c5.x
					      rep i0
					        mov r8.y, c7.y
					        mad r3.w, r0.w, r8.y, c3.x
					        mul r4.zw, r3.w, r4.xyxy
					        mad r4.zw, r4, c6.x, c6.xyyz
					        dp2add r3.w, r4.zwzw, c7.z, c7.w
					        mul r4.zw, r4, r3.w
					        frc r4.zw, r4
					        mad r4.zw, r4, c15.x, c15.y
					        add r8, r0.w, -c15_abs.yxzw
					        add r9, r0.w, c8
					        cmp r10.xy, -r8_abs.x, c9, c9.z
					        cmp r8.xy, -r8_abs.y, c6.wzzw, r10
					        cmp r8.xy, -r8_abs.z, c9.x, r8
					        cmp r8.xy, -r8_abs.w, c6.zwzw, r8
					        cmp r8.xy, -r9_abs.x, c5.yxzw, r8
					        cmp r8.xy, -r9_abs.y, c9.y, r8
					        cmp r8.xy, -r9_abs.z, c5, r8
					        cmp r8.xy, -r9_abs.w, c9.yxzw, r8
					        mad r4.zw, r4, c9.w, r8.xyxy
					        mul r4.zw, r0.z, r4
					        mad r5.xy, r4.zwzw, c1, v0
					        texldl r8, r5.xyww, s1
					        texldl r9, r5, s2
					        dp2add r3.w, r4.zwzw, r4.zwzw, c5.y
					        rsq r3.w, r3.w
					        rcp r3.w, r3.w
					        mad r3.w, r9.x, c4.x, -r3.w
					        add r3.w, r3.w, c6.y
					        mul_sat r3.w, r3.w, -c15.w
					        add_sat r4.z, -r8.w, c2.z
					        mul r4.w, r9.y, r3.w
					        add r4.z, r4.z, c5.x
					        mad r10.w, r4.w, r4.z, c4.y
					        mad r9.w, r3.w, r9.z, c4.y
					        mul r10.xyz, r8, r10.w
					        mul r9.xyz, r8, r9.w
					        add r7, r7, r10
					        add r6, r6, r9
					        add r0.w, r0.w, c5.x
					      endrep
					      if_lt c15.x, r1.x
					        add_sat r0.x, r1.x, -c15.x
					        mul r0.y, r1.x, c4.z
					        mov r3.zw, c5.y
					        mov r5, r6
					        mov r8, r7
					        mov r0.z, c14.x
					        rep i1
					          mov r1.y, c7.y
					          mad r0.w, r0.z, r1.y, c3.x
					          mul r1.yz, r0.w, r4.xxyw
					          mad r1.yz, r1, c6.x, c6
					          dp2add r0.w, r1.yzzw, c7.z, c7.w
					          mul r1.yz, r1, r0.w
					          frc r1.yz, r1
					          mad r1.yz, r1, c15.x, c15.y
					          add r9, r0.z, -c14
					          add r10, r0.z, c10
					          add r11, r0.z, c11
					          add r12, r0.z, c12
					          cmp r4.zw, -r9_abs.x, c9.xyxy, c9.z
					          cmp r4.zw, -r9_abs.y, c16.xyxy, r4
					          cmp r4.zw, -r9_abs.z, c6.xywz, r4
					          cmp r4.zw, -r9_abs.w, c16.xyxz, r4
					          cmp r4.zw, -r10_abs.x, c9.x, r4
					          cmp r4.zw, -r10_abs.y, c16.xyzx, r4
					          cmp r4.zw, -r10_abs.z, -c16.xywx, r4
					          cmp r4.zw, -r10_abs.w, c6, r4
					          cmp r4.zw, -r11_abs.x, c5.xyyx, r4
					          cmp r4.zw, -r11_abs.y, c16.xywx, r4
					          cmp r4.zw, -r11_abs.z, -c16.xyzx, r4
					          cmp r4.zw, -r11_abs.w, c9.y, r4
					          cmp r4.zw, -r12_abs.x, -c16.xyxz, r4
					          cmp r4.zw, -r12_abs.y, c5.xyxy, r4
					          cmp r4.zw, -r12_abs.z, -c16.xyxy, r4
					          cmp r4.zw, -r12_abs.w, c9.xyyx, r4
					          mad r1.yz, r1, c9.w, r4.xzww
					          mul r1.yz, r0.y, r1
					          mad r3.xy, r1.yzzw, c1, v0
					          texldl r9, r3.xyww, s1
					          texldl r10, r3, s2
					          dp2add r0.w, r1.yzzw, r1.yzzw, c5.y
					          rsq r0.w, r0.w
					          rcp r0.w, r0.w
					          mad r0.w, r10.x, c4.x, -r0.w
					          add r0.w, r0.w, c6.y
					          mul_sat r0.w, r0.w, -c15.w
					          mul r0.w, r0.x, r0.w
					          add_sat r1.y, -r9.w, c2.z
					          mul r1.z, r10.y, r0.w
					          add r1.y, r1.y, c5.x
					          mad r11.w, r1.z, r1.y, c4.y
					          mad r10.w, r0.w, r10.z, c4.y
					          mul r11.xyz, r9, r11.w
					          mul r10.xyz, r9, r10.w
					          add r8, r8, r11
					          add r5, r5, r10
					          add r0.z, r0.z, c5.x
					        endrep
					        mov r6, r5
					        mov r7, r8
					      endif
					      max r0.x, r1.x, c13.x
					      mul r0.x, r0.x, r0.x
					      mul r0.x, r0.x, r7.w
					      mul r0.x, r0.x, c13.y
					      mov_sat r0, r0.x
					      add r1.x, r6.w, c13.z
					      rcp r1.x, r1.x
					      mul r1.xyz, r1.x, r6
					      add r1.w, r7.w, c13.z
					      rcp r1.w, r1.w
					      mad r3.xyz, r7, r1.w, -r1
					      mad r2.xyz, r0.w, r3, r1
					      mov oC1, r0
					    endif
					    mov oC0, r2
					
					// approximately 160 instruction slots used (14 texture, 146 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _ScionResolutionParameters1;
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_3[6];
						vec4 _CoCParams1;
						vec4 unused_0_5[9];
						float _TemporalUVOffset;
					};
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _PresortTexture;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					layout(location = 1) out vec4 SV_Target1;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec2 u_xlat12;
					bool u_xlatb12;
					float u_xlat13;
					vec2 u_xlat24;
					float u_xlat36;
					void main()
					{
					    u_xlat0 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlatb12 = u_xlat0.x<1.0;
					    if(u_xlatb12){
					        SV_Target0 = u_xlat1;
					        SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
					        return;
					    }
					    u_xlat2 = textureLod(_PresortTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat12.x = (-u_xlat1.w) + _CoCParams1.z;
					    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
					    u_xlat12.x = u_xlat12.x + 1.0;
					    u_xlat3.w = u_xlat2.y * u_xlat12.x + 9.99999975e-05;
					    u_xlat2.w = u_xlat2.z + 9.99999975e-05;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat3.www;
					    u_xlat2.xyz = u_xlat1.xyz * u_xlat2.www;
					    u_xlat12.x = u_xlat0.x * 0.400000006;
					    u_xlat4 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(1.37, 2.74000001, 4.11000013, 5.48000002);
					    u_xlat5 = vs_TEXCOORD0.xyxy * _ScionResolutionParameters1.xyxy;
					    u_xlat6 = u_xlat4.xxyy * u_xlat5.zwzw;
					    u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat24.x = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat6.xy * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, -0.707106829);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat8.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat8.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat9.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat8.w = u_xlat24.x * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat3 = u_xlat3 + u_xlat9;
					    u_xlat2 = u_xlat2 + u_xlat8;
					    u_xlat24.x = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat6.zw * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.349999994, 0.349999994) + vec2(-1.0, 0.0);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat6.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat7.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat8.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat7.w = u_xlat24.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat6.xyz * u_xlat7.www;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat2 = u_xlat2 + u_xlat7;
					    u_xlat4 = u_xlat4.zzww * u_xlat5.zwzw;
					    u_xlat4 = u_xlat4 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat24.x = dot(u_xlat4.xy, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat4.xy * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, 0.707106829);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat6.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat7.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat8.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat7.w = u_xlat24.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat6.xyz * u_xlat7.www;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat2 = u_xlat2 + u_xlat7;
					    u_xlat24.x = dot(u_xlat4.zw, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat4.zw * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, -1.0);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat4 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat6 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat6.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat4.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat6.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat7.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat6.w = u_xlat24.x * u_xlat6.z + 0.00100000005;
					    u_xlat7.xyz = u_xlat4.xyz * u_xlat7.www;
					    u_xlat6.xyz = u_xlat4.xyz * u_xlat6.www;
					    u_xlat3 = u_xlat3 + u_xlat7;
					    u_xlat2 = u_xlat2 + u_xlat6;
					    u_xlat4 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(6.8499999, 8.22000027, 9.59000015, 10.96);
					    u_xlat6 = u_xlat4.xxyy * u_xlat5.zwzw;
					    u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat24.x = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat6.xy * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, 1.0);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat8.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat8.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat9.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat8.w = u_xlat24.x * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat3 = u_xlat3 + u_xlat9;
					    u_xlat2 = u_xlat2 + u_xlat8;
					    u_xlat24.x = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat6.zw * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, -0.707106829);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat6.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat7.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat8.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat7.w = u_xlat24.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat6.xyz * u_xlat7.www;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat2 = u_xlat2 + u_xlat7;
					    u_xlat4 = u_xlat4.zzww * u_xlat5.zwzw;
					    u_xlat4 = u_xlat4 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat24.x = dot(u_xlat4.xy, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat4.xy * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.349999994, 0.349999994) + vec2(1.0, 0.0);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat6.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat7.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat8.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat7.w = u_xlat24.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat6.xyz * u_xlat7.www;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat2 = u_xlat2 + u_xlat7;
					    u_xlat24.x = dot(u_xlat4.zw, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat4.zw * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, 0.707106829);
					    u_xlat12.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat12.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat4 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat6 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat12.x = dot(u_xlat12.xy, u_xlat12.xy);
					    u_xlat12.x = sqrt(u_xlat12.x);
					    u_xlat12.x = u_xlat6.x * 10.0 + (-u_xlat12.x);
					    u_xlat12.x = u_xlat12.x + 0.25;
					    u_xlat12.x = u_xlat12.x * 4.0;
					    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
					    u_xlat24.x = (-u_xlat4.w) + _CoCParams1.z;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = u_xlat6.y * u_xlat12.x;
					    u_xlat24.x = u_xlat24.x + 1.0;
					    u_xlat7.w = u_xlat36 * u_xlat24.x + 0.00100000005;
					    u_xlat6.w = u_xlat12.x * u_xlat6.z + 0.00100000005;
					    u_xlat7.xyz = u_xlat4.xyz * u_xlat7.www;
					    u_xlat6.xyz = u_xlat4.xyz * u_xlat6.www;
					    u_xlat3 = u_xlat3 + u_xlat7;
					    u_xlat2 = u_xlat2 + u_xlat6;
					    u_xlatb12 = 2.0<u_xlat0.x;
					    if(u_xlatb12){
					        u_xlat12.x = u_xlat0.x + -2.0;
					        u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
					        u_xlat24.x = u_xlat0.x * 0.800000012;
					        u_xlat4 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(12.3299999, 13.6999998, 15.0699997, 16.4400005);
					        u_xlat6 = u_xlat4.xxyy * u_xlat5.zwzw;
					        u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, -0.707106829);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat8.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat7 = u_xlat3 + u_xlat9;
					        u_xlat8 = u_xlat2 + u_xlat8;
					        u_xlat36 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.923879385, -0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat6.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat6.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat7 + u_xlat10;
					        u_xlat7 = u_xlat8 + u_xlat9;
					        u_xlat4 = u_xlat4.zzww * u_xlat5.zwzw;
					        u_xlat4 = u_xlat4 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat4.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat4.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-1.0, 0.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat7 = u_xlat7 + u_xlat9;
					        u_xlat36 = dot(u_xlat4.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat4.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.923879385, 0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					        u_xlat4 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat4.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat4.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat4.w = u_xlat36 * u_xlat4.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat4.xyz = u_xlat4.www * u_xlat8.xyz;
					        u_xlat6 = u_xlat6 + u_xlat9;
					        u_xlat4 = u_xlat4 + u_xlat7;
					        u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(17.8099995, 19.1800003, 20.5499992, 21.9200001);
					        u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, 0.707106829);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat10.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat6 = u_xlat6 + u_xlat11;
					        u_xlat4 = u_xlat4 + u_xlat10;
					        u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.382683486, -0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat7 = u_xlat5.zwzw * u_xlat7.zzww;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.382683396, 0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, -1.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat7 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat7.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat7.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat7.w = u_xlat36 * u_xlat7.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat7.xyz = u_xlat7.www * u_xlat8.xyz;
					        u_xlat6 = u_xlat6 + u_xlat9;
					        u_xlat4 = u_xlat4 + u_xlat7;
					        u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(23.2900009, 24.6599998, 26.0300007, 27.3999996);
					        u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, 1.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat10.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat6 = u_xlat6 + u_xlat11;
					        u_xlat4 = u_xlat4 + u_xlat10;
					        u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.382683396, -0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat7 = u_xlat5.zwzw * u_xlat7.zzww;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.382683486, 0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, -0.707106829);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat7 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat7.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat7.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat7.w = u_xlat36 * u_xlat7.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat7.xyz = u_xlat7.www * u_xlat8.xyz;
					        u_xlat6 = u_xlat6 + u_xlat9;
					        u_xlat4 = u_xlat4 + u_xlat7;
					        u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(28.7700005, 30.1399994, 31.5100002, 32.8800011);
					        u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.923879385, -0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat10.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat6 = u_xlat6 + u_xlat11;
					        u_xlat4 = u_xlat4 + u_xlat10;
					        u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(1.0, 0.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat5 = u_xlat5 * u_xlat7.zzww;
					        u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.923879385, 0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat8.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat6 = u_xlat6 + u_xlat9;
					        u_xlat4 = u_xlat4 + u_xlat8;
					        u_xlat36 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, 0.707106829);
					        u_xlat24.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					        u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					        u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					        u_xlat24.x = sqrt(u_xlat24.x);
					        u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					        u_xlat24.x = u_xlat24.x + 0.25;
					        u_xlat24.x = u_xlat24.x * 4.0;
					        u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					        u_xlat12.x = u_xlat12.x * u_xlat24.x;
					        u_xlat24.x = (-u_xlat5.w) + _CoCParams1.z;
					        u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					        u_xlat36 = u_xlat7.y * u_xlat12.x;
					        u_xlat24.x = u_xlat24.x + 1.0;
					        u_xlat8.w = u_xlat36 * u_xlat24.x + 0.00100000005;
					        u_xlat7.w = u_xlat12.x * u_xlat7.z + 0.00100000005;
					        u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					        u_xlat7.xyz = u_xlat5.xyz * u_xlat7.www;
					        u_xlat3 = u_xlat6 + u_xlat8;
					        u_xlat2 = u_xlat4 + u_xlat7;
					    }
					    u_xlat0.x = max(u_xlat0.x, 0.5);
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat3.w;
					    u_xlat0.x = u_xlat0.x * 0.125663713;
					    u_xlat0 = u_xlat0.xxxx;
					    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
					    u_xlat1.x = u_xlat2.w + 9.99999994e-09;
					    u_xlat1.xyz = u_xlat2.xyz / u_xlat1.xxx;
					    u_xlat2.x = u_xlat3.w + 9.99999994e-09;
					    u_xlat2.xyz = u_xlat3.xyz / u_xlat2.xxx;
					    u_xlat2.xyz = (-u_xlat1.xyz) + u_xlat2.xyz;
					    SV_Target0.xyz = u_xlat0.www * u_xlat2.xyz + u_xlat1.xyz;
					    SV_Target0.w = u_xlat1.w;
					    SV_Target1 = u_xlat0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" "SC_DOF_MASK_ON" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _CoCParams1;
					//   sampler2D _ExclusionMask;
					//   sampler2D _HalfResSourceDepthTexture;
					//   sampler2D _PresortTexture;
					//   float4 _ScionResolutionParameters1;
					//   float4 _ScionResolutionParameters2;
					//   float _TemporalUVOffset;
					//   sampler2D _TiledNeighbourhoodData;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters1 c0       1
					//   _ScionResolutionParameters2 c1       1
					//   _CoCParams1                 c2       1
					//   _TemporalUVOffset           c3       1
					//   _TiledNeighbourhoodData     s0       1
					//   _ExclusionMask              s1       1
					//   _HalfResSourceDepthTexture  s2       1
					//   _PresortTexture             s3       1
					//
					
					    ps_3_0
					    def c4, 10, 0.00100000005, 0.800000012, 0
					    def c5, 1, 0, 9.99999975e-005, 0.400000006
					    def c6, 0, 1.37, 3571, 0
					    def c7, -5, -6, -7, -8
					    def c8, 0.707106829, -0.707106829, 0, 0.349999994
					    def c9, 0.000231481477, 0.25, 0, -1
					    def c10, -13, -14, -15, -16
					    def c11, -17, -18, -19, -20
					    def c12, -21, -22, -23, -24
					    def c13, 0.5, 0.125663713, 9.99999994e-009, 0
					    def c14, 9, 10, 11, 12
					    def c15, 2, -1, -3, -4
					    def c16, -0.923879385, -0.382683486, 0.382683486, -0.382683396
					    defi i0, 8, 0, 0, 0
					    defi i1, 16, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    dcl_2d s3
					    mul r0, c5.xxyy, v0.xyxx
					    texldl r1, r0, s0
					    texldl r2, r0, s2
					    texldl r3, r0, s1
					    mul r1.y, r1.x, r3.x
					    if_lt r1.y, c5.x
					      mov oC1, c5.y
					    else
					      texldl r0, r0, s3
					      add_sat r0.x, -r2.w, c2.z
					      add r0.x, r0.x, c5.x
					      mad r0.x, r0.y, r0.x, c5.z
					      add r0.y, r0.z, c5.z
					      mul r3.yzw, r0.x, r2.xxyz
					      mul r4.xyz, r0.y, r2
					      mul r0.z, r1.y, c5.w
					      mul r1.zw, c0.xyxy, v0.xyxy
					      mov r5.zw, c5.y
					      mov r6.xyz, r4
					      mov r6.w, r0.y
					      mov r7.xyz, r3.yzww
					      mov r7.w, r0.x
					      mov r0.w, c5.x
					      rep i0
					        mov r8.y, c6.y
					        mad r4.w, r0.w, r8.y, c3.x
					        mul r8.xy, r1.zwzw, r4.w
					        mad r8.xy, r8, c9.x, c9.yzzw
					        dp2add r4.w, r8, c6.z, c6.w
					        mul r8.xy, r8, r4.w
					        frc r8.xy, r8
					        mad r8.xy, r8, c15.x, c15.y
					        add r9, r0.w, -c15_abs.yxzw
					        add r10, r0.w, c7
					        cmp r8.zw, -r9_abs.x, c8.xyxy, c8.z
					        cmp r8.zw, -r9_abs.y, c9.xywz, r8
					        cmp r8.zw, -r9_abs.z, c8.x, r8
					        cmp r8.zw, -r9_abs.w, c9, r8
					        cmp r8.zw, -r10_abs.x, c5.xyyx, r8
					        cmp r8.zw, -r10_abs.y, c8.y, r8
					        cmp r8.zw, -r10_abs.z, c5.xyxy, r8
					        cmp r8.zw, -r10_abs.w, c8.xyyx, r8
					        mad r8.xy, r8, c8.w, r8.zwzw
					        mul r8.xy, r0.z, r8
					        mad r5.xy, r8, c1, v0
					        texldl r9, r5.xyww, s2
					        texldl r10, r5.xyww, s3
					        dp2add r4.w, r8, r8, c5.y
					        rsq r4.w, r4.w
					        rcp r4.w, r4.w
					        mad r4.w, r10.x, c4.x, -r4.w
					        add r4.w, r4.w, c9.y
					        mul_sat r4.w, r4.w, -c15.w
					        add_sat r8.x, -r9.w, c2.z
					        mul r8.y, r10.y, r4.w
					        add r8.x, r8.x, c5.x
					        mad r8.w, r8.y, r8.x, c4.y
					        mad r10.w, r4.w, r10.z, c4.y
					        mul r8.xyz, r8.w, r9
					        mul r10.xyz, r9, r10.w
					        texldl r9, r5, s1
					        mad r7, r8, r9.x, r7
					        mad r6, r10, r9.x, r6
					        add r0.w, r0.w, c5.x
					      endrep
					      if_lt c15.x, r1.y
					        mad_sat r0.x, r1.x, r3.x, -c15.x
					        mul r0.y, r1.y, c4.z
					        mov r3.zw, c5.y
					        mov r4, r6
					        mov r5, r7
					        mov r0.z, c14.x
					        rep i1
					          mov r8.y, c6.y
					          mad r0.w, r0.z, r8.y, c3.x
					          mul r8.xy, r0.w, r1.zwzw
					          mad r8.xy, r8, c9.x, c9.yzzw
					          dp2add r0.w, r8, c6.z, c6.w
					          mul r8.xy, r8, r0.w
					          frc r8.xy, r8
					          mad r8.xy, r8, c15.x, c15.y
					          add r9, r0.z, -c14
					          add r10, r0.z, c10
					          add r11, r0.z, c11
					          add r12, r0.z, c12
					          cmp r8.zw, -r9_abs.x, c8.xyxy, c8.z
					          cmp r8.zw, -r9_abs.y, c16.xyxy, r8
					          cmp r8.zw, -r9_abs.z, c9.xywz, r8
					          cmp r8.zw, -r9_abs.w, c16.xyxz, r8
					          cmp r8.zw, -r10_abs.x, c8.x, r8
					          cmp r8.zw, -r10_abs.y, c16.xyzx, r8
					          cmp r8.zw, -r10_abs.z, -c16.xywx, r8
					          cmp r8.zw, -r10_abs.w, c9, r8
					          cmp r8.zw, -r11_abs.x, c5.xyyx, r8
					          cmp r8.zw, -r11_abs.y, c16.xywx, r8
					          cmp r8.zw, -r11_abs.z, -c16.xyzx, r8
					          cmp r8.zw, -r11_abs.w, c8.y, r8
					          cmp r8.zw, -r12_abs.x, -c16.xyxz, r8
					          cmp r8.zw, -r12_abs.y, c5.xyxy, r8
					          cmp r8.zw, -r12_abs.z, -c16.xyxy, r8
					          cmp r8.zw, -r12_abs.w, c8.xyyx, r8
					          mad r8.xy, r8, c8.w, r8.zwzw
					          mul r8.xy, r0.y, r8
					          mad r3.xy, r8, c1, v0
					          texldl r9, r3.xyww, s2
					          texldl r10, r3.xyww, s3
					          dp2add r0.w, r8, r8, c5.y
					          rsq r0.w, r0.w
					          rcp r0.w, r0.w
					          mad r0.w, r10.x, c4.x, -r0.w
					          add r0.w, r0.w, c9.y
					          mul_sat r0.w, r0.w, -c15.w
					          mul r0.w, r0.x, r0.w
					          add_sat r1.x, -r9.w, c2.z
					          mul r8.x, r10.y, r0.w
					          add r1.x, r1.x, c5.x
					          mad r8.w, r8.x, r1.x, c4.y
					          mad r10.w, r0.w, r10.z, c4.y
					          mul r8.xyz, r8.w, r9
					          mul r10.xyz, r9, r10.w
					          texldl r9, r3, s1
					          mad r5, r8, r9.x, r5
					          mad r4, r10, r9.x, r4
					          add r0.z, r0.z, c5.x
					        endrep
					        mov r6, r4
					        mov r7, r5
					      endif
					      max r0.x, r1.y, c13.x
					      mul r0.x, r0.x, r0.x
					      mul r0.x, r0.x, r7.w
					      mul r0.x, r0.x, c13.y
					      mov_sat r0, r0.x
					      add r1.x, r6.w, c13.z
					      rcp r1.x, r1.x
					      mul r1.xyz, r1.x, r6
					      add r1.w, r7.w, c13.z
					      rcp r1.w, r1.w
					      mad r3.xyz, r7, r1.w, -r1
					      mad r2.xyz, r0.w, r3, r1
					      mov oC1, r0
					    endif
					    mov oC0, r2
					
					// approximately 167 instruction slots used (20 texture, 147 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" "SC_DOF_MASK_ON" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _ScionResolutionParameters1;
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_3[6];
						vec4 _CoCParams1;
						vec4 unused_0_5[9];
						float _TemporalUVOffset;
					};
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _ExclusionMask;
					uniform  sampler2D _PresortTexture;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					layout(location = 1) out vec4 SV_Target1;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					float u_xlat12;
					float u_xlat13;
					vec2 u_xlat14;
					vec2 u_xlat24;
					bool u_xlatb24;
					float u_xlat25;
					float u_xlat36;
					void main()
					{
					    u_xlat0 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat2 = textureLod(_ExclusionMask, vs_TEXCOORD0.xy, 0.0);
					    u_xlat12 = u_xlat0.x * u_xlat2.x;
					    u_xlatb24 = u_xlat12<1.0;
					    if(u_xlatb24){
					        SV_Target0 = u_xlat1;
					        SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
					        return;
					    }
					    u_xlat3 = textureLod(_PresortTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat24.x = (-u_xlat1.w) + _CoCParams1.z;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat24.x = u_xlat24.x + 1.0;
					    u_xlat4.w = u_xlat3.y * u_xlat24.x + 9.99999975e-05;
					    u_xlat3.w = u_xlat3.z + 9.99999975e-05;
					    u_xlat4.xyz = u_xlat1.xyz * u_xlat4.www;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat3.www;
					    u_xlat24.x = u_xlat12 * 0.400000006;
					    u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(1.37, 2.74000001, 4.11000013, 5.48000002);
					    u_xlat6 = vs_TEXCOORD0.xyxy * _ScionResolutionParameters1.xyxy;
					    u_xlat7 = u_xlat5.xxyy * u_xlat6.zwzw;
					    u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, -0.707106829);
					    u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					    u_xlat14.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat14.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat14.xy, 0.0);
					    u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					    u_xlat36 = u_xlat36 + 0.25;
					    u_xlat36 = u_xlat36 * 4.0;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat13 = u_xlat9.y * u_xlat36;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					    u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat8 = textureLod(_ExclusionMask, u_xlat14.xy, 0.0);
					    u_xlat4 = u_xlat10 * u_xlat8.xxxx + u_xlat4;
					    u_xlat3 = u_xlat9 * u_xlat8.xxxx + u_xlat3;
					    u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-1.0, 0.0);
					    u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					    u_xlat14.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat14.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat14.xy, 0.0);
					    u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					    u_xlat36 = u_xlat36 + 0.25;
					    u_xlat36 = u_xlat36 * 4.0;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat13 = u_xlat8.y * u_xlat36;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					    u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat7 = textureLod(_ExclusionMask, u_xlat14.xy, 0.0);
					    u_xlat4 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					    u_xlat3 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					    u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					    u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat36 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat5.xy * vec2(u_xlat36);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, 0.707106829);
					    u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					    u_xlat14.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat14.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat14.xy, 0.0);
					    u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					    u_xlat36 = u_xlat36 + 0.25;
					    u_xlat36 = u_xlat36 * 4.0;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat13 = u_xlat8.y * u_xlat36;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					    u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat7 = textureLod(_ExclusionMask, u_xlat14.xy, 0.0);
					    u_xlat4 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					    u_xlat3 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					    u_xlat36 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat5.zw * vec2(u_xlat36);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, -1.0);
					    u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					    u_xlat14.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat14.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat14.xy, 0.0);
					    u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat36 = u_xlat7.x * 10.0 + (-u_xlat36);
					    u_xlat36 = u_xlat36 + 0.25;
					    u_xlat36 = u_xlat36 * 4.0;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat5.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat13 = u_xlat7.y * u_xlat36;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat8.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					    u_xlat7.w = u_xlat36 * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat5.xyz * u_xlat7.www;
					    u_xlat5 = textureLod(_ExclusionMask, u_xlat14.xy, 0.0);
					    u_xlat4 = u_xlat8 * u_xlat5.xxxx + u_xlat4;
					    u_xlat3 = u_xlat7 * u_xlat5.xxxx + u_xlat3;
					    u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(6.8499999, 8.22000027, 9.59000015, 10.96);
					    u_xlat7 = u_xlat5.xxyy * u_xlat6.zwzw;
					    u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, 1.0);
					    u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					    u_xlat14.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat14.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat14.xy, 0.0);
					    u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					    u_xlat36 = u_xlat36 + 0.25;
					    u_xlat36 = u_xlat36 * 4.0;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat13 = u_xlat9.y * u_xlat36;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					    u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat8 = textureLod(_ExclusionMask, u_xlat14.xy, 0.0);
					    u_xlat4 = u_xlat10 * u_xlat8.xxxx + u_xlat4;
					    u_xlat3 = u_xlat9 * u_xlat8.xxxx + u_xlat3;
					    u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, -0.707106829);
					    u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					    u_xlat14.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat14.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat14.xy, 0.0);
					    u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					    u_xlat36 = u_xlat36 + 0.25;
					    u_xlat36 = u_xlat36 * 4.0;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat13 = u_xlat8.y * u_xlat36;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					    u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat7 = textureLod(_ExclusionMask, u_xlat14.xy, 0.0);
					    u_xlat4 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					    u_xlat3 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					    u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					    u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat36 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat5.xy * vec2(u_xlat36);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(1.0, 0.0);
					    u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					    u_xlat14.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat14.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat14.xy, 0.0);
					    u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					    u_xlat36 = u_xlat36 + 0.25;
					    u_xlat36 = u_xlat36 * 4.0;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat13 = u_xlat8.y * u_xlat36;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					    u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat7 = textureLod(_ExclusionMask, u_xlat14.xy, 0.0);
					    u_xlat4 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					    u_xlat3 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					    u_xlat36 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat5.zw * vec2(u_xlat36);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, 0.707106829);
					    u_xlat24.xy = u_xlat24.xx * u_xlat1.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat5.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat25 = u_xlat7.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat8.w = u_xlat25 * u_xlat36 + 0.00100000005;
					    u_xlat7.w = u_xlat24.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat5.xyz * u_xlat7.www;
					    u_xlat5 = textureLod(_ExclusionMask, u_xlat1.xy, 0.0);
					    u_xlat4 = u_xlat8 * u_xlat5.xxxx + u_xlat4;
					    u_xlat3 = u_xlat7 * u_xlat5.xxxx + u_xlat3;
					    u_xlatb24 = 2.0<u_xlat12;
					    if(u_xlatb24){
					        u_xlat0.x = u_xlat0.x * u_xlat2.x + -2.0;
					        u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					        u_xlat24.x = u_xlat12 * 0.800000012;
					        u_xlat2 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(12.3299999, 13.6999998, 15.0699997, 16.4400005);
					        u_xlat5 = u_xlat2.xxyy * u_xlat6.zwzw;
					        u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, -0.707106829);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat8.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat7 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					        u_xlat9 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					        u_xlat7 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					        u_xlat36 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.923879385, -0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat5.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat8.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat5.xyz * u_xlat10.www;
					        u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					        u_xlat5 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					        u_xlat9 = u_xlat10 * u_xlat5.xxxx + u_xlat9;
					        u_xlat5 = u_xlat8 * u_xlat5.xxxx + u_xlat7;
					        u_xlat2 = u_xlat2.zzww * u_xlat6.zwzw;
					        u_xlat2 = u_xlat2 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat2.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat2.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-1.0, 0.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat8.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat7.xyz * u_xlat10.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat7 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					        u_xlat9 = u_xlat10 * u_xlat7.xxxx + u_xlat9;
					        u_xlat5 = u_xlat8 * u_xlat7.xxxx + u_xlat5;
					        u_xlat36 = dot(u_xlat2.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat2.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.923879385, 0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat8.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat7.xyz * u_xlat10.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat2 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					        u_xlat7 = u_xlat10 * u_xlat2.xxxx + u_xlat9;
					        u_xlat2 = u_xlat8 * u_xlat2.xxxx + u_xlat5;
					        u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(17.8099995, 19.1800003, 20.5499992, 21.9200001);
					        u_xlat8 = u_xlat5.xxyy * u_xlat6.zwzw;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, 0.707106829);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat10.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat9 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat11 * u_xlat9.xxxx + u_xlat7;
					        u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					        u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.382683486, -0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					        u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					        u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					        u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.382683396, 0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					        u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					        u_xlat36 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, -1.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat5 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat10 * u_xlat5.xxxx + u_xlat7;
					        u_xlat2 = u_xlat9 * u_xlat5.xxxx + u_xlat2;
					        u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(23.2900009, 24.6599998, 26.0300007, 27.3999996);
					        u_xlat8 = u_xlat5.xxyy * u_xlat6.zwzw;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, 1.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat10.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat9 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat11 * u_xlat9.xxxx + u_xlat7;
					        u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					        u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.382683396, -0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					        u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					        u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					        u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.382683486, 0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					        u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					        u_xlat36 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, -0.707106829);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat5 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat10 * u_xlat5.xxxx + u_xlat7;
					        u_xlat2 = u_xlat9 * u_xlat5.xxxx + u_xlat2;
					        u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(28.7700005, 30.1399994, 31.5100002, 32.8800011);
					        u_xlat8 = u_xlat5.xxyy * u_xlat6.zwzw;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.923879385, -0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat10.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat9 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat11 * u_xlat9.xxxx + u_xlat7;
					        u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					        u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(1.0, 0.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					        u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					        u_xlat5 = u_xlat5.zzww * u_xlat6;
					        u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.923879385, 0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat6.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat8.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					        u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					        u_xlat6 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat9 * u_xlat6.xxxx + u_xlat7;
					        u_xlat2 = u_xlat8 * u_xlat6.xxxx + u_xlat2;
					        u_xlat36 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, 0.707106829);
					        u_xlat24.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					        u_xlat6 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					        u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					        u_xlat24.x = sqrt(u_xlat24.x);
					        u_xlat24.x = u_xlat6.x * 10.0 + (-u_xlat24.x);
					        u_xlat24.x = u_xlat24.x + 0.25;
					        u_xlat24.x = u_xlat24.x * 4.0;
					        u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					        u_xlat0.x = u_xlat0.x * u_xlat24.x;
					        u_xlat24.x = (-u_xlat5.w) + _CoCParams1.z;
					        u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					        u_xlat36 = u_xlat6.y * u_xlat0.x;
					        u_xlat24.x = u_xlat24.x + 1.0;
					        u_xlat8.w = u_xlat36 * u_xlat24.x + 0.00100000005;
					        u_xlat6.w = u_xlat0.x * u_xlat6.z + 0.00100000005;
					        u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					        u_xlat6.xyz = u_xlat5.xyz * u_xlat6.www;
					        u_xlat5 = textureLod(_ExclusionMask, u_xlat1.xy, 0.0);
					        u_xlat4 = u_xlat8 * u_xlat5.xxxx + u_xlat7;
					        u_xlat3 = u_xlat6 * u_xlat5.xxxx + u_xlat2;
					    }
					    u_xlat0.x = max(u_xlat12, 0.5);
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat4.w;
					    u_xlat0.x = u_xlat0.x * 0.125663713;
					    u_xlat0 = u_xlat0.xxxx;
					    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.w + 9.99999994e-09;
					    u_xlat1.xyz = u_xlat3.xyz / u_xlat1.xxx;
					    u_xlat2.x = u_xlat4.w + 9.99999994e-09;
					    u_xlat2.xyz = u_xlat4.xyz / u_xlat2.xxx;
					    u_xlat2.xyz = (-u_xlat1.xyz) + u_xlat2.xyz;
					    SV_Target0.xyz = u_xlat0.www * u_xlat2.xyz + u_xlat1.xyz;
					    SV_Target0.w = u_xlat1.w;
					    SV_Target1 = u_xlat0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _CoCParams1;
					//   sampler2D _HalfResSourceDepthTexture;
					//   sampler2D _PresortTexture;
					//   float4 _ScionResolutionParameters1;
					//   float4 _ScionResolutionParameters2;
					//   float _TemporalUVOffset;
					//   sampler2D _TiledNeighbourhoodData;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters1 c0       1
					//   _ScionResolutionParameters2 c1       1
					//   _CoCParams1                 c2       1
					//   _TemporalUVOffset           c3       1
					//   _TiledNeighbourhoodData     s0       1
					//   _HalfResSourceDepthTexture  s1       1
					//   _PresortTexture             s2       1
					//
					
					    ps_3_0
					    def c4, 10, 0.00100000005, 0.800000012, 0
					    def c5, 1, 0, 9.99999975e-005, 0.400000006
					    def c6, 0.000231481477, 0.25, 0, -1
					    def c7, 0, 1.37, 3571, 0
					    def c8, -5, -6, -7, -8
					    def c9, 0.707106829, -0.707106829, 0, 0.349999994
					    def c10, -13, -14, -15, -16
					    def c11, -17, -18, -19, -20
					    def c12, -21, -22, -23, -24
					    def c13, 0.5, 0.125663713, 9.99999994e-009, 0
					    def c14, 9, 10, 11, 12
					    def c15, 2, -1, -3, -4
					    def c16, -0.923879385, -0.382683486, 0.382683486, -0.382683396
					    defi i0, 8, 0, 0, 0
					    defi i1, 16, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    mul r0, c5.xxyy, v0.xyxx
					    texldl r1, r0, s0
					    texldl r2, r0, s1
					    if_lt r1.x, c5.x
					      mov oC1, c5.y
					    else
					      texldl r0, r0, s2
					      add_sat r0.x, -r2.w, c2.z
					      add r0.x, r0.x, c5.x
					      mad r0.x, r0.y, r0.x, c5.z
					      add r0.y, r0.z, c5.z
					      mul r1.yzw, r0.x, r2.xxyz
					      mul r3.xyz, r0.y, r2
					      mul r0.z, r1.x, c5.w
					      mul r4.xy, c0, v0
					      mov r5.zw, c5.y
					      mov r6.xyz, r3
					      mov r6.w, r0.y
					      mov r7.xyz, r1.yzww
					      mov r7.w, r0.x
					      mov r0.w, c5.x
					      rep i0
					        mov r8.y, c7.y
					        mad r3.w, r0.w, r8.y, c3.x
					        mul r4.zw, r3.w, r4.xyxy
					        mad r4.zw, r4, c6.x, c6.xyyz
					        dp2add r3.w, r4.zwzw, c7.z, c7.w
					        mul r4.zw, r4, r3.w
					        frc r4.zw, r4
					        mad r4.zw, r4, c15.x, c15.y
					        add r8, r0.w, -c15_abs.yxzw
					        add r9, r0.w, c8
					        cmp r10.xy, -r8_abs.x, c9, c9.z
					        cmp r8.xy, -r8_abs.y, c6.wzzw, r10
					        cmp r8.xy, -r8_abs.z, c9.x, r8
					        cmp r8.xy, -r8_abs.w, c6.zwzw, r8
					        cmp r8.xy, -r9_abs.x, c5.yxzw, r8
					        cmp r8.xy, -r9_abs.y, c9.y, r8
					        cmp r8.xy, -r9_abs.z, c5, r8
					        cmp r8.xy, -r9_abs.w, c9.yxzw, r8
					        mad r4.zw, r4, c9.w, r8.xyxy
					        mul r4.zw, r0.z, r4
					        mad r5.xy, r4.zwzw, c1, v0
					        texldl r8, r5.xyww, s1
					        texldl r9, r5, s2
					        dp2add r3.w, r4.zwzw, r4.zwzw, c5.y
					        rsq r3.w, r3.w
					        rcp r3.w, r3.w
					        mad r3.w, r9.x, c4.x, -r3.w
					        add r3.w, r3.w, c6.y
					        mul_sat r3.w, r3.w, -c15.w
					        add_sat r4.z, -r8.w, c2.z
					        mul r4.w, r9.y, r3.w
					        add r4.z, r4.z, c5.x
					        mad r10.w, r4.w, r4.z, c4.y
					        mad r9.w, r3.w, r9.z, c4.y
					        mul r10.xyz, r8, r10.w
					        mul r9.xyz, r8, r9.w
					        add r7, r7, r10
					        add r6, r6, r9
					        add r0.w, r0.w, c5.x
					      endrep
					      if_lt c15.x, r1.x
					        add_sat r0.x, r1.x, -c15.x
					        mul r0.y, r1.x, c4.z
					        mov r3.zw, c5.y
					        mov r5, r6
					        mov r8, r7
					        mov r0.z, c14.x
					        rep i1
					          mov r1.y, c7.y
					          mad r0.w, r0.z, r1.y, c3.x
					          mul r1.yz, r0.w, r4.xxyw
					          mad r1.yz, r1, c6.x, c6
					          dp2add r0.w, r1.yzzw, c7.z, c7.w
					          mul r1.yz, r1, r0.w
					          frc r1.yz, r1
					          mad r1.yz, r1, c15.x, c15.y
					          add r9, r0.z, -c14
					          add r10, r0.z, c10
					          add r11, r0.z, c11
					          add r12, r0.z, c12
					          cmp r4.zw, -r9_abs.x, c9.xyxy, c9.z
					          cmp r4.zw, -r9_abs.y, c16.xyxy, r4
					          cmp r4.zw, -r9_abs.z, c6.xywz, r4
					          cmp r4.zw, -r9_abs.w, c16.xyxz, r4
					          cmp r4.zw, -r10_abs.x, c9.x, r4
					          cmp r4.zw, -r10_abs.y, c16.xyzx, r4
					          cmp r4.zw, -r10_abs.z, -c16.xywx, r4
					          cmp r4.zw, -r10_abs.w, c6, r4
					          cmp r4.zw, -r11_abs.x, c5.xyyx, r4
					          cmp r4.zw, -r11_abs.y, c16.xywx, r4
					          cmp r4.zw, -r11_abs.z, -c16.xyzx, r4
					          cmp r4.zw, -r11_abs.w, c9.y, r4
					          cmp r4.zw, -r12_abs.x, -c16.xyxz, r4
					          cmp r4.zw, -r12_abs.y, c5.xyxy, r4
					          cmp r4.zw, -r12_abs.z, -c16.xyxy, r4
					          cmp r4.zw, -r12_abs.w, c9.xyyx, r4
					          mad r1.yz, r1, c9.w, r4.xzww
					          mul r1.yz, r0.y, r1
					          mad r3.xy, r1.yzzw, c1, v0
					          texldl r9, r3.xyww, s1
					          texldl r10, r3, s2
					          dp2add r0.w, r1.yzzw, r1.yzzw, c5.y
					          rsq r0.w, r0.w
					          rcp r0.w, r0.w
					          mad r0.w, r10.x, c4.x, -r0.w
					          add r0.w, r0.w, c6.y
					          mul_sat r0.w, r0.w, -c15.w
					          mul r0.w, r0.x, r0.w
					          add_sat r1.y, -r9.w, c2.z
					          mul r1.z, r10.y, r0.w
					          add r1.y, r1.y, c5.x
					          mad r11.w, r1.z, r1.y, c4.y
					          mad r10.w, r0.w, r10.z, c4.y
					          mul r11.xyz, r9, r11.w
					          mul r10.xyz, r9, r10.w
					          add r8, r8, r11
					          add r5, r5, r10
					          add r0.z, r0.z, c5.x
					        endrep
					        mov r6, r5
					        mov r7, r8
					      endif
					      max r0.x, r1.x, c13.x
					      mul r0.x, r0.x, r0.x
					      mul r0.x, r0.x, r7.w
					      mul r0.x, r0.x, c13.y
					      mov_sat r0, r0.x
					      add r1.x, r6.w, c13.z
					      rcp r1.x, r1.x
					      mul r1.xyz, r1.x, r6
					      add r1.w, r7.w, c13.z
					      rcp r1.w, r1.w
					      mad r3.xyz, r7, r1.w, -r1
					      mad r2.xyz, r0.w, r3, r1
					      mov oC1, r0
					    endif
					    mov oC0, r2
					
					// approximately 160 instruction slots used (14 texture, 146 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _ScionResolutionParameters1;
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_3[6];
						vec4 _CoCParams1;
						vec4 unused_0_5[9];
						float _TemporalUVOffset;
					};
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _PresortTexture;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					layout(location = 1) out vec4 SV_Target1;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec2 u_xlat12;
					bool u_xlatb12;
					float u_xlat13;
					vec2 u_xlat24;
					float u_xlat36;
					void main()
					{
					    u_xlat0 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlatb12 = u_xlat0.x<1.0;
					    if(u_xlatb12){
					        SV_Target0 = u_xlat1;
					        SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
					        return;
					    }
					    u_xlat2 = textureLod(_PresortTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat12.x = (-u_xlat1.w) + _CoCParams1.z;
					    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
					    u_xlat12.x = u_xlat12.x + 1.0;
					    u_xlat3.w = u_xlat2.y * u_xlat12.x + 9.99999975e-05;
					    u_xlat2.w = u_xlat2.z + 9.99999975e-05;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat3.www;
					    u_xlat2.xyz = u_xlat1.xyz * u_xlat2.www;
					    u_xlat12.x = u_xlat0.x * 0.400000006;
					    u_xlat4 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(1.37, 2.74000001, 4.11000013, 5.48000002);
					    u_xlat5 = vs_TEXCOORD0.xyxy * _ScionResolutionParameters1.xyxy;
					    u_xlat6 = u_xlat4.xxyy * u_xlat5.zwzw;
					    u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat24.x = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat6.xy * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, -0.707106829);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat8.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat8.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat9.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat8.w = u_xlat24.x * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat3 = u_xlat3 + u_xlat9;
					    u_xlat2 = u_xlat2 + u_xlat8;
					    u_xlat24.x = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat6.zw * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.349999994, 0.349999994) + vec2(-1.0, 0.0);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat6.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat7.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat8.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat7.w = u_xlat24.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat6.xyz * u_xlat7.www;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat2 = u_xlat2 + u_xlat7;
					    u_xlat4 = u_xlat4.zzww * u_xlat5.zwzw;
					    u_xlat4 = u_xlat4 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat24.x = dot(u_xlat4.xy, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat4.xy * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, 0.707106829);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat6.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat7.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat8.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat7.w = u_xlat24.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat6.xyz * u_xlat7.www;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat2 = u_xlat2 + u_xlat7;
					    u_xlat24.x = dot(u_xlat4.zw, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat4.zw * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, -1.0);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat4 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat6 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat6.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat4.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat6.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat7.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat6.w = u_xlat24.x * u_xlat6.z + 0.00100000005;
					    u_xlat7.xyz = u_xlat4.xyz * u_xlat7.www;
					    u_xlat6.xyz = u_xlat4.xyz * u_xlat6.www;
					    u_xlat3 = u_xlat3 + u_xlat7;
					    u_xlat2 = u_xlat2 + u_xlat6;
					    u_xlat4 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(6.8499999, 8.22000027, 9.59000015, 10.96);
					    u_xlat6 = u_xlat4.xxyy * u_xlat5.zwzw;
					    u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat24.x = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat6.xy * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, 1.0);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat8.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat8.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat9.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat8.w = u_xlat24.x * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat3 = u_xlat3 + u_xlat9;
					    u_xlat2 = u_xlat2 + u_xlat8;
					    u_xlat24.x = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat6.zw * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, -0.707106829);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat6.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat7.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat8.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat7.w = u_xlat24.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat6.xyz * u_xlat7.www;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat2 = u_xlat2 + u_xlat7;
					    u_xlat4 = u_xlat4.zzww * u_xlat5.zwzw;
					    u_xlat4 = u_xlat4 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat24.x = dot(u_xlat4.xy, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat4.xy * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.349999994, 0.349999994) + vec2(1.0, 0.0);
					    u_xlat24.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat6.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = u_xlat7.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat8.w = u_xlat1.x * u_xlat36 + 0.00100000005;
					    u_xlat7.w = u_xlat24.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat6.xyz * u_xlat7.www;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat2 = u_xlat2 + u_xlat7;
					    u_xlat24.x = dot(u_xlat4.zw, vec2(3571.0, 3571.0));
					    u_xlat24.xy = u_xlat4.zw * u_xlat24.xx;
					    u_xlat24.xy = fract(u_xlat24.xy);
					    u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat24.xy = u_xlat24.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, 0.707106829);
					    u_xlat12.xy = u_xlat12.xx * u_xlat24.xy;
					    u_xlat1.xy = u_xlat12.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat4 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat6 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat12.x = dot(u_xlat12.xy, u_xlat12.xy);
					    u_xlat12.x = sqrt(u_xlat12.x);
					    u_xlat12.x = u_xlat6.x * 10.0 + (-u_xlat12.x);
					    u_xlat12.x = u_xlat12.x + 0.25;
					    u_xlat12.x = u_xlat12.x * 4.0;
					    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
					    u_xlat24.x = (-u_xlat4.w) + _CoCParams1.z;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = u_xlat6.y * u_xlat12.x;
					    u_xlat24.x = u_xlat24.x + 1.0;
					    u_xlat7.w = u_xlat36 * u_xlat24.x + 0.00100000005;
					    u_xlat6.w = u_xlat12.x * u_xlat6.z + 0.00100000005;
					    u_xlat7.xyz = u_xlat4.xyz * u_xlat7.www;
					    u_xlat6.xyz = u_xlat4.xyz * u_xlat6.www;
					    u_xlat3 = u_xlat3 + u_xlat7;
					    u_xlat2 = u_xlat2 + u_xlat6;
					    u_xlatb12 = 2.0<u_xlat0.x;
					    if(u_xlatb12){
					        u_xlat12.x = u_xlat0.x + -2.0;
					        u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
					        u_xlat24.x = u_xlat0.x * 0.800000012;
					        u_xlat4 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(12.3299999, 13.6999998, 15.0699997, 16.4400005);
					        u_xlat6 = u_xlat4.xxyy * u_xlat5.zwzw;
					        u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, -0.707106829);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat8.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat7 = u_xlat3 + u_xlat9;
					        u_xlat8 = u_xlat2 + u_xlat8;
					        u_xlat36 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.923879385, -0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat6.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat6.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat7 + u_xlat10;
					        u_xlat7 = u_xlat8 + u_xlat9;
					        u_xlat4 = u_xlat4.zzww * u_xlat5.zwzw;
					        u_xlat4 = u_xlat4 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat4.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat4.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-1.0, 0.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat7 = u_xlat7 + u_xlat9;
					        u_xlat36 = dot(u_xlat4.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat4.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.923879385, 0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat4.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat4.xy, 0.0);
					        u_xlat4 = textureLod(_PresortTexture, u_xlat4.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat4.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat4.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat4.w = u_xlat36 * u_xlat4.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat4.xyz = u_xlat4.www * u_xlat8.xyz;
					        u_xlat6 = u_xlat6 + u_xlat9;
					        u_xlat4 = u_xlat4 + u_xlat7;
					        u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(17.8099995, 19.1800003, 20.5499992, 21.9200001);
					        u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, 0.707106829);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat10.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat6 = u_xlat6 + u_xlat11;
					        u_xlat4 = u_xlat4 + u_xlat10;
					        u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.382683486, -0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat7 = u_xlat5.zwzw * u_xlat7.zzww;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.382683396, 0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, -1.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat7 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat7.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat7.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat7.w = u_xlat36 * u_xlat7.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat7.xyz = u_xlat7.www * u_xlat8.xyz;
					        u_xlat6 = u_xlat6 + u_xlat9;
					        u_xlat4 = u_xlat4 + u_xlat7;
					        u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(23.2900009, 24.6599998, 26.0300007, 27.3999996);
					        u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, 1.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat10.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat6 = u_xlat6 + u_xlat11;
					        u_xlat4 = u_xlat4 + u_xlat10;
					        u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.382683396, -0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat7 = u_xlat5.zwzw * u_xlat7.zzww;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.382683486, 0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, -0.707106829);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat7 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat7.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat7.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat7.w = u_xlat36 * u_xlat7.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat7.xyz = u_xlat7.www * u_xlat8.xyz;
					        u_xlat6 = u_xlat6 + u_xlat9;
					        u_xlat4 = u_xlat4 + u_xlat7;
					        u_xlat7 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(28.7700005, 30.1399994, 31.5100002, 32.8800011);
					        u_xlat8 = u_xlat5.zwzw * u_xlat7.xxyy;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.923879385, -0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat10.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat6 = u_xlat6 + u_xlat11;
					        u_xlat4 = u_xlat4 + u_xlat10;
					        u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(1.0, 0.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat7.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat7.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat7.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat6 = u_xlat6 + u_xlat10;
					        u_xlat4 = u_xlat4 + u_xlat9;
					        u_xlat5 = u_xlat5 * u_xlat7.zzww;
					        u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.923879385, 0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat12.x * u_xlat36;
					        u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat8.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat6 = u_xlat6 + u_xlat9;
					        u_xlat4 = u_xlat4 + u_xlat8;
					        u_xlat36 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, 0.707106829);
					        u_xlat24.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					        u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					        u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					        u_xlat24.x = sqrt(u_xlat24.x);
					        u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					        u_xlat24.x = u_xlat24.x + 0.25;
					        u_xlat24.x = u_xlat24.x * 4.0;
					        u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					        u_xlat12.x = u_xlat12.x * u_xlat24.x;
					        u_xlat24.x = (-u_xlat5.w) + _CoCParams1.z;
					        u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					        u_xlat36 = u_xlat7.y * u_xlat12.x;
					        u_xlat24.x = u_xlat24.x + 1.0;
					        u_xlat8.w = u_xlat36 * u_xlat24.x + 0.00100000005;
					        u_xlat7.w = u_xlat12.x * u_xlat7.z + 0.00100000005;
					        u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					        u_xlat7.xyz = u_xlat5.xyz * u_xlat7.www;
					        u_xlat3 = u_xlat6 + u_xlat8;
					        u_xlat2 = u_xlat4 + u_xlat7;
					    }
					    u_xlat0.x = max(u_xlat0.x, 0.5);
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat3.w;
					    u_xlat0.x = u_xlat0.x * 0.125663713;
					    u_xlat0 = u_xlat0.xxxx;
					    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
					    u_xlat1.x = u_xlat2.w + 9.99999994e-09;
					    u_xlat1.xyz = u_xlat2.xyz / u_xlat1.xxx;
					    u_xlat2.x = u_xlat3.w + 9.99999994e-09;
					    u_xlat2.xyz = u_xlat3.xyz / u_xlat2.xxx;
					    u_xlat2.xyz = (-u_xlat1.xyz) + u_xlat2.xyz;
					    SV_Target0.xyz = u_xlat0.www * u_xlat2.xyz + u_xlat1.xyz;
					    SV_Target0.w = u_xlat1.w;
					    SV_Target1 = u_xlat0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" "SC_DOF_MASK_ON" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _CoCParams1;
					//   sampler2D _ExclusionMask;
					//   sampler2D _HalfResSourceDepthTexture;
					//   sampler2D _PresortTexture;
					//   float4 _ScionResolutionParameters1;
					//   float4 _ScionResolutionParameters2;
					//   float _TemporalUVOffset;
					//   sampler2D _TiledNeighbourhoodData;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters1 c0       1
					//   _ScionResolutionParameters2 c1       1
					//   _CoCParams1                 c2       1
					//   _TemporalUVOffset           c3       1
					//   _TiledNeighbourhoodData     s0       1
					//   _ExclusionMask              s1       1
					//   _HalfResSourceDepthTexture  s2       1
					//   _PresortTexture             s3       1
					//
					
					    ps_3_0
					    def c4, 10, 0.00100000005, 0.800000012, 0
					    def c5, 1, 0, 9.99999975e-005, 0.400000006
					    def c6, 0, 1.37, 3571, 0
					    def c7, -5, -6, -7, -8
					    def c8, 0.707106829, -0.707106829, 0, 0.349999994
					    def c9, 0.000231481477, 0.25, 0, -1
					    def c10, -13, -14, -15, -16
					    def c11, -17, -18, -19, -20
					    def c12, -21, -22, -23, -24
					    def c13, 0.5, 0.125663713, 9.99999994e-009, 0
					    def c14, 9, 10, 11, 12
					    def c15, 2, -1, -3, -4
					    def c16, -0.923879385, -0.382683486, 0.382683486, -0.382683396
					    defi i0, 8, 0, 0, 0
					    defi i1, 16, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    dcl_2d s3
					    mul r0, c5.xxyy, v0.xyxx
					    texldl r1, r0, s0
					    texldl r2, r0, s2
					    texldl r3, r0, s1
					    mul r1.y, r1.x, r3.x
					    if_lt r1.y, c5.x
					      mov oC1, c5.y
					    else
					      texldl r0, r0, s3
					      add_sat r0.x, -r2.w, c2.z
					      add r0.x, r0.x, c5.x
					      mad r0.x, r0.y, r0.x, c5.z
					      add r0.y, r0.z, c5.z
					      mul r3.yzw, r0.x, r2.xxyz
					      mul r4.xyz, r0.y, r2
					      mul r0.z, r1.y, c5.w
					      mul r1.zw, c0.xyxy, v0.xyxy
					      mov r5.zw, c5.y
					      mov r6.xyz, r4
					      mov r6.w, r0.y
					      mov r7.xyz, r3.yzww
					      mov r7.w, r0.x
					      mov r0.w, c5.x
					      rep i0
					        mov r8.y, c6.y
					        mad r4.w, r0.w, r8.y, c3.x
					        mul r8.xy, r1.zwzw, r4.w
					        mad r8.xy, r8, c9.x, c9.yzzw
					        dp2add r4.w, r8, c6.z, c6.w
					        mul r8.xy, r8, r4.w
					        frc r8.xy, r8
					        mad r8.xy, r8, c15.x, c15.y
					        add r9, r0.w, -c15_abs.yxzw
					        add r10, r0.w, c7
					        cmp r8.zw, -r9_abs.x, c8.xyxy, c8.z
					        cmp r8.zw, -r9_abs.y, c9.xywz, r8
					        cmp r8.zw, -r9_abs.z, c8.x, r8
					        cmp r8.zw, -r9_abs.w, c9, r8
					        cmp r8.zw, -r10_abs.x, c5.xyyx, r8
					        cmp r8.zw, -r10_abs.y, c8.y, r8
					        cmp r8.zw, -r10_abs.z, c5.xyxy, r8
					        cmp r8.zw, -r10_abs.w, c8.xyyx, r8
					        mad r8.xy, r8, c8.w, r8.zwzw
					        mul r8.xy, r0.z, r8
					        mad r5.xy, r8, c1, v0
					        texldl r9, r5.xyww, s2
					        texldl r10, r5.xyww, s3
					        dp2add r4.w, r8, r8, c5.y
					        rsq r4.w, r4.w
					        rcp r4.w, r4.w
					        mad r4.w, r10.x, c4.x, -r4.w
					        add r4.w, r4.w, c9.y
					        mul_sat r4.w, r4.w, -c15.w
					        add_sat r8.x, -r9.w, c2.z
					        mul r8.y, r10.y, r4.w
					        add r8.x, r8.x, c5.x
					        mad r8.w, r8.y, r8.x, c4.y
					        mad r10.w, r4.w, r10.z, c4.y
					        mul r8.xyz, r8.w, r9
					        mul r10.xyz, r9, r10.w
					        texldl r9, r5, s1
					        mad r7, r8, r9.x, r7
					        mad r6, r10, r9.x, r6
					        add r0.w, r0.w, c5.x
					      endrep
					      if_lt c15.x, r1.y
					        mad_sat r0.x, r1.x, r3.x, -c15.x
					        mul r0.y, r1.y, c4.z
					        mov r3.zw, c5.y
					        mov r4, r6
					        mov r5, r7
					        mov r0.z, c14.x
					        rep i1
					          mov r8.y, c6.y
					          mad r0.w, r0.z, r8.y, c3.x
					          mul r8.xy, r0.w, r1.zwzw
					          mad r8.xy, r8, c9.x, c9.yzzw
					          dp2add r0.w, r8, c6.z, c6.w
					          mul r8.xy, r8, r0.w
					          frc r8.xy, r8
					          mad r8.xy, r8, c15.x, c15.y
					          add r9, r0.z, -c14
					          add r10, r0.z, c10
					          add r11, r0.z, c11
					          add r12, r0.z, c12
					          cmp r8.zw, -r9_abs.x, c8.xyxy, c8.z
					          cmp r8.zw, -r9_abs.y, c16.xyxy, r8
					          cmp r8.zw, -r9_abs.z, c9.xywz, r8
					          cmp r8.zw, -r9_abs.w, c16.xyxz, r8
					          cmp r8.zw, -r10_abs.x, c8.x, r8
					          cmp r8.zw, -r10_abs.y, c16.xyzx, r8
					          cmp r8.zw, -r10_abs.z, -c16.xywx, r8
					          cmp r8.zw, -r10_abs.w, c9, r8
					          cmp r8.zw, -r11_abs.x, c5.xyyx, r8
					          cmp r8.zw, -r11_abs.y, c16.xywx, r8
					          cmp r8.zw, -r11_abs.z, -c16.xyzx, r8
					          cmp r8.zw, -r11_abs.w, c8.y, r8
					          cmp r8.zw, -r12_abs.x, -c16.xyxz, r8
					          cmp r8.zw, -r12_abs.y, c5.xyxy, r8
					          cmp r8.zw, -r12_abs.z, -c16.xyxy, r8
					          cmp r8.zw, -r12_abs.w, c8.xyyx, r8
					          mad r8.xy, r8, c8.w, r8.zwzw
					          mul r8.xy, r0.y, r8
					          mad r3.xy, r8, c1, v0
					          texldl r9, r3.xyww, s2
					          texldl r10, r3.xyww, s3
					          dp2add r0.w, r8, r8, c5.y
					          rsq r0.w, r0.w
					          rcp r0.w, r0.w
					          mad r0.w, r10.x, c4.x, -r0.w
					          add r0.w, r0.w, c9.y
					          mul_sat r0.w, r0.w, -c15.w
					          mul r0.w, r0.x, r0.w
					          add_sat r1.x, -r9.w, c2.z
					          mul r8.x, r10.y, r0.w
					          add r1.x, r1.x, c5.x
					          mad r8.w, r8.x, r1.x, c4.y
					          mad r10.w, r0.w, r10.z, c4.y
					          mul r8.xyz, r8.w, r9
					          mul r10.xyz, r9, r10.w
					          texldl r9, r3, s1
					          mad r5, r8, r9.x, r5
					          mad r4, r10, r9.x, r4
					          add r0.z, r0.z, c5.x
					        endrep
					        mov r6, r4
					        mov r7, r5
					      endif
					      max r0.x, r1.y, c13.x
					      mul r0.x, r0.x, r0.x
					      mul r0.x, r0.x, r7.w
					      mul r0.x, r0.x, c13.y
					      mov_sat r0, r0.x
					      add r1.x, r6.w, c13.z
					      rcp r1.x, r1.x
					      mul r1.xyz, r1.x, r6
					      add r1.w, r7.w, c13.z
					      rcp r1.w, r1.w
					      mad r3.xyz, r7, r1.w, -r1
					      mad r2.xyz, r0.w, r3, r1
					      mov oC1, r0
					    endif
					    mov oC0, r2
					
					// approximately 167 instruction slots used (20 texture, 147 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" "SC_DOF_MASK_ON" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _ScionResolutionParameters1;
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_3[6];
						vec4 _CoCParams1;
						vec4 unused_0_5[9];
						float _TemporalUVOffset;
					};
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _ExclusionMask;
					uniform  sampler2D _PresortTexture;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					layout(location = 1) out vec4 SV_Target1;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					float u_xlat12;
					float u_xlat13;
					vec2 u_xlat14;
					vec2 u_xlat24;
					bool u_xlatb24;
					float u_xlat25;
					float u_xlat36;
					void main()
					{
					    u_xlat0 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat2 = textureLod(_ExclusionMask, vs_TEXCOORD0.xy, 0.0);
					    u_xlat12 = u_xlat0.x * u_xlat2.x;
					    u_xlatb24 = u_xlat12<1.0;
					    if(u_xlatb24){
					        SV_Target0 = u_xlat1;
					        SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
					        return;
					    }
					    u_xlat3 = textureLod(_PresortTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat24.x = (-u_xlat1.w) + _CoCParams1.z;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat24.x = u_xlat24.x + 1.0;
					    u_xlat4.w = u_xlat3.y * u_xlat24.x + 9.99999975e-05;
					    u_xlat3.w = u_xlat3.z + 9.99999975e-05;
					    u_xlat4.xyz = u_xlat1.xyz * u_xlat4.www;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat3.www;
					    u_xlat24.x = u_xlat12 * 0.400000006;
					    u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(1.37, 2.74000001, 4.11000013, 5.48000002);
					    u_xlat6 = vs_TEXCOORD0.xyxy * _ScionResolutionParameters1.xyxy;
					    u_xlat7 = u_xlat5.xxyy * u_xlat6.zwzw;
					    u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, -0.707106829);
					    u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					    u_xlat14.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat14.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat14.xy, 0.0);
					    u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					    u_xlat36 = u_xlat36 + 0.25;
					    u_xlat36 = u_xlat36 * 4.0;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat13 = u_xlat9.y * u_xlat36;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					    u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat8 = textureLod(_ExclusionMask, u_xlat14.xy, 0.0);
					    u_xlat4 = u_xlat10 * u_xlat8.xxxx + u_xlat4;
					    u_xlat3 = u_xlat9 * u_xlat8.xxxx + u_xlat3;
					    u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-1.0, 0.0);
					    u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					    u_xlat14.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat14.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat14.xy, 0.0);
					    u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					    u_xlat36 = u_xlat36 + 0.25;
					    u_xlat36 = u_xlat36 * 4.0;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat13 = u_xlat8.y * u_xlat36;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					    u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat7 = textureLod(_ExclusionMask, u_xlat14.xy, 0.0);
					    u_xlat4 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					    u_xlat3 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					    u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					    u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat36 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat5.xy * vec2(u_xlat36);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, 0.707106829);
					    u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					    u_xlat14.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat14.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat14.xy, 0.0);
					    u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					    u_xlat36 = u_xlat36 + 0.25;
					    u_xlat36 = u_xlat36 * 4.0;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat13 = u_xlat8.y * u_xlat36;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					    u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat7 = textureLod(_ExclusionMask, u_xlat14.xy, 0.0);
					    u_xlat4 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					    u_xlat3 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					    u_xlat36 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat5.zw * vec2(u_xlat36);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, -1.0);
					    u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					    u_xlat14.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat14.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat14.xy, 0.0);
					    u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat36 = u_xlat7.x * 10.0 + (-u_xlat36);
					    u_xlat36 = u_xlat36 + 0.25;
					    u_xlat36 = u_xlat36 * 4.0;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat5.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat13 = u_xlat7.y * u_xlat36;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat8.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					    u_xlat7.w = u_xlat36 * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat5.xyz * u_xlat7.www;
					    u_xlat5 = textureLod(_ExclusionMask, u_xlat14.xy, 0.0);
					    u_xlat4 = u_xlat8 * u_xlat5.xxxx + u_xlat4;
					    u_xlat3 = u_xlat7 * u_xlat5.xxxx + u_xlat3;
					    u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(6.8499999, 8.22000027, 9.59000015, 10.96);
					    u_xlat7 = u_xlat5.xxyy * u_xlat6.zwzw;
					    u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat36 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat7.xy * vec2(u_xlat36);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, 1.0);
					    u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					    u_xlat14.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat14.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat14.xy, 0.0);
					    u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					    u_xlat36 = u_xlat36 + 0.25;
					    u_xlat36 = u_xlat36 * 4.0;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat13 = u_xlat9.y * u_xlat36;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					    u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat8 = textureLod(_ExclusionMask, u_xlat14.xy, 0.0);
					    u_xlat4 = u_xlat10 * u_xlat8.xxxx + u_xlat4;
					    u_xlat3 = u_xlat9 * u_xlat8.xxxx + u_xlat3;
					    u_xlat36 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat7.zw * vec2(u_xlat36);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, -0.707106829);
					    u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					    u_xlat14.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat14.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat14.xy, 0.0);
					    u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					    u_xlat36 = u_xlat36 + 0.25;
					    u_xlat36 = u_xlat36 * 4.0;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat13 = u_xlat8.y * u_xlat36;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					    u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat7 = textureLod(_ExclusionMask, u_xlat14.xy, 0.0);
					    u_xlat4 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					    u_xlat3 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					    u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					    u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat36 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat5.xy * vec2(u_xlat36);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(1.0, 0.0);
					    u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					    u_xlat14.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat14.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat14.xy, 0.0);
					    u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					    u_xlat36 = u_xlat36 + 0.25;
					    u_xlat36 = u_xlat36 * 4.0;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat13 = u_xlat8.y * u_xlat36;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					    u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat7 = textureLod(_ExclusionMask, u_xlat14.xy, 0.0);
					    u_xlat4 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					    u_xlat3 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					    u_xlat36 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat5.zw * vec2(u_xlat36);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, 0.707106829);
					    u_xlat24.xy = u_xlat24.xx * u_xlat1.xy;
					    u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					    u_xlat24.x = sqrt(u_xlat24.x);
					    u_xlat24.x = u_xlat7.x * 10.0 + (-u_xlat24.x);
					    u_xlat24.x = u_xlat24.x + 0.25;
					    u_xlat24.x = u_xlat24.x * 4.0;
					    u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					    u_xlat36 = (-u_xlat5.w) + _CoCParams1.z;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat25 = u_xlat7.y * u_xlat24.x;
					    u_xlat36 = u_xlat36 + 1.0;
					    u_xlat8.w = u_xlat25 * u_xlat36 + 0.00100000005;
					    u_xlat7.w = u_xlat24.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat5.xyz * u_xlat7.www;
					    u_xlat5 = textureLod(_ExclusionMask, u_xlat1.xy, 0.0);
					    u_xlat4 = u_xlat8 * u_xlat5.xxxx + u_xlat4;
					    u_xlat3 = u_xlat7 * u_xlat5.xxxx + u_xlat3;
					    u_xlatb24 = 2.0<u_xlat12;
					    if(u_xlatb24){
					        u_xlat0.x = u_xlat0.x * u_xlat2.x + -2.0;
					        u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					        u_xlat24.x = u_xlat12 * 0.800000012;
					        u_xlat2 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(12.3299999, 13.6999998, 15.0699997, 16.4400005);
					        u_xlat5 = u_xlat2.xxyy * u_xlat6.zwzw;
					        u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, -0.707106829);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat8.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat7 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					        u_xlat9 = u_xlat9 * u_xlat7.xxxx + u_xlat4;
					        u_xlat7 = u_xlat8 * u_xlat7.xxxx + u_xlat3;
					        u_xlat36 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.923879385, -0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat5.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat8.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat5.xyz * u_xlat10.www;
					        u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					        u_xlat5 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					        u_xlat9 = u_xlat10 * u_xlat5.xxxx + u_xlat9;
					        u_xlat5 = u_xlat8 * u_xlat5.xxxx + u_xlat7;
					        u_xlat2 = u_xlat2.zzww * u_xlat6.zwzw;
					        u_xlat2 = u_xlat2 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat2.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat2.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-1.0, 0.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat8.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat7.xyz * u_xlat10.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat7 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					        u_xlat9 = u_xlat10 * u_xlat7.xxxx + u_xlat9;
					        u_xlat5 = u_xlat8 * u_xlat7.xxxx + u_xlat5;
					        u_xlat36 = dot(u_xlat2.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat2.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.923879385, 0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat7.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat8.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat7.xyz * u_xlat10.www;
					        u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					        u_xlat2 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					        u_xlat7 = u_xlat10 * u_xlat2.xxxx + u_xlat9;
					        u_xlat2 = u_xlat8 * u_xlat2.xxxx + u_xlat5;
					        u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(17.8099995, 19.1800003, 20.5499992, 21.9200001);
					        u_xlat8 = u_xlat5.xxyy * u_xlat6.zwzw;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, 0.707106829);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat10.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat9 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat11 * u_xlat9.xxxx + u_xlat7;
					        u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					        u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.382683486, -0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					        u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					        u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					        u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.382683396, 0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					        u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					        u_xlat36 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, -1.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat5 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat10 * u_xlat5.xxxx + u_xlat7;
					        u_xlat2 = u_xlat9 * u_xlat5.xxxx + u_xlat2;
					        u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(23.2900009, 24.6599998, 26.0300007, 27.3999996);
					        u_xlat8 = u_xlat5.xxyy * u_xlat6.zwzw;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, 1.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat10.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat9 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat11 * u_xlat9.xxxx + u_xlat7;
					        u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					        u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.382683396, -0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					        u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					        u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					        u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.382683486, 0.923879385);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					        u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					        u_xlat36 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, -0.707106829);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat5 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat10 * u_xlat5.xxxx + u_xlat7;
					        u_xlat2 = u_xlat9 * u_xlat5.xxxx + u_xlat2;
					        u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(28.7700005, 30.1399994, 31.5100002, 32.8800011);
					        u_xlat8 = u_xlat5.xxyy * u_xlat6.zwzw;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.923879385, -0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat10.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat9.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat10.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat36 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat9 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat11 * u_xlat9.xxxx + u_xlat7;
					        u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					        u_xlat36 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(1.0, 0.0);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat9.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat8.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat9.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat36 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat10 * u_xlat8.xxxx + u_xlat7;
					        u_xlat2 = u_xlat9 * u_xlat8.xxxx + u_xlat2;
					        u_xlat5 = u_xlat5.zzww * u_xlat6;
					        u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat36 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.xy * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.923879385, 0.382683486);
					        u_xlat1.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat5.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat5.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat5.xy, 0.0);
					        u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat36 = sqrt(u_xlat36);
					        u_xlat36 = u_xlat8.x * 10.0 + (-u_xlat36);
					        u_xlat36 = u_xlat36 + 0.25;
					        u_xlat36 = u_xlat36 * 4.0;
					        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					        u_xlat36 = u_xlat0.x * u_xlat36;
					        u_xlat1.x = (-u_xlat6.w) + _CoCParams1.z;
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat13 = u_xlat8.y * u_xlat36;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat9.w = u_xlat13 * u_xlat1.x + 0.00100000005;
					        u_xlat8.w = u_xlat36 * u_xlat8.z + 0.00100000005;
					        u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					        u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					        u_xlat6 = textureLod(_ExclusionMask, u_xlat5.xy, 0.0);
					        u_xlat7 = u_xlat9 * u_xlat6.xxxx + u_xlat7;
					        u_xlat2 = u_xlat8 * u_xlat6.xxxx + u_xlat2;
					        u_xlat36 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.zw * vec2(u_xlat36);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, 0.707106829);
					        u_xlat24.xy = u_xlat24.xx * u_xlat1.xy;
					        u_xlat1.xy = u_xlat24.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					        u_xlat6 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					        u_xlat24.x = dot(u_xlat24.xy, u_xlat24.xy);
					        u_xlat24.x = sqrt(u_xlat24.x);
					        u_xlat24.x = u_xlat6.x * 10.0 + (-u_xlat24.x);
					        u_xlat24.x = u_xlat24.x + 0.25;
					        u_xlat24.x = u_xlat24.x * 4.0;
					        u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					        u_xlat0.x = u_xlat0.x * u_xlat24.x;
					        u_xlat24.x = (-u_xlat5.w) + _CoCParams1.z;
					        u_xlat24.x = clamp(u_xlat24.x, 0.0, 1.0);
					        u_xlat36 = u_xlat6.y * u_xlat0.x;
					        u_xlat24.x = u_xlat24.x + 1.0;
					        u_xlat8.w = u_xlat36 * u_xlat24.x + 0.00100000005;
					        u_xlat6.w = u_xlat0.x * u_xlat6.z + 0.00100000005;
					        u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					        u_xlat6.xyz = u_xlat5.xyz * u_xlat6.www;
					        u_xlat5 = textureLod(_ExclusionMask, u_xlat1.xy, 0.0);
					        u_xlat4 = u_xlat8 * u_xlat5.xxxx + u_xlat7;
					        u_xlat3 = u_xlat6 * u_xlat5.xxxx + u_xlat2;
					    }
					    u_xlat0.x = max(u_xlat12, 0.5);
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat4.w;
					    u_xlat0.x = u_xlat0.x * 0.125663713;
					    u_xlat0 = u_xlat0.xxxx;
					    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.w + 9.99999994e-09;
					    u_xlat1.xyz = u_xlat3.xyz / u_xlat1.xxx;
					    u_xlat2.x = u_xlat4.w + 9.99999994e-09;
					    u_xlat2.xyz = u_xlat4.xyz / u_xlat2.xxx;
					    u_xlat2.xyz = (-u_xlat1.xyz) + u_xlat2.xyz;
					    SV_Target0.xyz = u_xlat0.www * u_xlat2.xyz + u_xlat1.xyz;
					    SV_Target0.w = u_xlat1.w;
					    SV_Target1 = u_xlat0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _AvgCenterDepth;
					//   sampler2D _HalfResSourceDepthTexture;
					//   sampler2D _PresortTexture;
					//   float4 _ScionResolutionParameters1;
					//   float4 _ScionResolutionParameters2;
					//   float _TemporalUVOffset;
					//   sampler2D _TiledNeighbourhoodData;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters1 c0       1
					//   _ScionResolutionParameters2 c1       1
					//   _TemporalUVOffset           c2       1
					//   _TiledNeighbourhoodData     s0       1
					//   _HalfResSourceDepthTexture  s1       1
					//   _PresortTexture             s2       1
					//   _AvgCenterDepth             s3       1
					//
					
					    ps_3_0
					    def c3, 1, 0, 0.5, 9.99999975e-005
					    def c4, 0.349999994, 10, 0.00100000005, 0.800000012
					    def c5, 0.400000006, 0, 1.37, 0.707106829
					    def c6, 0.000231481477, 0.25, 0, 3571
					    def c7, -5, -6, -7, -8
					    def c8, -9, -10, -11, -12
					    def c9, -13, -14, -15, -16
					    def c10, -17, -18, -19, -20
					    def c11, -21, -22, -23, -24
					    def c12, 0.125663713, 9.99999994e-009, 0, 0
					    def c13, 0, 9, -0.923879385, -0.382683486
					    def c14, 2, -1, -3, -4
					    def c15, 0.707106829, -0.707106829, 0, -1
					    def c16, -0.923879385, 0.382683486, 0.382683396, 0.923879385
					    defi i0, 8, 0, 0, 0
					    defi i1, 16, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    dcl_2d s3
					    mul r0, c3.xxyy, v0.xyxx
					    texldl r1, r0, s0
					    texldl r2, r0, s1
					    if_lt r1.x, c3.x
					      mov oC1, c3.y
					    else
					      texldl r3, c3.zzyy, s3
					      texldl r0, r0, s2
					      add_sat r0.x, -r2.w, r3.x
					      add r0.x, r0.x, c3.x
					      mad r0.x, r0.y, r0.x, c3.w
					      add r0.y, r0.z, c3.w
					      mul r1.yzw, r0.x, r2.xxyz
					      mul r3.yzw, r0.y, r2.xxyz
					      mul r0.z, r1.x, c5.x
					      mul r4.xy, c0, v0
					      mov r5.zw, c3.y
					      mov r6.xyz, r3.yzww
					      mov r6.w, r0.y
					      mov r7.xyz, r1.yzww
					      mov r7.w, r0.x
					      mov r0.w, c3.x
					      rep i0
					        mov r4.z, c5.z
					        mad r4.z, r0.w, r4.z, c2.x
					        mul r4.zw, r4.z, r4.xyxy
					        mad r4.zw, r4, c6.x, c6.xyyz
					        dp2add r8.x, r4.zwzw, c6.w, c6.z
					        mul r4.zw, r4, r8.x
					        frc r4.zw, r4
					        mad r4.zw, r4, c14.x, c14.y
					        add r8, r0.w, -c14_abs.yxzw
					        add r9, r0.w, c7
					        cmp r10.xy, -r8_abs.x, c15, c15.z
					        cmp r8.xy, -r8_abs.y, c15.wzzw, r10
					        cmp r8.xy, -r8_abs.z, c5.w, r8
					        cmp r8.xy, -r8_abs.w, c15.zwzw, r8
					        cmp r8.xy, -r9_abs.x, c3.yxzw, r8
					        cmp r8.xy, -r9_abs.y, -c5.w, r8
					        cmp r8.xy, -r9_abs.z, c3, r8
					        cmp r8.xy, -r9_abs.w, c15.yxzw, r8
					        mad r4.zw, r4, c4.x, r8.xyxy
					        mul r4.zw, r0.z, r4
					        mad r5.xy, r4.zwzw, c1, v0
					        texldl r8, r5.xyww, s1
					        texldl r9, r5, s2
					        dp2add r4.z, r4.zwzw, r4.zwzw, c3.y
					        rsq r4.z, r4.z
					        rcp r4.z, r4.z
					        mad r4.z, r9.x, c4.y, -r4.z
					        add r4.z, r4.z, c6.y
					        mul_sat r4.z, r4.z, -c14.w
					        add_sat r4.w, r3.x, -r8.w
					        mul r5.x, r9.y, r4.z
					        add r4.w, r4.w, c3.x
					        mad r10.w, r5.x, r4.w, c4.z
					        mad r9.w, r4.z, r9.z, c4.z
					        mul r10.xyz, r8, r10.w
					        mul r9.xyz, r8, r9.w
					        add r7, r7, r10
					        add r6, r6, r9
					        add r0.w, r0.w, c3.x
					      endrep
					      if_lt c14.x, r1.x
					        add_sat r0.x, r1.x, -c14.x
					        mul r0.y, r1.x, c4.w
					        mov r5.zw, c3.y
					        mov r8, r6
					        mov r9, r7
					        mov r0.z, c13.y
					        rep i1
					          mov r1.z, c5.z
					          mad r0.w, r0.z, r1.z, c2.x
					          mul r1.yz, r0.w, r4.xxyw
					          mad r1.yz, r1, c6.x, c6
					          dp2add r0.w, r1.yzzw, c6.w, c6.z
					          mul r1.yz, r1, r0.w
					          frc r1.yz, r1
					          mad r1.yz, r1, c14.x, c14.y
					          add r10, r0.z, c8
					          add r11, r0.z, c9
					          add r12, r0.z, c10
					          add r13, r0.z, c11
					          cmp r3.yz, -r10_abs.x, c15.xxyw, c15.z
					          cmp r3.yz, -r10_abs.y, c13.xzww, r3
					          cmp r3.yz, -r10_abs.z, c15.xwzw, r3
					          cmp r3.yz, -r10_abs.w, c16.xxyw, r3
					          cmp r3.yz, -r11_abs.x, c5.w, r3
					          cmp r3.yz, -r11_abs.y, c16.xyxw, r3
					          cmp r3.yz, -r11_abs.z, c16.xzww, r3
					          cmp r3.yz, -r11_abs.w, c15.xzww, r3
					          cmp r3.yz, -r12_abs.x, c3.xyxw, r3
					          cmp r3.yz, -r12_abs.y, -c16.xzww, r3
					          cmp r3.yz, -r12_abs.z, -c16.xyxw, r3
					          cmp r3.yz, -r12_abs.w, -c5.w, r3
					          cmp r3.yz, -r13_abs.x, -c16.xxyw, r3
					          cmp r3.yz, -r13_abs.y, c3.xxyw, r3
					          cmp r3.yz, -r13_abs.z, -c13.xzww, r3
					          cmp r3.yz, -r13_abs.w, c15.xyxw, r3
					          mad r1.yz, r1, c4.x, r3
					          mul r1.yz, r0.y, r1
					          mad r5.xy, r1.yzzw, c1, v0
					          texldl r10, r5.xyww, s1
					          texldl r11, r5, s2
					          dp2add r0.w, r1.yzzw, r1.yzzw, c3.y
					          rsq r0.w, r0.w
					          rcp r0.w, r0.w
					          mad r0.w, r11.x, c4.y, -r0.w
					          add r0.w, r0.w, c6.y
					          mul_sat r0.w, r0.w, -c14.w
					          mul r0.w, r0.x, r0.w
					          add_sat r1.y, r3.x, -r10.w
					          mul r1.z, r11.y, r0.w
					          add r1.y, r1.y, c3.x
					          mad r12.w, r1.z, r1.y, c4.z
					          mad r11.w, r0.w, r11.z, c4.z
					          mul r12.xyz, r10, r12.w
					          mul r11.xyz, r10, r11.w
					          add r9, r9, r12
					          add r8, r8, r11
					          add r0.z, r0.z, c3.x
					        endrep
					        mov r6, r8
					        mov r7, r9
					      endif
					      max r0.x, r1.x, c3.z
					      mul r0.x, r0.x, r0.x
					      mul r0.x, r0.x, r7.w
					      mul r0.x, r0.x, c12.x
					      mov_sat r0, r0.x
					      add r1.x, r6.w, c12.y
					      rcp r1.x, r1.x
					      mul r1.xyz, r1.x, r6
					      add r1.w, r7.w, c12.y
					      rcp r1.w, r1.w
					      mad r3.xyz, r7, r1.w, -r1
					      mad r2.xyz, r0.w, r3, r1
					      mov oC1, r0
					    endif
					    mov oC0, r2
					
					// approximately 162 instruction slots used (16 texture, 146 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _ScionResolutionParameters1;
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_3[16];
						float _TemporalUVOffset;
					};
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _AvgCenterDepth;
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _PresortTexture;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					layout(location = 1) out vec4 SV_Target1;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec4 u_xlat12;
					vec2 u_xlat13;
					bool u_xlatb13;
					float u_xlat14;
					vec2 u_xlat15;
					vec2 u_xlat26;
					float u_xlat39;
					void main()
					{
					    u_xlat0 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlatb13 = u_xlat0.x<1.0;
					    if(u_xlatb13){
					        SV_Target0 = u_xlat1;
					        SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
					        return;
					    }
					    u_xlat2 = textureLod(_AvgCenterDepth, vec2(0.5, 0.5), 0.0);
					    u_xlat3 = textureLod(_PresortTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat13.x = (-u_xlat1.w) + u_xlat2.x;
					    u_xlat13.x = clamp(u_xlat13.x, 0.0, 1.0);
					    u_xlat13.x = u_xlat13.x + 1.0;
					    u_xlat4.w = u_xlat3.y * u_xlat13.x + 9.99999975e-05;
					    u_xlat3.w = u_xlat3.z + 9.99999975e-05;
					    u_xlat4.xyz = u_xlat1.xyz * u_xlat4.www;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat3.www;
					    u_xlat13.x = u_xlat0.x * 0.400000006;
					    u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(1.37, 2.74000001, 4.11000013, 5.48000002);
					    u_xlat6 = vs_TEXCOORD0.xyxy * _ScionResolutionParameters1.xyxy;
					    u_xlat7 = u_xlat5.xxyy * u_xlat6.zwzw;
					    u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat26.x = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					    u_xlat26.xy = u_xlat7.xy * u_xlat26.xx;
					    u_xlat26.xy = fract(u_xlat26.xy);
					    u_xlat26.xy = u_xlat26.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat26.xy = u_xlat26.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, -0.707106829);
					    u_xlat26.xy = u_xlat13.xx * u_xlat26.xy;
					    u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					    u_xlat26.x = sqrt(u_xlat26.x);
					    u_xlat26.x = u_xlat9.x * 10.0 + (-u_xlat26.x);
					    u_xlat26.x = u_xlat26.x + 0.25;
					    u_xlat26.x = u_xlat26.x * 4.0;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat39 = u_xlat2.x + (-u_xlat8.w);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat9.y * u_xlat26.x;
					    u_xlat39 = u_xlat39 + 1.0;
					    u_xlat10.w = u_xlat1.x * u_xlat39 + 0.00100000005;
					    u_xlat9.w = u_xlat26.x * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat4 = u_xlat4 + u_xlat10;
					    u_xlat3 = u_xlat3 + u_xlat9;
					    u_xlat26.x = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					    u_xlat26.xy = u_xlat7.zw * u_xlat26.xx;
					    u_xlat26.xy = fract(u_xlat26.xy);
					    u_xlat26.xy = u_xlat26.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat26.xy = u_xlat26.xy * vec2(0.349999994, 0.349999994) + vec2(-1.0, 0.0);
					    u_xlat26.xy = u_xlat13.xx * u_xlat26.xy;
					    u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					    u_xlat26.x = sqrt(u_xlat26.x);
					    u_xlat26.x = u_xlat8.x * 10.0 + (-u_xlat26.x);
					    u_xlat26.x = u_xlat26.x + 0.25;
					    u_xlat26.x = u_xlat26.x * 4.0;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat39 = u_xlat2.x + (-u_xlat7.w);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat8.y * u_xlat26.x;
					    u_xlat39 = u_xlat39 + 1.0;
					    u_xlat9.w = u_xlat1.x * u_xlat39 + 0.00100000005;
					    u_xlat8.w = u_xlat26.x * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat4 = u_xlat4 + u_xlat9;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					    u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat26.x = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					    u_xlat26.xy = u_xlat5.xy * u_xlat26.xx;
					    u_xlat26.xy = fract(u_xlat26.xy);
					    u_xlat26.xy = u_xlat26.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat26.xy = u_xlat26.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, 0.707106829);
					    u_xlat26.xy = u_xlat13.xx * u_xlat26.xy;
					    u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					    u_xlat26.x = sqrt(u_xlat26.x);
					    u_xlat26.x = u_xlat8.x * 10.0 + (-u_xlat26.x);
					    u_xlat26.x = u_xlat26.x + 0.25;
					    u_xlat26.x = u_xlat26.x * 4.0;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat39 = u_xlat2.x + (-u_xlat7.w);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat8.y * u_xlat26.x;
					    u_xlat39 = u_xlat39 + 1.0;
					    u_xlat9.w = u_xlat1.x * u_xlat39 + 0.00100000005;
					    u_xlat8.w = u_xlat26.x * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat4 = u_xlat4 + u_xlat9;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat26.x = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					    u_xlat26.xy = u_xlat5.zw * u_xlat26.xx;
					    u_xlat26.xy = fract(u_xlat26.xy);
					    u_xlat26.xy = u_xlat26.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat26.xy = u_xlat26.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, -1.0);
					    u_xlat26.xy = u_xlat13.xx * u_xlat26.xy;
					    u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					    u_xlat26.x = sqrt(u_xlat26.x);
					    u_xlat26.x = u_xlat7.x * 10.0 + (-u_xlat26.x);
					    u_xlat26.x = u_xlat26.x + 0.25;
					    u_xlat26.x = u_xlat26.x * 4.0;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat39 = u_xlat2.x + (-u_xlat5.w);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat7.y * u_xlat26.x;
					    u_xlat39 = u_xlat39 + 1.0;
					    u_xlat8.w = u_xlat1.x * u_xlat39 + 0.00100000005;
					    u_xlat7.w = u_xlat26.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat5.xyz * u_xlat7.www;
					    u_xlat4 = u_xlat4 + u_xlat8;
					    u_xlat3 = u_xlat3 + u_xlat7;
					    u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(6.8499999, 8.22000027, 9.59000015, 10.96);
					    u_xlat7 = u_xlat5.xxyy * u_xlat6.zwzw;
					    u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat26.x = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					    u_xlat26.xy = u_xlat7.xy * u_xlat26.xx;
					    u_xlat26.xy = fract(u_xlat26.xy);
					    u_xlat26.xy = u_xlat26.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat26.xy = u_xlat26.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, 1.0);
					    u_xlat26.xy = u_xlat13.xx * u_xlat26.xy;
					    u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					    u_xlat26.x = sqrt(u_xlat26.x);
					    u_xlat26.x = u_xlat9.x * 10.0 + (-u_xlat26.x);
					    u_xlat26.x = u_xlat26.x + 0.25;
					    u_xlat26.x = u_xlat26.x * 4.0;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat39 = u_xlat2.x + (-u_xlat8.w);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat9.y * u_xlat26.x;
					    u_xlat39 = u_xlat39 + 1.0;
					    u_xlat10.w = u_xlat1.x * u_xlat39 + 0.00100000005;
					    u_xlat9.w = u_xlat26.x * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat4 = u_xlat4 + u_xlat10;
					    u_xlat3 = u_xlat3 + u_xlat9;
					    u_xlat26.x = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					    u_xlat26.xy = u_xlat7.zw * u_xlat26.xx;
					    u_xlat26.xy = fract(u_xlat26.xy);
					    u_xlat26.xy = u_xlat26.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat26.xy = u_xlat26.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, -0.707106829);
					    u_xlat26.xy = u_xlat13.xx * u_xlat26.xy;
					    u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					    u_xlat26.x = sqrt(u_xlat26.x);
					    u_xlat26.x = u_xlat8.x * 10.0 + (-u_xlat26.x);
					    u_xlat26.x = u_xlat26.x + 0.25;
					    u_xlat26.x = u_xlat26.x * 4.0;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat39 = u_xlat2.x + (-u_xlat7.w);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat8.y * u_xlat26.x;
					    u_xlat39 = u_xlat39 + 1.0;
					    u_xlat9.w = u_xlat1.x * u_xlat39 + 0.00100000005;
					    u_xlat8.w = u_xlat26.x * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat4 = u_xlat4 + u_xlat9;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					    u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat26.x = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					    u_xlat26.xy = u_xlat5.xy * u_xlat26.xx;
					    u_xlat26.xy = fract(u_xlat26.xy);
					    u_xlat26.xy = u_xlat26.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat26.xy = u_xlat26.xy * vec2(0.349999994, 0.349999994) + vec2(1.0, 0.0);
					    u_xlat26.xy = u_xlat13.xx * u_xlat26.xy;
					    u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					    u_xlat26.x = sqrt(u_xlat26.x);
					    u_xlat26.x = u_xlat8.x * 10.0 + (-u_xlat26.x);
					    u_xlat26.x = u_xlat26.x + 0.25;
					    u_xlat26.x = u_xlat26.x * 4.0;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat39 = u_xlat2.x + (-u_xlat7.w);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat8.y * u_xlat26.x;
					    u_xlat39 = u_xlat39 + 1.0;
					    u_xlat9.w = u_xlat1.x * u_xlat39 + 0.00100000005;
					    u_xlat8.w = u_xlat26.x * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat7.xyz * u_xlat8.www;
					    u_xlat4 = u_xlat4 + u_xlat9;
					    u_xlat3 = u_xlat3 + u_xlat8;
					    u_xlat26.x = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					    u_xlat26.xy = u_xlat5.zw * u_xlat26.xx;
					    u_xlat26.xy = fract(u_xlat26.xy);
					    u_xlat26.xy = u_xlat26.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat26.xy = u_xlat26.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, 0.707106829);
					    u_xlat13.xy = u_xlat13.xx * u_xlat26.xy;
					    u_xlat1.xy = u_xlat13.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat13.x = dot(u_xlat13.xy, u_xlat13.xy);
					    u_xlat13.x = sqrt(u_xlat13.x);
					    u_xlat13.x = u_xlat7.x * 10.0 + (-u_xlat13.x);
					    u_xlat13.x = u_xlat13.x + 0.25;
					    u_xlat13.x = u_xlat13.x * 4.0;
					    u_xlat13.x = clamp(u_xlat13.x, 0.0, 1.0);
					    u_xlat26.x = u_xlat2.x + (-u_xlat5.w);
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat39 = u_xlat7.y * u_xlat13.x;
					    u_xlat26.x = u_xlat26.x + 1.0;
					    u_xlat8.w = u_xlat39 * u_xlat26.x + 0.00100000005;
					    u_xlat7.w = u_xlat13.x * u_xlat7.z + 0.00100000005;
					    u_xlat8.xyz = u_xlat5.xyz * u_xlat8.www;
					    u_xlat7.xyz = u_xlat5.xyz * u_xlat7.www;
					    u_xlat4 = u_xlat4 + u_xlat8;
					    u_xlat3 = u_xlat3 + u_xlat7;
					    u_xlatb13 = 2.0<u_xlat0.x;
					    if(u_xlatb13){
					        u_xlat13.x = u_xlat0.x + -2.0;
					        u_xlat13.x = clamp(u_xlat13.x, 0.0, 1.0);
					        u_xlat26.x = u_xlat0.x * 0.800000012;
					        u_xlat5 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(12.3299999, 13.6999998, 15.0699997, 16.4400005);
					        u_xlat7 = u_xlat5.xxyy * u_xlat6.zwzw;
					        u_xlat7 = u_xlat7 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat7.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, -0.707106829);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat8.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat9.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = u_xlat4 + u_xlat10;
					        u_xlat9 = u_xlat3 + u_xlat9;
					        u_xlat39 = dot(u_xlat7.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat7.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.923879385, -0.382683486);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat7.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat7.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat7.xyz * u_xlat10.www;
					        u_xlat7 = u_xlat8 + u_xlat11;
					        u_xlat8 = u_xlat9 + u_xlat10;
					        u_xlat5 = u_xlat5.zzww * u_xlat6.zwzw;
					        u_xlat5 = u_xlat5 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat5.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-1.0, 0.0);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat7 = u_xlat7 + u_xlat11;
					        u_xlat8 = u_xlat8 + u_xlat10;
					        u_xlat39 = dot(u_xlat5.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat5.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.923879385, 0.382683486);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat5 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat5.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat9.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat5.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat5.xyz * u_xlat9.www;
					        u_xlat5 = u_xlat7 + u_xlat10;
					        u_xlat7 = u_xlat8 + u_xlat9;
					        u_xlat8 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(17.8099995, 19.1800003, 20.5499992, 21.9200001);
					        u_xlat9 = u_xlat6.zwzw * u_xlat8.xxyy;
					        u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, 0.707106829);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat11.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat10.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat11.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat12.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat11.w = u_xlat39 * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					        u_xlat5 = u_xlat5 + u_xlat12;
					        u_xlat7 = u_xlat7 + u_xlat11;
					        u_xlat39 = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.382683486, -0.923879385);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat5 = u_xlat5 + u_xlat11;
					        u_xlat7 = u_xlat7 + u_xlat10;
					        u_xlat8 = u_xlat6.zwzw * u_xlat8.zzww;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.382683396, 0.923879385);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat5 = u_xlat5 + u_xlat11;
					        u_xlat7 = u_xlat7 + u_xlat10;
					        u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, -1.0);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat8.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat9.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat5 = u_xlat5 + u_xlat10;
					        u_xlat7 = u_xlat7 + u_xlat9;
					        u_xlat8 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(23.2900009, 24.6599998, 26.0300007, 27.3999996);
					        u_xlat9 = u_xlat6.zwzw * u_xlat8.xxyy;
					        u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, 1.0);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat11.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat10.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat11.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat12.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat11.w = u_xlat39 * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					        u_xlat5 = u_xlat5 + u_xlat12;
					        u_xlat7 = u_xlat7 + u_xlat11;
					        u_xlat39 = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.382683396, -0.923879385);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat5 = u_xlat5 + u_xlat11;
					        u_xlat7 = u_xlat7 + u_xlat10;
					        u_xlat8 = u_xlat6.zwzw * u_xlat8.zzww;
					        u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.382683486, 0.923879385);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat5 = u_xlat5 + u_xlat11;
					        u_xlat7 = u_xlat7 + u_xlat10;
					        u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, -0.707106829);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat8.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat9.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat5 = u_xlat5 + u_xlat10;
					        u_xlat7 = u_xlat7 + u_xlat9;
					        u_xlat8 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(28.7700005, 30.1399994, 31.5100002, 32.8800011);
					        u_xlat9 = u_xlat6.zwzw * u_xlat8.xxyy;
					        u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.923879385, -0.382683486);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat11.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat10.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat11.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat12.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat11.w = u_xlat39 * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					        u_xlat5 = u_xlat5 + u_xlat12;
					        u_xlat7 = u_xlat7 + u_xlat11;
					        u_xlat39 = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(1.0, 0.0);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat9.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat5 = u_xlat5 + u_xlat11;
					        u_xlat7 = u_xlat7 + u_xlat10;
					        u_xlat6 = u_xlat6 * u_xlat8.zzww;
					        u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.923879385, 0.382683486);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat13.x * u_xlat39;
					        u_xlat1.x = u_xlat2.x + (-u_xlat8.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat9.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat5 = u_xlat5 + u_xlat10;
					        u_xlat7 = u_xlat7 + u_xlat9;
					        u_xlat39 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, 0.707106829);
					        u_xlat26.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					        u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					        u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					        u_xlat26.x = sqrt(u_xlat26.x);
					        u_xlat26.x = u_xlat8.x * 10.0 + (-u_xlat26.x);
					        u_xlat26.x = u_xlat26.x + 0.25;
					        u_xlat26.x = u_xlat26.x * 4.0;
					        u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					        u_xlat13.x = u_xlat13.x * u_xlat26.x;
					        u_xlat26.x = u_xlat2.x + (-u_xlat6.w);
					        u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					        u_xlat39 = u_xlat8.y * u_xlat13.x;
					        u_xlat26.x = u_xlat26.x + 1.0;
					        u_xlat2.w = u_xlat39 * u_xlat26.x + 0.00100000005;
					        u_xlat8.w = u_xlat13.x * u_xlat8.z + 0.00100000005;
					        u_xlat2.xyz = u_xlat2.www * u_xlat6.xyz;
					        u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					        u_xlat4 = u_xlat2 + u_xlat5;
					        u_xlat3 = u_xlat7 + u_xlat8;
					    }
					    u_xlat0.x = max(u_xlat0.x, 0.5);
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat4.w;
					    u_xlat0.x = u_xlat0.x * 0.125663713;
					    u_xlat0 = u_xlat0.xxxx;
					    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.w + 9.99999994e-09;
					    u_xlat1.xyz = u_xlat3.xyz / u_xlat1.xxx;
					    u_xlat2.x = u_xlat4.w + 9.99999994e-09;
					    u_xlat2.xyz = u_xlat4.xyz / u_xlat2.xxx;
					    u_xlat2.xyz = (-u_xlat1.xyz) + u_xlat2.xyz;
					    SV_Target0.xyz = u_xlat0.www * u_xlat2.xyz + u_xlat1.xyz;
					    SV_Target0.w = u_xlat1.w;
					    SV_Target1 = u_xlat0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" "SC_DOF_MASK_ON" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _AvgCenterDepth;
					//   sampler2D _ExclusionMask;
					//   sampler2D _HalfResSourceDepthTexture;
					//   sampler2D _PresortTexture;
					//   float4 _ScionResolutionParameters1;
					//   float4 _ScionResolutionParameters2;
					//   float _TemporalUVOffset;
					//   sampler2D _TiledNeighbourhoodData;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScionResolutionParameters1 c0       1
					//   _ScionResolutionParameters2 c1       1
					//   _TemporalUVOffset           c2       1
					//   _TiledNeighbourhoodData     s0       1
					//   _ExclusionMask              s1       1
					//   _HalfResSourceDepthTexture  s2       1
					//   _PresortTexture             s3       1
					//   _AvgCenterDepth             s4       1
					//
					
					    ps_3_0
					    def c3, 1, 0, 0.5, 9.99999975e-005
					    def c4, 0.349999994, 10, 0.00100000005, 0.800000012
					    def c5, 0.400000006, 0, 1.37, 0.707106829
					    def c6, 0.000231481477, 0.25, 0, 3571
					    def c7, -5, -6, -7, -8
					    def c8, -9, -10, -11, -12
					    def c9, -13, -14, -15, -16
					    def c10, -17, -18, -19, -20
					    def c11, -21, -22, -23, -24
					    def c12, 0.125663713, 9.99999994e-009, 0, 0
					    def c13, 0, 9, -0.923879385, -0.382683486
					    def c14, 2, -1, -3, -4
					    def c15, 0.707106829, -0.707106829, 0, -1
					    def c16, -0.923879385, 0.382683486, 0.382683396, 0.923879385
					    defi i0, 8, 0, 0, 0
					    defi i1, 16, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    dcl_2d s3
					    dcl_2d s4
					    mul r0, c3.xxyy, v0.xyxx
					    texldl r1, r0, s0
					    texldl r2, r0, s2
					    texldl r3, r0, s1
					    mul r1.y, r1.x, r3.x
					    if_lt r1.y, c3.x
					      mov oC1, c3.y
					    else
					      texldl r4, c3.zzyy, s4
					      texldl r0, r0, s3
					      add_sat r0.x, -r2.w, r4.x
					      add r0.x, r0.x, c3.x
					      mad r0.x, r0.y, r0.x, c3.w
					      add r0.y, r0.z, c3.w
					      mul r3.yzw, r0.x, r2.xxyz
					      mul r4.yzw, r0.y, r2.xxyz
					      mul r0.z, r1.y, c5.x
					      mul r1.zw, c0.xyxy, v0.xyxy
					      mov r5.zw, c3.y
					      mov r6.xyz, r4.yzww
					      mov r6.w, r0.y
					      mov r7.xyz, r3.yzww
					      mov r7.w, r0.x
					      mov r0.w, c3.x
					      rep i0
					        mov r8.z, c5.z
					        mad r8.x, r0.w, r8.z, c2.x
					        mul r8.xy, r1.zwzw, r8.x
					        mad r8.xy, r8, c6.x, c6.yzzw
					        dp2add r8.z, r8, c6.w, c6.z
					        mul r8.xy, r8, r8.z
					        frc r8.xy, r8
					        mad r8.xy, r8, c14.x, c14.y
					        add r9, r0.w, -c14_abs.yxzw
					        add r10, r0.w, c7
					        cmp r8.zw, -r9_abs.x, c15.xyxy, c15.z
					        cmp r8.zw, -r9_abs.y, c15.xywz, r8
					        cmp r8.zw, -r9_abs.z, c5.w, r8
					        cmp r8.zw, -r9_abs.w, c15, r8
					        cmp r8.zw, -r10_abs.x, c3.xyyx, r8
					        cmp r8.zw, -r10_abs.y, -c5.w, r8
					        cmp r8.zw, -r10_abs.z, c3.xyxy, r8
					        cmp r8.zw, -r10_abs.w, c15.xyyx, r8
					        mad r8.xy, r8, c4.x, r8.zwzw
					        mul r8.xy, r0.z, r8
					        mad r5.xy, r8, c1, v0
					        texldl r9, r5.xyww, s2
					        texldl r10, r5.xyww, s3
					        dp2add r8.x, r8, r8, c3.y
					        rsq r8.x, r8.x
					        rcp r8.x, r8.x
					        mad r8.x, r10.x, c4.y, -r8.x
					        add r8.x, r8.x, c6.y
					        mul_sat r8.x, r8.x, -c14.w
					        add_sat r8.y, r4.x, -r9.w
					        mul r8.z, r10.y, r8.x
					        add r8.y, r8.y, c3.x
					        mad r11.w, r8.z, r8.y, c4.z
					        mad r8.w, r8.x, r10.z, c4.z
					        mul r11.xyz, r9, r11.w
					        mul r8.xyz, r8.w, r9
					        texldl r9, r5, s1
					        mad r7, r11, r9.x, r7
					        mad r6, r8, r9.x, r6
					        add r0.w, r0.w, c3.x
					      endrep
					      if_lt c14.x, r1.y
					        mad_sat r0.x, r1.x, r3.x, -c14.x
					        mul r0.y, r1.y, c4.w
					        mov r3.zw, c3.y
					        mov r5, r6
					        mov r8, r7
					        mov r0.z, c13.y
					        rep i1
					          mov r4.z, c5.z
					          mad r0.w, r0.z, r4.z, c2.x
					          mul r4.yz, r0.w, r1.xzww
					          mad r4.yz, r4, c6.x, c6
					          dp2add r0.w, r4.yzzw, c6.w, c6.z
					          mul r4.yz, r4, r0.w
					          frc r4.yz, r4
					          mad r4.yz, r4, c14.x, c14.y
					          add r9, r0.z, c8
					          add r10, r0.z, c9
					          add r11, r0.z, c10
					          add r12, r0.z, c11
					          cmp r13.xy, -r9_abs.x, c15, c15.z
					          cmp r9.xy, -r9_abs.y, c13.zwzw, r13
					          cmp r9.xy, -r9_abs.z, c15.wzzw, r9
					          cmp r9.xy, -r9_abs.w, c16, r9
					          cmp r9.xy, -r10_abs.x, c5.w, r9
					          cmp r9.xy, -r10_abs.y, c16.yxzw, r9
					          cmp r9.xy, -r10_abs.z, c16.zwzw, r9
					          cmp r9.xy, -r10_abs.w, c15.zwzw, r9
					          cmp r9.xy, -r11_abs.x, c3.yxzw, r9
					          cmp r9.xy, -r11_abs.y, -c16.zwzw, r9
					          cmp r9.xy, -r11_abs.z, -c16.yxzw, r9
					          cmp r9.xy, -r11_abs.w, -c5.w, r9
					          cmp r9.xy, -r12_abs.x, -c16, r9
					          cmp r9.xy, -r12_abs.y, c3, r9
					          cmp r9.xy, -r12_abs.z, -c13.zwzw, r9
					          cmp r9.xy, -r12_abs.w, c15.yxzw, r9
					          mad r4.yz, r4, c4.x, r9.xxyw
					          mul r4.yz, r0.y, r4
					          mad r3.xy, r4.yzzw, c1, v0
					          texldl r9, r3.xyww, s2
					          texldl r10, r3.xyww, s3
					          dp2add r0.w, r4.yzzw, r4.yzzw, c3.y
					          rsq r0.w, r0.w
					          rcp r0.w, r0.w
					          mad r0.w, r10.x, c4.y, -r0.w
					          add r0.w, r0.w, c6.y
					          mul_sat r0.w, r0.w, -c14.w
					          mul r0.w, r0.x, r0.w
					          add_sat r1.x, r4.x, -r9.w
					          mul r4.y, r10.y, r0.w
					          add r1.x, r1.x, c3.x
					          mad r11.w, r4.y, r1.x, c4.z
					          mad r10.w, r0.w, r10.z, c4.z
					          mul r11.xyz, r9, r11.w
					          mul r10.xyz, r9, r10.w
					          texldl r9, r3, s1
					          mad r8, r11, r9.x, r8
					          mad r5, r10, r9.x, r5
					          add r0.z, r0.z, c3.x
					        endrep
					        mov r6, r5
					        mov r7, r8
					      endif
					      max r0.x, r1.y, c3.z
					      mul r0.x, r0.x, r0.x
					      mul r0.x, r0.x, r7.w
					      mul r0.x, r0.x, c12.x
					      mov_sat r0, r0.x
					      add r1.x, r6.w, c12.y
					      rcp r1.x, r1.x
					      mul r1.xyz, r1.x, r6
					      add r1.w, r7.w, c12.y
					      rcp r1.w, r1.w
					      mad r3.xyz, r7, r1.w, -r1
					      mad r2.xyz, r0.w, r3, r1
					      mov oC1, r0
					    endif
					    mov oC0, r2
					
					// approximately 169 instruction slots used (22 texture, 147 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" "SC_DOF_MASK_ON" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _ScionResolutionParameters1;
						vec4 _ScionResolutionParameters2;
						vec4 unused_0_3[16];
						float _TemporalUVOffset;
					};
					uniform  sampler2D _TiledNeighbourhoodData;
					uniform  sampler2D _AvgCenterDepth;
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _ExclusionMask;
					uniform  sampler2D _PresortTexture;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					layout(location = 1) out vec4 SV_Target1;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec4 u_xlat12;
					float u_xlat13;
					float u_xlat14;
					vec2 u_xlat15;
					vec2 u_xlat16;
					vec2 u_xlat26;
					bool u_xlatb26;
					float u_xlat27;
					float u_xlat39;
					void main()
					{
					    u_xlat0 = textureLod(_TiledNeighbourhoodData, vs_TEXCOORD0.xy, 0.0);
					    u_xlat1 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat2 = textureLod(_ExclusionMask, vs_TEXCOORD0.xy, 0.0);
					    u_xlat13 = u_xlat0.x * u_xlat2.x;
					    u_xlatb26 = u_xlat13<1.0;
					    if(u_xlatb26){
					        SV_Target0 = u_xlat1;
					        SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
					        return;
					    }
					    u_xlat3 = textureLod(_AvgCenterDepth, vec2(0.5, 0.5), 0.0);
					    u_xlat4 = textureLod(_PresortTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat26.x = (-u_xlat1.w) + u_xlat3.x;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat26.x = u_xlat26.x + 1.0;
					    u_xlat5.w = u_xlat4.y * u_xlat26.x + 9.99999975e-05;
					    u_xlat4.w = u_xlat4.z + 9.99999975e-05;
					    u_xlat5.xyz = u_xlat1.xyz * u_xlat5.www;
					    u_xlat4.xyz = u_xlat1.xyz * u_xlat4.www;
					    u_xlat26.x = u_xlat13 * 0.400000006;
					    u_xlat6 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(1.37, 2.74000001, 4.11000013, 5.48000002);
					    u_xlat7 = vs_TEXCOORD0.xyxy * _ScionResolutionParameters1.xyxy;
					    u_xlat8 = u_xlat6.xxyy * u_xlat7.zwzw;
					    u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, -0.707106829);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.x + (-u_xlat9.w);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat10.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					    u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					    u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					    u_xlat9 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat5 = u_xlat11 * u_xlat9.xxxx + u_xlat5;
					    u_xlat4 = u_xlat10 * u_xlat9.xxxx + u_xlat4;
					    u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-1.0, 0.0);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.x + (-u_xlat8.w);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat9.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					    u_xlat4 = u_xlat9 * u_xlat8.xxxx + u_xlat4;
					    u_xlat6 = u_xlat6.zzww * u_xlat7.zwzw;
					    u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat39 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat6.xy * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, 0.707106829);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.x + (-u_xlat8.w);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat9.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					    u_xlat4 = u_xlat9 * u_xlat8.xxxx + u_xlat4;
					    u_xlat39 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat6.zw * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, -1.0);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat8.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.x + (-u_xlat6.w);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat8.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat9.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat8.w = u_xlat39 * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat6 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat5 = u_xlat9 * u_xlat6.xxxx + u_xlat5;
					    u_xlat4 = u_xlat8 * u_xlat6.xxxx + u_xlat4;
					    u_xlat6 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(6.8499999, 8.22000027, 9.59000015, 10.96);
					    u_xlat8 = u_xlat6.xxyy * u_xlat7.zwzw;
					    u_xlat8 = u_xlat8 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat39 = dot(u_xlat8.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat8.xy * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, 1.0);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat10 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.x + (-u_xlat9.w);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat10.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					    u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					    u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					    u_xlat9 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat5 = u_xlat11 * u_xlat9.xxxx + u_xlat5;
					    u_xlat4 = u_xlat10 * u_xlat9.xxxx + u_xlat4;
					    u_xlat39 = dot(u_xlat8.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat8.zw * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, -0.707106829);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.x + (-u_xlat8.w);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat9.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					    u_xlat4 = u_xlat9 * u_xlat8.xxxx + u_xlat4;
					    u_xlat6 = u_xlat6.zzww * u_xlat7.zwzw;
					    u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					    u_xlat39 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat6.xy * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(1.0, 0.0);
					    u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat15.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat15.xy, 0.0);
					    u_xlat9 = textureLod(_PresortTexture, u_xlat15.xy, 0.0);
					    u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					    u_xlat39 = u_xlat39 + 0.25;
					    u_xlat39 = u_xlat39 * 4.0;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat1.x = u_xlat3.x + (-u_xlat8.w);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = u_xlat9.y * u_xlat39;
					    u_xlat1.x = u_xlat1.x + 1.0;
					    u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					    u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					    u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					    u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					    u_xlat8 = textureLod(_ExclusionMask, u_xlat15.xy, 0.0);
					    u_xlat5 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					    u_xlat4 = u_xlat9 * u_xlat8.xxxx + u_xlat4;
					    u_xlat39 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					    u_xlat1.xy = u_xlat6.zw * vec2(u_xlat39);
					    u_xlat1.xy = fract(u_xlat1.xy);
					    u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, 0.707106829);
					    u_xlat26.xy = u_xlat26.xx * u_xlat1.xy;
					    u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					    u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					    u_xlat8 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					    u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					    u_xlat26.x = sqrt(u_xlat26.x);
					    u_xlat26.x = u_xlat8.x * 10.0 + (-u_xlat26.x);
					    u_xlat26.x = u_xlat26.x + 0.25;
					    u_xlat26.x = u_xlat26.x * 4.0;
					    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					    u_xlat39 = u_xlat3.x + (-u_xlat6.w);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat27 = u_xlat8.y * u_xlat26.x;
					    u_xlat39 = u_xlat39 + 1.0;
					    u_xlat9.w = u_xlat27 * u_xlat39 + 0.00100000005;
					    u_xlat8.w = u_xlat26.x * u_xlat8.z + 0.00100000005;
					    u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					    u_xlat8.xyz = u_xlat6.xyz * u_xlat8.www;
					    u_xlat6 = textureLod(_ExclusionMask, u_xlat1.xy, 0.0);
					    u_xlat5 = u_xlat9 * u_xlat6.xxxx + u_xlat5;
					    u_xlat4 = u_xlat8 * u_xlat6.xxxx + u_xlat4;
					    u_xlatb26 = 2.0<u_xlat13;
					    if(u_xlatb26){
					        u_xlat0.x = u_xlat0.x * u_xlat2.x + -2.0;
					        u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					        u_xlat26.x = u_xlat13 * 0.800000012;
					        u_xlat2 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(12.3299999, 13.6999998, 15.0699997, 16.4400005);
					        u_xlat6 = u_xlat2.xxyy * u_xlat7.zwzw;
					        u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, -0.707106829);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat0.x * u_xlat39;
					        u_xlat1.x = u_xlat3.x + (-u_xlat8.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat9.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat8.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					        u_xlat10 = u_xlat10 * u_xlat8.xxxx + u_xlat5;
					        u_xlat8 = u_xlat9 * u_xlat8.xxxx + u_xlat4;
					        u_xlat39 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.923879385, -0.382683486);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat0.x * u_xlat39;
					        u_xlat1.x = u_xlat3.x + (-u_xlat6.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat9.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat6.xyz * u_xlat11.www;
					        u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					        u_xlat6 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					        u_xlat10 = u_xlat11 * u_xlat6.xxxx + u_xlat10;
					        u_xlat6 = u_xlat9 * u_xlat6.xxxx + u_xlat8;
					        u_xlat2 = u_xlat2.zzww * u_xlat7.zwzw;
					        u_xlat2 = u_xlat2 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat2.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat2.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-1.0, 0.0);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat0.x * u_xlat39;
					        u_xlat1.x = u_xlat3.x + (-u_xlat8.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat9.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat8 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					        u_xlat10 = u_xlat11 * u_xlat8.xxxx + u_xlat10;
					        u_xlat6 = u_xlat9 * u_xlat8.xxxx + u_xlat6;
					        u_xlat39 = dot(u_xlat2.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat2.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.923879385, 0.382683486);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat2.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat8 = textureLod(_HalfResSourceDepthTexture, u_xlat2.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat2.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat0.x * u_xlat39;
					        u_xlat1.x = u_xlat3.x + (-u_xlat8.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat9.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat8.xyz * u_xlat11.www;
					        u_xlat9.xyz = u_xlat8.xyz * u_xlat9.www;
					        u_xlat2 = textureLod(_ExclusionMask, u_xlat2.xy, 0.0);
					        u_xlat8 = u_xlat11 * u_xlat2.xxxx + u_xlat10;
					        u_xlat2 = u_xlat9 * u_xlat2.xxxx + u_xlat6;
					        u_xlat6 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(17.8099995, 19.1800003, 20.5499992, 21.9200001);
					        u_xlat9 = u_xlat6.xxyy * u_xlat7.zwzw;
					        u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.707106829, 0.707106829);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat11.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat0.x * u_xlat39;
					        u_xlat1.x = u_xlat3.x + (-u_xlat10.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat11.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat12.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat11.w = u_xlat39 * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					        u_xlat10 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat8 = u_xlat12 * u_xlat10.xxxx + u_xlat8;
					        u_xlat2 = u_xlat11 * u_xlat10.xxxx + u_xlat2;
					        u_xlat39 = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.382683486, -0.923879385);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat0.x * u_xlat39;
					        u_xlat1.x = u_xlat3.x + (-u_xlat9.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat9 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat8 = u_xlat11 * u_xlat9.xxxx + u_xlat8;
					        u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					        u_xlat6 = u_xlat6.zzww * u_xlat7.zwzw;
					        u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.382683396, 0.923879385);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat0.x * u_xlat39;
					        u_xlat1.x = u_xlat3.x + (-u_xlat9.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat9 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat8 = u_xlat11 * u_xlat9.xxxx + u_xlat8;
					        u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					        u_xlat39 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, -1.0);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat0.x * u_xlat39;
					        u_xlat1.x = u_xlat3.x + (-u_xlat6.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat9.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat6.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					        u_xlat6 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat8 = u_xlat10 * u_xlat6.xxxx + u_xlat8;
					        u_xlat2 = u_xlat9 * u_xlat6.xxxx + u_xlat2;
					        u_xlat6 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(23.2900009, 24.6599998, 26.0300007, 27.3999996);
					        u_xlat9 = u_xlat6.xxyy * u_xlat7.zwzw;
					        u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.0, 1.0);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat11.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat0.x * u_xlat39;
					        u_xlat1.x = u_xlat3.x + (-u_xlat10.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat11.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat12.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat11.w = u_xlat39 * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					        u_xlat10 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat8 = u_xlat12 * u_xlat10.xxxx + u_xlat8;
					        u_xlat2 = u_xlat11 * u_xlat10.xxxx + u_xlat2;
					        u_xlat39 = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.382683396, -0.923879385);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat0.x * u_xlat39;
					        u_xlat1.x = u_xlat3.x + (-u_xlat9.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat9 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat8 = u_xlat11 * u_xlat9.xxxx + u_xlat8;
					        u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					        u_xlat6 = u_xlat6.zzww * u_xlat7.zwzw;
					        u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.382683486, 0.923879385);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat0.x * u_xlat39;
					        u_xlat1.x = u_xlat3.x + (-u_xlat9.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat9 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat8 = u_xlat11 * u_xlat9.xxxx + u_xlat8;
					        u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					        u_xlat39 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, -0.707106829);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat0.x * u_xlat39;
					        u_xlat1.x = u_xlat3.x + (-u_xlat6.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat9.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat6.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat6.xyz * u_xlat9.www;
					        u_xlat6 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat8 = u_xlat10 * u_xlat6.xxxx + u_xlat8;
					        u_xlat2 = u_xlat9 * u_xlat6.xxxx + u_xlat2;
					        u_xlat6 = vec4(vec4(_TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset, _TemporalUVOffset)) + vec4(28.7700005, 30.1399994, 31.5100002, 32.8800011);
					        u_xlat9 = u_xlat6.xxyy * u_xlat7.zwzw;
					        u_xlat9 = u_xlat9 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat9.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.923879385, -0.382683486);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat10 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat11 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat11.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat0.x * u_xlat39;
					        u_xlat1.x = u_xlat3.x + (-u_xlat10.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat11.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat12.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat11.w = u_xlat39 * u_xlat11.z + 0.00100000005;
					        u_xlat12.xyz = u_xlat10.xyz * u_xlat12.www;
					        u_xlat11.xyz = u_xlat10.xyz * u_xlat11.www;
					        u_xlat10 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat8 = u_xlat12 * u_xlat10.xxxx + u_xlat8;
					        u_xlat2 = u_xlat11 * u_xlat10.xxxx + u_xlat2;
					        u_xlat39 = dot(u_xlat9.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat9.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(1.0, 0.0);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat9 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat10 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat10.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat0.x * u_xlat39;
					        u_xlat1.x = u_xlat3.x + (-u_xlat9.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat10.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat11.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat10.w = u_xlat39 * u_xlat10.z + 0.00100000005;
					        u_xlat11.xyz = u_xlat9.xyz * u_xlat11.www;
					        u_xlat10.xyz = u_xlat9.xyz * u_xlat10.www;
					        u_xlat9 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat8 = u_xlat11 * u_xlat9.xxxx + u_xlat8;
					        u_xlat2 = u_xlat10 * u_xlat9.xxxx + u_xlat2;
					        u_xlat6 = u_xlat6.zzww * u_xlat7;
					        u_xlat6 = u_xlat6 * vec4(0.000231481477, 0.000231481477, 0.000231481477, 0.000231481477) + vec4(0.25, 0.0, 0.25, 0.0);
					        u_xlat39 = dot(u_xlat6.xy, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.xy * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(0.923879385, 0.382683486);
					        u_xlat1.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat16.xy = u_xlat1.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat7 = textureLod(_HalfResSourceDepthTexture, u_xlat16.xy, 0.0);
					        u_xlat9 = textureLod(_PresortTexture, u_xlat16.xy, 0.0);
					        u_xlat39 = dot(u_xlat1.xy, u_xlat1.xy);
					        u_xlat39 = sqrt(u_xlat39);
					        u_xlat39 = u_xlat9.x * 10.0 + (-u_xlat39);
					        u_xlat39 = u_xlat39 + 0.25;
					        u_xlat39 = u_xlat39 * 4.0;
					        u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					        u_xlat39 = u_xlat0.x * u_xlat39;
					        u_xlat1.x = u_xlat3.x + (-u_xlat7.w);
					        u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					        u_xlat14 = u_xlat9.y * u_xlat39;
					        u_xlat1.x = u_xlat1.x + 1.0;
					        u_xlat10.w = u_xlat14 * u_xlat1.x + 0.00100000005;
					        u_xlat9.w = u_xlat39 * u_xlat9.z + 0.00100000005;
					        u_xlat10.xyz = u_xlat7.xyz * u_xlat10.www;
					        u_xlat9.xyz = u_xlat7.xyz * u_xlat9.www;
					        u_xlat7 = textureLod(_ExclusionMask, u_xlat16.xy, 0.0);
					        u_xlat8 = u_xlat10 * u_xlat7.xxxx + u_xlat8;
					        u_xlat2 = u_xlat9 * u_xlat7.xxxx + u_xlat2;
					        u_xlat39 = dot(u_xlat6.zw, vec2(3571.0, 3571.0));
					        u_xlat1.xy = u_xlat6.zw * vec2(u_xlat39);
					        u_xlat1.xy = fract(u_xlat1.xy);
					        u_xlat1.xy = u_xlat1.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					        u_xlat1.xy = u_xlat1.xy * vec2(0.349999994, 0.349999994) + vec2(-0.707106829, 0.707106829);
					        u_xlat26.xy = u_xlat26.xx * u_xlat1.xy;
					        u_xlat1.xy = u_xlat26.xy * _ScionResolutionParameters2.xy + vs_TEXCOORD0.xy;
					        u_xlat6 = textureLod(_HalfResSourceDepthTexture, u_xlat1.xy, 0.0);
					        u_xlat7 = textureLod(_PresortTexture, u_xlat1.xy, 0.0);
					        u_xlat26.x = dot(u_xlat26.xy, u_xlat26.xy);
					        u_xlat26.x = sqrt(u_xlat26.x);
					        u_xlat26.x = u_xlat7.x * 10.0 + (-u_xlat26.x);
					        u_xlat26.x = u_xlat26.x + 0.25;
					        u_xlat26.x = u_xlat26.x * 4.0;
					        u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					        u_xlat0.x = u_xlat0.x * u_xlat26.x;
					        u_xlat26.x = u_xlat3.x + (-u_xlat6.w);
					        u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
					        u_xlat39 = u_xlat7.y * u_xlat0.x;
					        u_xlat26.x = u_xlat26.x + 1.0;
					        u_xlat3.w = u_xlat39 * u_xlat26.x + 0.00100000005;
					        u_xlat7.w = u_xlat0.x * u_xlat7.z + 0.00100000005;
					        u_xlat3.xyz = u_xlat3.www * u_xlat6.xyz;
					        u_xlat7.xyz = u_xlat6.xyz * u_xlat7.www;
					        u_xlat6 = textureLod(_ExclusionMask, u_xlat1.xy, 0.0);
					        u_xlat5 = u_xlat3 * u_xlat6.xxxx + u_xlat8;
					        u_xlat4 = u_xlat7 * u_xlat6.xxxx + u_xlat2;
					    }
					    u_xlat0.x = max(u_xlat13, 0.5);
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat5.w;
					    u_xlat0.x = u_xlat0.x * 0.125663713;
					    u_xlat0 = u_xlat0.xxxx;
					    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
					    u_xlat1.x = u_xlat4.w + 9.99999994e-09;
					    u_xlat1.xyz = u_xlat4.xyz / u_xlat1.xxx;
					    u_xlat2.x = u_xlat5.w + 9.99999994e-09;
					    u_xlat2.xyz = u_xlat5.xyz / u_xlat2.xxx;
					    u_xlat2.xyz = (-u_xlat1.xyz) + u_xlat2.xyz;
					    SV_Target0.xyz = u_xlat0.www * u_xlat2.xyz + u_xlat1.xyz;
					    SV_Target0.w = u_xlat1.w;
					    SV_Target1 = u_xlat0;
					    return;
					}"
				}
			}
		}
		Pass {
			Name "FOCALDISTANCEVISUALIZATION"
			ZClip Off
			ZWrite Off
			Cull Off
			Fog {
				Mode Off
			}
			GpuProgramID 879995
			Program "vp" {
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" }
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _CoCParams2;
					//   sampler2D _HalfResSourceDepthTexture;
					//   sampler2D _VirtualCameraTexture2;
					//
					//
					// Registers:
					//
					//   Name                       Reg   Size
					//   -------------------------- ----- ----
					//   _CoCParams2                c0       1
					//   _VirtualCameraTexture2     s0       1
					//   _HalfResSourceDepthTexture s1       1
					//
					
					    ps_3_0
					    def c1, 1, 0, 0.5, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    mul r0, c1.xxyy, v0.xyxx
					    texldl r0, r0, s1
					    rcp r0.x, r0.w
					    texldl r1, c1.zzyy, s0
					    mad r0.x, r0.x, r1.y, r1.z
					    rcp r0.y, c0.x
					    mul oC0.xyz, r0.y, r0_abs.x
					    mov oC0.w, c1.x
					
					// approximately 10 instruction slots used (4 texture, 6 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_MANUAL" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[11];
						vec4 _CoCParams2;
						vec4 unused_0_2[9];
					};
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _VirtualCameraTexture2;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					void main()
					{
					    u_xlat0 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat0.x = float(1.0) / u_xlat0.w;
					    u_xlat1 = textureLod(_VirtualCameraTexture2, vec2(0.5, 0.5), 0.0);
					    u_xlat0.x = u_xlat0.x * u_xlat1.y + u_xlat1.z;
					    SV_Target0.xyz = abs(u_xlat0.xxx) / _CoCParams2.xxx;
					    SV_Target0.w = 1.0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _CoCParams1;
					//   float4 _CoCParams2;
					//   sampler2D _HalfResSourceDepthTexture;
					//   sampler2D _VirtualCameraTexture2;
					//
					//
					// Registers:
					//
					//   Name                       Reg   Size
					//   -------------------------- ----- ----
					//   _CoCParams1                c0       1
					//   _CoCParams2                c1       1
					//   _VirtualCameraTexture2     s0       1
					//   _HalfResSourceDepthTexture s1       1
					//
					
					    ps_3_0
					    def c2, 1, 0, 0.5, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    mul r0, c2.xxyy, v0.xyxx
					    texldl r0, r0, s1
					    add r0.x, -r0.w, c0.z
					    max r1.x, r0.x, -c0.w
					    min r0.x, c0.w, r1.x
					    add r0.x, r0.x, r0.w
					    rcp r0.x, r0.x
					    texldl r1, c2.zzyy, s0
					    mad r0.x, r0.x, r1.y, r1.z
					    rcp r0.y, c1.x
					    mul oC0.xyz, r0.y, r0_abs.x
					    mov oC0.w, c2.x
					
					// approximately 14 instruction slots used (4 texture, 10 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_RANGE" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[10];
						vec4 _CoCParams1;
						vec4 _CoCParams2;
						vec4 unused_0_3[9];
					};
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _VirtualCameraTexture2;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					void main()
					{
					    u_xlat0 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat0.x = (-u_xlat0.w) + _CoCParams1.z;
					    u_xlat0.x = max(u_xlat0.x, (-_CoCParams1.w));
					    u_xlat0.x = min(u_xlat0.x, _CoCParams1.w);
					    u_xlat0.x = u_xlat0.x + u_xlat0.w;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat1 = textureLod(_VirtualCameraTexture2, vec2(0.5, 0.5), 0.0);
					    u_xlat0.x = u_xlat0.x * u_xlat1.y + u_xlat1.z;
					    SV_Target0.xyz = abs(u_xlat0.xxx) / _CoCParams2.xxx;
					    SV_Target0.w = 1.0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _AvgCenterDepth;
					//   float4 _CoCParams2;
					//   sampler2D _HalfResSourceDepthTexture;
					//   float4 _VirtualCameraParams2;
					//   sampler2D _VirtualCameraTexture1;
					//
					//
					// Registers:
					//
					//   Name                       Reg   Size
					//   -------------------------- ----- ----
					//   _VirtualCameraParams2      c0       1
					//   _CoCParams2                c1       1
					//   _VirtualCameraTexture1     s0       1
					//   _HalfResSourceDepthTexture s1       1
					//   _AvgCenterDepth            s2       1
					//
					
					    ps_3_0
					    def c2, 1, 0, 0.5, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    texldl r0, c2.zzyy, s0
					    rcp r0.x, r0.w
					    mul r0.y, c0.y, c0.y
					    mul r0.x, r0.x, r0.y
					    texldl r1, c2.zzyy, s2
					    mul r0.y, r0.x, r1.x
					    add r0.z, r1.x, -c0.y
					    rcp r0.z, r0.z
					    mul r1.x, r0.z, r0.y
					    mul r1.y, r0.z, -r0.x
					    mul r0.xy, r1, c0.w
					    mul r1, c2.xxyy, v0.xyxx
					    texldl r1, r1, s1
					    rcp r0.z, r1.w
					    mad r0.x, r0.z, r0.x, r0.y
					    rcp r0.y, c1.x
					    mul oC0.xyz, r0.y, r0_abs.x
					    mov oC0.w, c2.x
					
					// approximately 21 instruction slots used (6 texture, 15 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_AUTO" "SC_DOF_FOCUS_CENTER" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[8];
						vec4 _VirtualCameraParams2;
						vec4 unused_0_2[2];
						vec4 _CoCParams2;
						vec4 unused_0_4[9];
					};
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _AvgCenterDepth;
					uniform  sampler2D _VirtualCameraTexture1;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					float u_xlat2;
					float u_xlat4;
					void main()
					{
					    u_xlat0 = textureLod(_VirtualCameraTexture1, vec2(0.5, 0.5), 0.0);
					    u_xlat0.x = _VirtualCameraParams2.y / u_xlat0.w;
					    u_xlat0.x = u_xlat0.x * _VirtualCameraParams2.y;
					    u_xlat1 = textureLod(_AvgCenterDepth, vec2(0.5, 0.5), 0.0);
					    u_xlat2 = u_xlat0.x * u_xlat1.x;
					    u_xlat4 = u_xlat1.x + (-_VirtualCameraParams2.y);
					    u_xlat4 = float(1.0) / u_xlat4;
					    u_xlat1.x = u_xlat4 * u_xlat2;
					    u_xlat1.y = u_xlat4 * (-u_xlat0.x);
					    u_xlat0.xy = u_xlat1.xy * _VirtualCameraParams2.ww;
					    u_xlat1 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat4 = float(1.0) / u_xlat1.w;
					    u_xlat0.x = u_xlat4 * u_xlat0.x + u_xlat0.y;
					    SV_Target0.xyz = abs(u_xlat0.xxx) / _CoCParams2.xxx;
					    SV_Target0.w = 1.0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _CoCParams1;
					//   float4 _CoCParams2;
					//   sampler2D _HalfResSourceDepthTexture;
					//
					//
					// Registers:
					//
					//   Name                       Reg   Size
					//   -------------------------- ----- ----
					//   _CoCParams1                c0       1
					//   _CoCParams2                c1       1
					//   _HalfResSourceDepthTexture s0       1
					//
					
					    ps_3_0
					    def c2, 1, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    mul r0, c2.xxyy, v0.xyxx
					    texldl r0, r0, s0
					    rcp r0.x, r0.w
					    mad r0.x, r0.x, c0.x, c0.y
					    rcp r0.y, c1.x
					    mul oC0.xyz, r0.y, r0_abs.x
					    mov oC0.w, c2.x
					
					// approximately 8 instruction slots used (2 texture, 6 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_MANUAL" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[10];
						vec4 _CoCParams1;
						vec4 _CoCParams2;
						vec4 unused_0_3[9];
					};
					uniform  sampler2D _HalfResSourceDepthTexture;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat0.x = float(1.0) / u_xlat0.w;
					    u_xlat0.x = u_xlat0.x * _CoCParams1.x + _CoCParams1.y;
					    SV_Target0.xyz = abs(u_xlat0.xxx) / _CoCParams2.xxx;
					    SV_Target0.w = 1.0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _CoCParams1;
					//   float4 _CoCParams2;
					//   sampler2D _HalfResSourceDepthTexture;
					//
					//
					// Registers:
					//
					//   Name                       Reg   Size
					//   -------------------------- ----- ----
					//   _CoCParams1                c0       1
					//   _CoCParams2                c1       1
					//   _HalfResSourceDepthTexture s0       1
					//
					
					    ps_3_0
					    def c2, 1, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    mul r0, c2.xxyy, v0.xyxx
					    texldl r0, r0, s0
					    add r0.x, -r0.w, c0.z
					    max r1.x, r0.x, -c0.w
					    min r0.x, c0.w, r1.x
					    add r0.x, r0.x, r0.w
					    rcp r0.x, r0.x
					    mad r0.x, r0.x, c0.x, c0.y
					    rcp r0.y, c1.x
					    mul oC0.xyz, r0.y, r0_abs.x
					    mov oC0.w, c2.x
					
					// approximately 12 instruction slots used (2 texture, 10 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_RANGE" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[10];
						vec4 _CoCParams1;
						vec4 _CoCParams2;
						vec4 unused_0_3[9];
					};
					uniform  sampler2D _HalfResSourceDepthTexture;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat0.x = (-u_xlat0.w) + _CoCParams1.z;
					    u_xlat0.x = max(u_xlat0.x, (-_CoCParams1.w));
					    u_xlat0.x = min(u_xlat0.x, _CoCParams1.w);
					    u_xlat0.x = u_xlat0.x + u_xlat0.w;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * _CoCParams1.x + _CoCParams1.y;
					    SV_Target0.xyz = abs(u_xlat0.xxx) / _CoCParams2.xxx;
					    SV_Target0.w = 1.0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" }
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _AvgCenterDepth;
					//   float4 _CoCParams2;
					//   sampler2D _HalfResSourceDepthTexture;
					//   float4 _VirtualCameraParams1;
					//   float4 _VirtualCameraParams2;
					//
					//
					// Registers:
					//
					//   Name                       Reg   Size
					//   -------------------------- ----- ----
					//   _VirtualCameraParams1      c0       1
					//   _VirtualCameraParams2      c1       1
					//   _CoCParams2                c2       1
					//   _HalfResSourceDepthTexture s0       1
					//   _AvgCenterDepth            s1       1
					//
					
					    ps_3_0
					    def c3, 1, 0, 0.5, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    rcp r0.x, c0.y
					    mul r0.y, c1.y, c1.y
					    mul r0.x, r0.x, r0.y
					    texldl r1, c3.zzyy, s1
					    mul r0.y, r0.x, r1.x
					    add r0.z, r1.x, -c1.y
					    rcp r0.z, r0.z
					    mul r1.x, r0.z, r0.y
					    mul r1.y, r0.z, -r0.x
					    mul r0.xy, r1, c1.w
					    mul r1, c3.xxyy, v0.xyxx
					    texldl r1, r1, s0
					    rcp r0.z, r1.w
					    mad r0.x, r0.z, r0.x, r0.y
					    rcp r0.y, c2.x
					    mul oC0.xyz, r0.y, r0_abs.x
					    mov oC0.w, c3.x
					
					// approximately 19 instruction slots used (4 texture, 15 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SC_EXPOSURE_MANUAL" "SC_DOF_FOCUS_CENTER" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[7];
						vec4 _VirtualCameraParams1;
						vec4 _VirtualCameraParams2;
						vec4 unused_0_3[2];
						vec4 _CoCParams2;
						vec4 unused_0_5[9];
					};
					uniform  sampler2D _HalfResSourceDepthTexture;
					uniform  sampler2D _AvgCenterDepth;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec2 u_xlat0;
					vec4 u_xlat1;
					float u_xlat2;
					float u_xlat4;
					void main()
					{
					    u_xlat0.x = _VirtualCameraParams2.y / _VirtualCameraParams1.y;
					    u_xlat0.x = u_xlat0.x * _VirtualCameraParams2.y;
					    u_xlat1 = textureLod(_AvgCenterDepth, vec2(0.5, 0.5), 0.0);
					    u_xlat2 = u_xlat0.x * u_xlat1.x;
					    u_xlat4 = u_xlat1.x + (-_VirtualCameraParams2.y);
					    u_xlat4 = float(1.0) / u_xlat4;
					    u_xlat1.x = u_xlat4 * u_xlat2;
					    u_xlat1.y = u_xlat4 * (-u_xlat0.x);
					    u_xlat0.xy = u_xlat1.xy * _VirtualCameraParams2.ww;
					    u_xlat1 = textureLod(_HalfResSourceDepthTexture, vs_TEXCOORD0.xy, 0.0);
					    u_xlat4 = float(1.0) / u_xlat1.w;
					    u_xlat0.x = u_xlat4 * u_xlat0.x + u_xlat0.y;
					    SV_Target0.xyz = abs(u_xlat0.xxx) / _CoCParams2.xxx;
					    SV_Target0.w = 1.0;
					    return;
					}"
				}
			}
		}
		Pass {
			Name "BILATERALALPHA"
			ZClip Off
			ZWrite Off
			Cull Off
			Fog {
				Mode Off
			}
			GpuProgramID 968034
			Program "vp" {
				SubProgram "d3d9 " {
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _AlphaTexture;
					//
					//
					// Registers:
					//
					//   Name          Reg   Size
					//   ------------- ----- ----
					//   _AlphaTexture s0       1
					//
					
					    ps_3_0
					    def c0, 1, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    mul r0, c0.xxyy, v0.xyxx
					    texldl r0, r0, s0
					    mov oC0, r0.x
					
					// approximately 4 instruction slots used (2 texture, 2 arithmetic)"
				}
				SubProgram "d3d11 " {
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					uniform  sampler2D _AlphaTexture;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = textureLod(_AlphaTexture, vs_TEXCOORD0.xy, 0.0);
					    SV_Target0 = u_xlat0.xxxx * vec4(1.0, 1.0, 1.0, 1.0);
					    return;
					}"
				}
			}
		}
		Pass {
			Name "DEPTHBUFFERCOPY"
			ZClip Off
			ZWrite Off
			Cull Off
			Fog {
				Mode Off
			}
			GpuProgramID 997133
			Program "vp" {
				SubProgram "d3d9 " {
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o1.xy, v1
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 7 instruction slots used"
				}
				SubProgram "d3d11 " {
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _CameraDepthTexture;
					//   float4 _ZBufferParams;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   _ZBufferParams      c0       1
					//   _CameraDepthTexture s0       1
					//
					
					    ps_3_0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    texld r0, v0, s0
					    mad r0.x, c0.z, r0.x, c0.w
					    rcp oC0, r0.x
					
					// approximately 3 instruction slots used (1 texture, 2 arithmetic)"
				}
				SubProgram "d3d11 " {
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerCamera {
						vec4 unused_0_0[7];
						vec4 _ZBufferParams;
						vec4 unused_0_2;
					};
					uniform  sampler2D _CameraDepthTexture;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = texture(_CameraDepthTexture, vs_TEXCOORD0.xy);
					    u_xlat0.x = _ZBufferParams.z * u_xlat0.x + _ZBufferParams.w;
					    SV_Target0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0.xxxx;
					    return;
					}"
				}
			}
		}
	}
}